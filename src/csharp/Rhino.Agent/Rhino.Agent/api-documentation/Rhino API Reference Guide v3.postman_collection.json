{
	"info": {
		"_postman_id": "e39fb28b-3c4a-4664-9f06-cde9a3fe5ad8",
		"name": "Rhino API Reference Guide v3",
		"description": "Learn how to access and use Rhinoâ€™s API to integrate automated testing frameworks, submit test results, and automate various other aspects of your applications via simple HTTP requests.\r\n\r\n# Reference\r\n\r\n***\r\n\r\n* Configurations\r\n* Test Cases\r\n* Page Models\r\n* Execution\r\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Configurations",
			"item": [
				{
					"name": "Documentation",
					"item": [
						{
							"name": "Create Configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86251e62-b756-4eac-8873-13e6a15aae86",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('configuration_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        },\r\n        {\r\n            \"driver\": \"FirefoxDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        }\r\n    ],\r\n    \"dataSource\": [],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_password}}\",\r\n        \"userName\": \"{{rhino_user}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								},
								"description": "Creates a new _**Rhino Configuration**_.\r\n\r\n```\r\nPOST /api/v3/configurations\r\n```\r\n\r\n### Request Fields\r\nThe request body follows the same format as [Get Configuration](#get-configuration) response content.\r\n\r\n### Request Example\r\n```js\r\n{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"http://localhost:4444/wd/hub\"\r\n        },\r\n        {\r\n            \"driver\": \"FirefoxDriver\",\r\n            \"driverBinaries\": \"http://localhost:4444/wd/hub\"\r\n        }\r\n    ],\r\n    \"dataSource\": [],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"<rhino_user>\",\r\n        \"userName\": \"<rhino_password>\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"<path_to_screenshots_folder>\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"<path_to_reports_folder>\",\r\n        \"logsOut\": \"<path_to_logs_folder>\",\r\n        \"reporters\": null,\r\n        \"connectionString\": null,\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}\r\n```\r\n\r\n### Response Codes\r\n|Code|Description                                                                                  |\r\n|----|---------------------------------------------------------------------------------------------|\r\n|201 |Success, the _**Configuration**_ created and identifier was returned as part of the response.|\r\n|400 |Bad Request, the request is missing a mandatory field(s) or bad formatted.                   |\r\n|500 |Fail, the server encountered an unexpected error.                                            |"
							},
							"response": [
								{
									"name": "Create Configuration",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        },\r\n        {\r\n            \"driver\": \"FirefoxDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        }\r\n    ],\r\n    \"dataSource\": [],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_user}}\",\r\n        \"userName\": \"{{rhino_password}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/configurations",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"configurations"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get Configurations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3629bde2-10df-4bcb-bac8-7b93bee68669",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								},
								"description": "Returns a list of available _**Rhino Configurations**_.\r\n\r\n```\r\nGET /api/v3/configurations\r\n```\r\n\r\n#### Response Content\r\n```js\r\n{\r\n    \"data\": {\r\n        \"configurations\": [\r\n        {\r\n            \"id\": \"03d1cd94-5e38-43d8-b010-e932d92f9067\",\r\n            \"models\": [\r\n                \"7adc7914-2bfe-41f0-9808-422bab5c412b\"\r\n            ],\r\n            \"tests\": [\r\n                \"8bed8025-3cgf-52g1-0919-533cbc6d523c\"\r\n            ]\r\n        },\r\n        ...\r\n    ]}\r\n}\r\n```\r\n\r\nThe example response includes one configuration group, with one elements collection and one tests collection.\r\n\r\n|Name    |Type  |Description                                                              |\r\n|--------|------|-------------------------------------------------------------------------|\r\n|id      |string|The ID of the _**Rhino Configuration**_.                                 |\r\n|models  |array |All available _**Rhino Page Models**_ for this _**Rhino Configuration**_.|\r\n|tests   |array |All available _**Tests Cases**_ for this _**Rhino Configuration**_.      |\r\n\r\n### Response Codes\r\n|Code|Description                                                                |\r\n|----|---------------------------------------------------------------------------|\r\n|200 |Success, the _**Rhino Collections**_ were returned as part of the response.|\r\n|500 |Fail, the server encountered an unexpected error.                          |"
							},
							"response": [
								{
									"name": "Get Configurations",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/configurations",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"configurations"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get Configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d5a1ceba-4d58-458b-96ea-7c2d72e6e4d3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Returns an existing _**Rhino Configuration**_.\r\n\r\n```\r\nGET /api/v3/configurations/:configuration_id\r\n```\r\n\r\n|Name            |Type  |Description                             |\r\n|----------------|------|----------------------------------------|\r\n|configuration_id|string|The ID of the _**Rhino Configuration**_.|\r\n\r\n### Response Content\r\nPlease see below for a typical response:\r\n\r\n```js\r\n{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox\",\r\n    \"testsRepository\": [\r\n        \"8bed8025-3cgf-52g1-0919-533cbc6d523c\"\r\n    ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"http://localhost:4444/wd/hub\"\r\n        },\r\n        {\r\n            \"driver\": \"FirefoxDriver\",\r\n            \"driverBinaries\": \"http://localhost:4444/wd/hub\"\r\n        }\r\n    ],\r\n    \"dataSource\": [],\r\n    \"models\": [\r\n        \"7adc7914-2bfe-41f0-9808-422bab5c412b\"\r\n    ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"<rhino_user>\",\r\n        \"userName\": \"<rhino_password>\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"<path_to_screenshots_folder>\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"<path_to_reports_folder>\",\r\n        \"logsOut\": \"<path_to_logs_folder>\",\r\n        \"reporters\": null,\r\n        \"connectionString\": null,\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}\r\n```\r\n\r\nThe following system fields are always included in the response:\r\n\r\n#### General\r\n|Name                    |Type  |Description                                                                                            |\r\n|------------------------|------|-------------------------------------------------------------------------------------------------------|\r\n|name                    |string|The name of this _**Rhino Configuration**_.                                                            |\r\n|testsRepository         |array |A collection of folders and files in which there are _**Rhino Test Cases**_.                           |\r\n|driverParameters        |array |A collection of parameters which represents the target platforms on which the tests will run.          |\r\n|dataSource              |array |A collection of data objects which will be cascaded as primary table for all _**Rhino Test Cases**_.   |\r\n|models                  |array |A collection of _**Rhino Page Models**_ sources.                                                       |\r\n|connector               |string|Connector implementation type to use with this _**Rhino Configuration**_.                              |\r\n|gravityEndpoint         |string|Gravity Server endpoint. Use to send requests using remote gravity service instead of embedded service.|\r\n|authentication          |string|User name and password for authentication on Rhino Service.                                            |\r\n|engineConfiguration     |object|Configure the automation engine behavior.                                                              |\r\n|screenshotsConfiguration|object|Configure the screenshot behavior.                                                                     |\r\n|reportConfiguration     |object|Configure the reporting behavior.                                                                      |\r\n\r\n#### Engine Authentication\r\n|Name    |Type  |Description                 |\r\n|--------|------|----------------------------|\r\n|userName|string|A valid Rhino API user name.|\r\n|password|string|A valid Rhino API password. |\r\n\r\n#### Engine Configuration\r\n|Name                    |Type   |Description                                                                                                            |\r\n|------------------------|-------|-----------------------------------------------------------------------------------------------------------------------|\r\n|maxParallel             |number |The maximum number of tests that will be executed in parallel.                                                         |\r\n|failOnException         |boolean|When set to true, test cases will fail if exceptions were thrown during test regardless of assertions passed or failed.|\r\n|optimalThreshold        |decimal|Any test which violates this threshold (in minutes), will be marked as non-optimal.                                    |\r\n|qualityThreshold        |decimal|Any test which violates this threshold (in percents), will be marked as failed.                                        |\r\n|toleranceThreshold      |decimal|Any test which falls within this threshold (in percents), will be marked as warning when fail.                         |\r\n|priority                |number |All tests with priority lower than this number will be marked as warning when fail.                                    |\r\n|severity                |number |All tests with severity lower than this number will be marked as warning when fail.                                    |\r\n|errorOnExitCode         |number |The error code (console application error code) which will cause the CI/CD process to fail.                            |\r\n|elementSearchingTimeout |number |The timeout in millisecond when searching for elements.                                                                |\r\n|pageLoadTimeout         |number |The timeout in millisecond when loading a page or application.                                                         |\r\n|retrunExceptions        |boolean|When set to false, exceptions will not be returned by Gravity engine. This might affect the tests results.             |\r\n|returnPerformancePoints |boolean|When set to false, performance data will not be returned by Gravity engine. This might affect the tests results.       |\r\n|returnEnvironment       |boolean|When set to true, will return the current Gravity Environment parameters.                                              |\r\n|terminateOnAssertFailure|boolean|When set to true, automation will stop if assertion any assertion action failed.                                       |\r\n|Integration             |string |3rd party platform integration. Available integrations are, BrowserStack and LambdaTest.                               |\r\n\r\n#### Screenshots Configuration\r\n|Name             |Type   |Description                                                                                               |\r\n|-----------------|-------|----------------------------------------------------------------------------------------------------------|\r\n|keepOriginal     |boolean|When set to true, will keep the original file created by Gravity engine, when creating a new Rhino report.|\r\n|onExceptionOnly  |boolean|When set to true, returns a screenshot only if exception was thrown during execution.                     |\r\n|returnScreenshots|boolean|When set to false, screenshots will be returned from Gravity engine.                                      |\r\n|screenshotsOut   |decimal|The directory in which to save automatic screenshots.                                                     |\r\n\r\n#### Report Configuration\r\n|Name            |Type   |Description                                                                                               |\r\n|----------------|-------|----------------------------------------------------------------------------------------------------------|\r\n|reportOut       |string |The directory in which to save reports.                                                                   |\r\n|logsOut         |string |The directory in which to save logs.                                                                      |\r\n|reporters       |array  |Reporters implementations to use with this configuration.                                                 |\r\n|connectionString|string |The reporter connection string (if needed or used by the provided implementations).                       |\r\n|dataProvider    |string |The reporter data provider (if needed or used by provided implementations).                               |\r\n|archive         |boolean|When set to true, will archive the report out folder as zip file and delete the original folder.          |\r\n|localReport     |boolean|When set to false, will not generate Rhino report.                                                        |\r\n|addGravityData  |boolean|When set to true, will save Gravity API requests and response along with the reports and logs information.|\r\n\r\n### Response Codes\r\n|Code|Description                                                           |\r\n|----|----------------------------------------------------------------------|\r\n|200 |Success, the _**Configuration**_ was returned as part of the response.|\r\n|500 |Fail, the server encountered an unexpected error.                     |"
							},
							"response": [
								{
									"name": "Get Configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/configurations/{{configuration_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"configurations",
												"{{configuration_id}}"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Edit Configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01400ad7-3e57-4783-893b-ee08ef5d4fbd",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox - After Update\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        },\r\n        {\r\n            \"driver\": \"FirefoxDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        }\r\n    ],\r\n    \"dataSource\": [],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_user}}\",\r\n        \"userName\": \"{{rhino_password}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Updates an existing _**Rhino Configuration**_.\r\n\r\n```\r\nPUT /api/v3/configurations/:configuration_id\r\n```\r\n\r\n|Name            |Type  |Description                             |\r\n|----------------|------|----------------------------------------|\r\n|configuration_id|string|The ID of the _**Rhino Configuration**_.|\r\n\r\n### Request Fields\r\nThe request body follows the same format as [Get Configuration](#get-configuration) [Response Content](#response-content).\r\n\r\n### Request Example\r\n```js\r\n{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox - After Update\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"http://localhost:4444/wd/hub\"\r\n        },\r\n        {\r\n            \"driver\": \"FirefoxDriver\",\r\n            \"driverBinaries\": \"http://localhost:4444/wd/hub\"\r\n        }\r\n    ],\r\n    \"dataSource\": [],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"<rhino_user>\",\r\n        \"userName\": \"<rhino_password>\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"<path_to_screenshots_folder>\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"<path_to_reports_folder>\",\r\n        \"logsOut\": \"<path_to_logs_folder>\",\r\n        \"reporters\": null,\r\n        \"connectionString\": null,\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}\r\n```\r\n\r\n### Response Codes\r\n|Code|Description                                                                          |\r\n|----|-------------------------------------------------------------------------------------|\r\n|200 |Success, the _**Configuration**_ was returned as part of the response.               |\r\n|400 |Bad Request, the request is missing a mandatory field(s) or bad formatted.           |\r\n|404 |Not Found, the _**Configuration**_ was not found under the configurations collection.|\r\n|500 |Fail, the server encountered an unexpected error.                                    |"
							},
							"response": [
								{
									"name": "Edit Configuration",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox - After Update\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        },\r\n        {\r\n            \"driver\": \"FirefoxDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        }\r\n    ],\r\n    \"dataSource\": [],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_user}}\",\r\n        \"userName\": \"{{rhino_password}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/configurations/{{configuration_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"configurations",
												"{{configuration_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 15 Aug 2020 21:00:07 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Content-Length",
											"value": "1636"
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"Rhino Automation - Chrome & Firefox - After Update\",\n    \"testsRepository\": [],\n    \"driverParameters\": [\n        {\n            \"driver\": \"ChromeDriver\",\n            \"driverBinaries\": \"D:\\\\automation-env\\\\web-drivers\"\n        },\n        {\n            \"driver\": \"FirefoxDriver\",\n            \"driverBinaries\": \"D:\\\\automation-env\\\\web-drivers\"\n        }\n    ],\n    \"dataSource\": [],\n    \"models\": [],\n    \"connector\": \"connector_text\",\n    \"gravityEndpoint\": null,\n    \"authentication\": {\n        \"password\": \"Aa123456!\",\n        \"userName\": \"automation@rhino.api\"\n    },\n    \"engineConfiguration\": {\n        \"maxParallel\": 1,\n        \"failOnException\": false,\n        \"optimalThreshold\": 3,\n        \"qualityThreshold\": 0,\n        \"toleranceThreshold\": 0,\n        \"priority\": 0,\n        \"severity\": 0,\n        \"errorOnExitCode\": 0,\n        \"elementSearchingTimeout\": 15000,\n        \"pageLoadTimeout\": 60000,\n        \"retrunExceptions\": true,\n        \"returnPerformancePoints\": true,\n        \"returnEnvironment\": true,\n        \"terminateOnAssertFailure\": false\n    },\n    \"screenshotsConfiguration\": {\n        \"keepOriginal\": false,\n        \"returnScreenshots\": false,\n        \"screenshotsOut\": \"D:\\\\garbage\\\\imagesOut\"\n    },\n    \"reportConfiguration\": {\n        \"reportOut\": \"D:\\\\garbage\\\\RhinoReportPortal\\\\Test Run Reports\\\\rhino\",\n        \"reporters\": [\n            \"reporter_basic\",\n            \"reporter_warehouse\"\n        ],\n        \"connectionString\": \"Server=.\\\\SQLExpress;Database=TestingWarehouse;Trusted_Connection=True;User Id=<db_user>;Password=<db_password>;\",\n        \"dataProvider\": null,\n        \"archive\": false,\n        \"localReport\": true,\n        \"logsOut\": \"D:\\\\garbage\\\\RhinoReportPortal\\\\Logs\",\n        \"addGravityData\": true\n    }\n}"
								}
							]
						},
						{
							"name": "Delete Configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3f7954e4-20c8-47b0-b565-2e3e4f12f175",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Deletes an existing _**Rhino Configuration**_.\r\n\r\n```\r\nDELETE /api/v3/configurations/:configuration_id\r\n```\r\n\r\n|Name            |Type  |Description                             |\r\n|----------------|------|----------------------------------------|\r\n|configuration_id|string|The ID of the _**Rhino Configuration**_.|\r\n\r\n> Please Note: Deleting a configuration cannot be undone. It does not, however, affect test cases/models.\r\n\r\n### Response Codes\r\n|Code|Description                                                                          |\r\n|----|-------------------------------------------------------------------------------------|\r\n|204 |Success, the _**Configuration**_ was deleted.                                        |\r\n|404 |Not Found, the _**Configuration**_ was not found under the configurations collection.|\r\n|500 |Fail, the server encountered an unexpected error.                                    |"
							},
							"response": [
								{
									"name": "Delete Configuration",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/configurations/{{configuration_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"configurations",
												"{{configuration_id}}"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Delete Configurations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e18a865-c808-47bf-b725-4401185d0f8d",
										"exec": [
											"pm.test(\"Status code is not 500\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204,404]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								},
								"description": "Deletes all existing _**Rhino Configuration**_ for the authenticated user.\r\n\r\n```\r\nDELETE /api/v3/configurations\r\n```\r\n\r\n> Please Note: Deleting a configuration cannot be undone. It does not, however, affect test cases/models.\r\n\r\n### Response Codes\r\n|Code|Description                                      |\r\n|----|-------------------------------------------------|\r\n|204 |Success, the _**Configurations**_ were deleted.  |\r\n|500 |Fail, the server encountered an unexpected error.|"
							},
							"response": [
								{
									"name": "Get Configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/configurations/{{configuration_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"configurations",
												"{{configuration_id}}"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"description": "This guide explains how to access and use _**Automation Configurations API**_ to create configurations for executing automation testing.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c351a0f2-13a7-44fe-92d3-7d1bc3021375",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ebae2437-3540-40e7-80de-3ca0db5889e0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tests: Sanity",
					"item": [
						{
							"name": "Flow Action #01: Create Configuration - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5ea3d9c-5889-4800-a221-4e27c3290f3b",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('configuration_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        },\r\n        {\r\n            \"driver\": \"FirefoxDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        }\r\n    ],\r\n    \"dataSource\": [],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_password}}\",\r\n        \"userName\": \"{{rhino_user}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								},
								"description": "Creates a valid configuration"
							},
							"response": []
						},
						{
							"name": "Flow Action #02: Create Configuration - Negative",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a0d34f2f-459b-4834-8d23-58f8a6368863",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [ ],\r\n    \"dataSource\": [],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_password}}\",\r\n        \"userName\": \"{{rhino_user}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								},
								"description": "Creates an invalid configuration"
							},
							"response": []
						},
						{
							"name": "Flow Action #03: Update Configuration - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0560c470-baf3-4ab5-bf76-07fc973b5a59",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Configuration name updated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.name.includes(\"After Update\");\r",
											"});\r",
											"\r",
											"pm.test(\"Driver parameters count\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.driverParameters.length === 4;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox - After Update\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        },\r\n        {\r\n            \"driver\": \"FirefoxDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        },\r\n        {\r\n            \"driver\": \"EdgeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        },\r\n        {\r\n            \"driver\": \"IEDriverServer\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        }        \r\n    ],\r\n    \"dataSource\": [],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_user}}\",\r\n        \"userName\": \"{{rhino_password}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Update configuration"
							},
							"response": []
						},
						{
							"name": "Flow Action #04: Update Configuration - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "055be163-8dea-4168-a732-5c860e773379",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        },\r\n        {\r\n            \"driver\": \"FirefoxDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        }      \r\n    ],\r\n    \"dataSource\": [],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_user}}\",\r\n        \"userName\": \"{{rhino_password}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations/not_an_id",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations",
										"not_an_id"
									]
								},
								"description": "Update non existing configuration"
							},
							"response": []
						},
						{
							"name": "Flow Action #05: Update Configuration - Negative",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c03f0f41-1f8e-46c2-9039-94f02d17427d",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [ ],\r\n    \"dataSource\": [ ],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_user}}\",\r\n        \"userName\": \"{{rhino_password}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Update an invalid configuration"
							},
							"response": []
						},
						{
							"name": "Flow Action #06: Delete Configurations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eda4f7e7-faae-44d1-aad5-32e07c104a9a",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								},
								"description": "Delete all configurations"
							},
							"response": []
						},
						{
							"name": "Flow Action #07: Get Configurations - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7635e25-b6d8-4383-bb71-8b4f7b0a0c02",
										"exec": [
											"pm.test(\"Configurtions count\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.length === 0;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								},
								"description": "Gets all configurations"
							},
							"response": []
						},
						{
							"name": "Flow Action #08: Get Configuration - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81e531ed-ab7c-4495-adfe-f0ceedc31aa2",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Gets a single configuration"
							},
							"response": []
						},
						{
							"name": "Flow Action #09: Create Configuration - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a65e8f42-a49c-4469-858c-0e7467d8e1c6",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('configuration_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        },\r\n        {\r\n            \"driver\": \"FirefoxDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        }\r\n    ],\r\n    \"dataSource\": [],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_password}}\",\r\n        \"userName\": \"{{rhino_user}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								},
								"description": "Creates a valid configuration"
							},
							"response": []
						},
						{
							"name": "Flow Action #10: Create Configuration - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17810b9f-e62f-41de-ac53-5cdf4dd82897",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('configuration_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        },\r\n        {\r\n            \"driver\": \"FirefoxDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        }\r\n    ],\r\n    \"dataSource\": [],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_password}}\",\r\n        \"userName\": \"{{rhino_user}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								},
								"description": "Creates a valid configuration"
							},
							"response": []
						},
						{
							"name": "Flow Action #11: Get Configurations - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2888ea00-52c3-4857-8e24-933e6553f31d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Driver parameters count\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.length === 2;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								},
								"description": "Gets all configurations"
							},
							"response": []
						},
						{
							"name": "Flow Action #12: Get Configuration - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2156f115-a577-4c8a-830d-326eb734d009",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Gets a single configuration"
							},
							"response": []
						},
						{
							"name": "Flow Action #13: Delete Configuration - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9a8d8891-e32a-498b-a9ab-c4ebb1fd7e0d",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Delete a single configuration"
							},
							"response": []
						},
						{
							"name": "Flow Action #14: Delete Configuration - Negative",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b37b474-2961-4986-8140-dd0ca955c9b2",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Delete a single configuration"
							},
							"response": []
						},
						{
							"name": "Flow Action #15: Create Configuration - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a83a83a-f550-467f-81c5-2a3da529e39b",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('configuration_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        },\r\n        {\r\n            \"driver\": \"FirefoxDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        }\r\n    ],\r\n    \"dataSource\": [],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_password}}\",\r\n        \"userName\": \"{{rhino_user}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								},
								"description": "Creates a valid configuration"
							},
							"response": []
						},
						{
							"name": "Flow Action #16: Get Configurations - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d5efaf6-5606-4732-b426-de703b78e5e3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Driver parameters count\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.length === 2;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								},
								"description": "Gets all configurations"
							},
							"response": []
						},
						{
							"name": "Flow Action #17: Delete Configurations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5fca720b-7588-4ee4-b344-f2df04138d3f",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								},
								"description": "Delete all configurations"
							},
							"response": []
						},
						{
							"name": "Flow Action #18: Get Configurations - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5618e74-54a8-4b3f-ac03-ae8ecc034f79",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Driver parameters count\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.length === 0;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								},
								"description": "Gets all configurations"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "# API - Introduction\r\nUse the following API methods to request details about _**Rhino Configurations**_ and to create or modify them.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2d7d1d2f-915e-40cd-b94f-15fd32bf5902",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "864ec75e-9a49-4053-a4f1-e5ea6716fb2e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Page Models",
			"item": [
				{
					"name": "Documentation",
					"item": [
						{
							"name": "Create Models Collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2353ab23-1fdf-4ae5-9c29-d4391cbcc906",
										"exec": [
											"pm.test(\"Status code is 201\", function () {    \r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('collection_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": \"Students Input Models\",\n        \"entries\": [\n            {\n                \"name\": \"search students text-box\",\n                \"value\": \"#SearchString\",\n                \"type\": \"css selector\",\n                \"comment\": \"Search students text-box on the top center panel under students page.\"\n            },\n            {\n                \"name\": \"search students button\",\n                \"value\": \"//input[@id='SearchButton']\",\n                \"comment\": \"Search students button on the top center panel under students page.\"\n            }    \n        ],\n        \"context\": {\n            \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/models",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models"
									]
								},
								"description": "Creates a new _**Rhino Model**_.\r\n\r\n```\r\nPOST /api/v3/models\r\n```\r\n\r\n### Request Fields\r\nThe request body follows the same format as [Get Model](#get-model) response content.\r\n\r\n### Request Example\r\n```js\r\n[\r\n  {\r\n    \"name\": \"Students Input Models\",\r\n    \"entries\": [\r\n      {\r\n        \"name\": \"search students text-box\",\r\n        \"value\": \"#SearchString\",\r\n        \"type\": \"css selector\",\r\n        \"comment\": \"Search students text-box on the top center panel under students page.\"\r\n      },\r\n      {\r\n        \"name\": \"search students button\",\r\n        \"value\": \"//input[@id='SearchButton']\",\r\n        \"type\": \"xpath\",\r\n        \"comment\": \"Search students button on the top center panel under students page.\"\r\n      }\r\n    ],\r\n    \"context\": {\r\n      \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    }\r\n  }\r\n]\r\n```\r\n\r\n### Response Codes\r\n|Code|Description                                                                                      |\r\n|----|-------------------------------------------------------------------------------------------------|\r\n|201 |Success, the _**Models Collection**_ created and identifier was returned as part of the response.|\r\n|400 |Bad Request, the request is missing a mandatory field(s) or bad formatted.                       |\r\n|500 |Fail, the server encountered an unexpected error.                                                |"
							},
							"response": [
								{
									"name": "Create Models Collection",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"name\": \"Students Input Models\",\n        \"entries\": [\n            {\n                \"name\": \"search students text-box\",\n                \"value\": \"#SearchString\",\n                \"type\": \"css selector\",\n                \"comment\": \"Search students text-box on the top center panel under students page.\"\n            },\n            {\n                \"name\": \"search students button\",\n                \"value\": \"//input[@id='SearchButton']\",\n                \"comment\": \"Search students button on the top center panel under students page.\"\n            }    \n        ],\n        \"context\": {\n            \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\n        }\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/models",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"models"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get Models",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81b2158f-54a2-4182-b3c0-5e05a83d25cf",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models"
									]
								},
								"description": "Returns a list of available _**Rhino Models**_.\r\n\r\n```\r\nGET /api/v3/models\r\n```\r\n\r\n#### Response Content\r\n```js\r\n{\r\n  \"data\": {\r\n    \"collection\": [\r\n      {\r\n        \"id\": \"1ed4ea1c-9959-40d7-b40e-717b8fc1cfb4\",\r\n        \"configurations\": [\r\n          \"03d1cd94-5e38-43d8-b010-e932d92f9067\",\r\n          \"8bed8025-3cgf-52g1-0919-533cbc6d523c\"\r\n        ],\r\n        \"models\": 1,\r\n        \"entries\": 3\r\n      },\r\n      {\r\n        \"id\": \"ba6b3da7-1979-48ea-9b00-e30682f5f111\",\r\n        \"configurations\": [],\r\n        \"models\": 1,\r\n        \"entries\": 3\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nThe example response includes 2 models, with 1 entries each and 2 configurations for one of them.\r\n\r\n|Name          |Type  |Description                                      |\r\n|--------------|------|-------------------------------------------------|\r\n|id            |string|The ID of the _**Rhino Models**_.                |\r\n|configurations|array |All _**Rhino Models**_ which are using the model.|\r\n|models        |number|Total models under the models collection.        |\r\n|entries       |number|Total entries (elements) under the model.        |"
							},
							"response": [
								{
									"name": "Get Models",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/models",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"models"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get Models Collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9371b14e-64d7-4895-933a-73c7217027d3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models/{{collection_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"{{collection_id}}"
									]
								},
								"description": "Returns an existing _**Rhino Model**_ collection.\r\n\r\n```\r\nGET /api/v3/models/:collection_id\r\n```\r\n\r\n|Name         |Type  |Description                                |\r\n|-------------|------|-------------------------------------------|\r\n|collection_id|string|The ID of the _**Rhino Model**_ collection.|\r\n\r\n### Response Content\r\nPlease see below for a typical response:\r\n\r\n```js\r\n[\r\n  {\r\n    \"name\": \"Students Input Models\",\r\n    \"entries\": [\r\n      {\r\n        \"name\": \"search students text-box\",\r\n        \"value\": \"#SearchString\",\r\n        \"type\": \"css selector\",\r\n        \"comment\": \"Search students text-box on the top center panel under students page.\"\r\n      },\r\n      {\r\n        \"name\": \"search students button\",\r\n        \"value\": \"//input[@id='SearchButton']\",\r\n        \"type\": \"xpath\",\r\n        \"comment\": \"Search students button on the top center panel under students page.\"\r\n      }\r\n    ],\r\n    \"context\": {\r\n      \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    }\r\n  },\r\n  \"name\": \"Students Table Models\",\r\n  ...\r\n]\r\n```\r\n\r\nThe following system fields are always included in the response:\r\n\r\n#### General\r\n|Name                   |Type  |Description                                                         |\r\n|-----------------------|------|--------------------------------------------------------------------|\r\n|name                   |string|The name of this _**Rhino Model**_.                                 |\r\n|[entries](#model-entry)|array |A collection of _**Rhino Model Entry**_.                            |\r\n|context                |object|A free style object which can be used to further describe the model.|\r\n\r\n#### Model Entry\r\n|Name   |Type  |Description                                                                                |\r\n|-------|------|-------------------------------------------------------------------------------------------|\r\n|name   |string|The name of the element (required and must be compliant with Rhino's language rules).      |\r\n|value  |string|The value of selected locator (required).                                                  |\r\n|type   |string|The type of selected locator. If no type specified, default is XPath.                      |\r\n|comment|string|Any comment relevant for further describing this model entry (optional).                   |\r\n\r\n### Response Codes\r\n|Code|Description                                                            |\r\n|----|-----------------------------------------------------------------------|\r\n|200 |Success, the _**Models**_ were returned as part of the response.       |\r\n|404 |Not Found, the _**Models**_ were not found under the models collection.|\r\n|500 |Fail, the server encountered an unexpected error.                      |"
							},
							"response": [
								{
									"name": "Get Models Collection",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/models/{{collection_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"models",
												"{{collection_id}}"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get Associated Configurations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3e5bb36-f506-4071-8ef3-12b0aeb3eb5a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models/{{collection_id}}/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"{{collection_id}}",
										"configurations"
									]
								},
								"description": "Returns a list of available _**Rhino Configurations**_ which are associated with this _**Rhino Model**_ collection.\r\n\r\n```\r\nGET /api/v3/models/:collection_id/configurations\r\n```\r\n\r\n|Name         |Type  |Description                                 |\r\n|-------------|------|--------------------------------------------|\r\n|collection_id|string|The ID of the _**Rhino Models**_ collection.|\r\n\r\n#### Response Content\r\n```js\r\n{\r\n  \"data\": {\r\n    \"configurations\": [\r\n      \"03d1cd94-5e38-43d8-b010-e932d92f9067\",\r\n      \"8bed8025-3cgf-52g1-0919-533cbc6d523c\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nThe example response includes 2 configuration which are associated with this collection.\r\n\r\n|Name          |Type  |Description                                      |\r\n|--------------|------|-------------------------------------------------|\r\n|configurations|array |All _**Rhino Models**_ which are using the model.|\r\n\r\n### Response Codes\r\n|Code|Description                                                                   |\r\n|----|------------------------------------------------------------------------------|\r\n|200 |Success, the _**Rhino Configurations**_ were returned as part of the response.|\r\n|404 |Not Found, the _**Rhino Models**_ collection was not found.                   |\r\n|500 |Fail, the server encountered an unexpected error.                             |"
							},
							"response": []
						},
						{
							"name": "Add Models to Collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9c31bc9c-78d2-4cc1-b39d-5264cd337faf",
										"exec": [
											"pm.test(\"Status code is 200\", function () {    \r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n\t{\n\t\t\"name\": \"Students Input Models - 2\",\n\t\t\"entries\": [\n\t\t\t{\n\t\t\t\t\"name\": \"search students text-box\",\n\t\t\t\t\"value\": \"#SearchString\",\n\t\t\t\t\"type\": \"css selector\",\n                \"model\": \"Students Input Models\",\n\t\t\t\t\"comment\": \"Search students text-box on the top center panel under students page.\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"search students button\",\n\t\t\t\t\"value\": \"//input[@id='SearchButton']\",\n                \"type\": \"xpath\",\n\t\t\t\t\"model\": \"Students Input Models\",\n\t\t\t\t\"comment\": \"Search students button on the top center panel under students page.\"\n\t\t\t}\t\n\t\t],\n        \"context\": {\n            \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\n\t\t}\n\t}\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/models/{{collection_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"{{collection_id}}"
									]
								},
								"description": "## Add Models to Collection\r\nAdd additional _**Rhino Models**_ into an existing collection. If the model name is already exists on another model,\r\nit will be ignored.\r\n\r\n```\r\nPATCH /api/v3/models/:collection_id\r\n```\r\n\r\n|Name         |Type  |Description                                 |\r\n|-------------|------|--------------------------------------------|\r\n|collection_id|string|The ID of the _**Rhino Models**_ collection.|\r\n\r\n### Request Fields\r\nThe request body follows the same format as [Get Model](#get-model) response content.\r\n\r\n### Request Example\r\n```js\r\n[\r\n  {\r\n    \"name\": \"Students Input Models\",\r\n    \"entries\": [\r\n      {\r\n        \"name\": \"search students text-box\",\r\n        \"value\": \"#SearchString\",\r\n        \"type\": \"css selector\",\r\n        \"comment\": \"Search students text-box on the top center panel under students page.\"\r\n      },\r\n      {\r\n        \"name\": \"search students button\",\r\n        \"value\": \"//input[@id='SearchButton']\",\r\n        \"type\": \"xpath\",\r\n        \"comment\": \"Search students button on the top center panel under students page.\"\r\n      }\r\n    ],\r\n    \"context\": {\r\n      \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    }\r\n  }\r\n]\r\n```\r\n\r\n### Response Codes\r\n|Code|Description                                                        |\r\n|----|-------------------------------------------------------------------|\r\n|200 |Success, the _**Collection**_ was returned as part of the response.|\r\n|404 |Not Found, the _**Collection**_ was not found.                     |\r\n|500 |Fail, the server encountered an unexpected error.                  |"
							},
							"response": [
								{
									"name": "Add Models to Collection",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{\n\t\t\"name\": \"Students Input Models - 2\",\n\t\t\"entries\": [\n\t\t\t{\n\t\t\t\t\"name\": \"search students text-box\",\n\t\t\t\t\"value\": \"#SearchString\",\n\t\t\t\t\"type\": \"css selector\",\n                \"model\": \"Students Input Models\",\n\t\t\t\t\"comment\": \"Search students text-box on the top center panel under students page.\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"search students button\",\n\t\t\t\t\"value\": \"//input[@id='SearchButton']\",\n                \"type\": \"xpath\",\n\t\t\t\t\"model\": \"Students Input Models\",\n\t\t\t\t\"comment\": \"Search students button on the top center panel under students page.\"\n\t\t\t}\t\n\t\t],\n        \"context\": {\n            \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\n\t\t}\n\t}\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/models/{{collection_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"models",
												"{{collection_id}}"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Add Configuration to Collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "196c1fcc-4689-41c1-8889-7580987b86b4",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/models/{{collection_id}}/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"{{collection_id}}",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Adds a new _**Configuration**_ to the provided _**Elements Collection**_.\r\n\r\n> PATCH /api/elements/:id/configurations/:configuration_id\r\n\r\n|Name            |Type  |Description                               |\r\n|----------------|------|------------------------------------------|\r\n|id              |string|The ID of the _**Elements Collection**_.|\r\n|configuration_id|string|The ID of the _**Configuration**_.        |\r\n\r\n### Response Codes\r\n|Code|Description                                                                    |\r\n|----|-------------------------------------------------------------------------------|\r\n|204 |Success, the _**Elements Collection**_ was updated.                            |\r\n|400 |Bad Request, the _**id**_ or _**configuration_id**_ were not provided.         |\r\n|404 |Not Found, the _**Elements Collection**_ or _**Configuration**_ were not found.|\r\n|500 |Fail, the server encountered an unexpected error.                              |"
							},
							"response": [
								{
									"name": "Add Configuration to Collection",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "text"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/models/{{collection_id}}/configurations/{{configuration_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"models",
												"{{collection_id}}",
												"configurations",
												"{{configuration_id}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 16 Aug 2020 19:04:56 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Content-Length",
											"value": "0"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Delete Models Collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4933c6fe-e5c1-482f-b46a-73d47db060ff",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models/{{collection_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"{{collection_id}}"
									]
								},
								"description": "Deletes an existing _**Rhino Model**_ collection.\r\n\r\n```\r\nDELETE /api/v3/models/:collection_id\r\n```\r\n\r\n|Name         |Type  |Description                                |\r\n|-------------|------|-------------------------------------------|\r\n|collection_id|string|The ID of the _**Rhino Model**_ collection.|\r\n\r\n> Please Note: Deleting a collection cannot be undone and it can affect test cases and configurations which were using the models.\r\n\r\n### Response Codes\r\n|Code|Description                                      |\r\n|----|-------------------------------------------------|\r\n|204 |Success, the _**Model**_ collection was deleted. |\r\n|404 |Not Found, the _**Model**_ was not found.        |\r\n|500 |Fail, the server encountered an unexpected error.|"
							},
							"response": [
								{
									"name": "Delete Models Collection",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/models/{{collection_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"models",
												"{{collection_id}}"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 16 Aug 2020 19:27:18 GMT"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Delete Models Collections",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d8c11384-3a53-4297-a679-3bbbabbcd8f3",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models"
									]
								},
								"description": "Deletes all existing _**Rhino Model**_ collections.\r\n\r\n```\r\nDELETE /api/v3/models\r\n```\r\n\r\n> Please Note: Deleting a collection cannot be undone and it can affect test cases and configurations which were using the models.\r\n\r\n### Response Codes\r\n|Code|Description                                       |\r\n|----|--------------------------------------------------|\r\n|204 |Success, the _**Model**_ collections were deleted.|\r\n|500 |Fail, the server encountered an unexpected error. |"
							},
							"response": [
								{
									"name": "Delete All Collections",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/elements/{{collection_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"elements",
												"{{collection_id}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 20 Jun 2020 18:40:48 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"traceId\": \"|dbaca059-4221b91203c01210.\"\n}"
								}
							]
						}
					],
					"description": "This guide explains how to access and use _**Automation Elements API**_ to create page models and submit elements collections.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8564dbcb-4a16-46e9-b08f-c5b7d980ab91",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2191c083-c26b-4632-96a0-017f0275a545",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tests: Sanity",
					"item": [
						{
							"name": "Flow Action #01: Create Configuration - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b34041a-b1f7-43e7-81d1-f669600272a9",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('configuration_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        },\r\n        {\r\n            \"driver\": \"FirefoxDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        }\r\n    ],\r\n    \"dataSource\": [ ],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_password}}\",\r\n        \"userName\": \"{{rhino_user}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #02: Create Models Collection  with Configuration - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60ddcf67-5ce9-46e3-9738-9fcb65ca271e",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('collection_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"name\": \"Students Input Models\",\r\n        \"entries\": [\r\n            {\r\n                \"name\": \"search students text-box\",\r\n                \"value\": \"#SearchString\",\r\n                \"type\": \"css selector\",\r\n                \"comment\": \"Search students text-box on the top center panel under students page.\"\r\n            },\r\n            {\r\n                \"name\": \"search students button\",\r\n                \"value\": \"//input[@id='SearchButton']\",\r\n                \"comment\": \"Search students button on the top center panel under students page.\"\r\n            }    \r\n        ],\r\n        \"context\": {\r\n            \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n        }\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/models/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"{{configuration_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #03: Create Models Collection - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "333b9e84-2d1c-41fc-bbb3-0aa151c2e843",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"name\": \"Students Input Models - 2\",\r\n        \"entries\": [\r\n            {\r\n                \"name\": \"search students text-box\",\r\n                \"value\": \"#SearchString\",\r\n                \"type\": \"css selector\",\r\n                \"comment\": \"Search students text-box on the top center panel under students page.\"\r\n            },\r\n            {\r\n                \"name\": \"search students button\",\r\n                \"value\": \"//input[@id='SearchButton']\",\r\n                \"comment\": \"Search students button on the top center panel under students page.\"\r\n            }    \r\n        ],\r\n        \"context\": {\r\n            \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n        }\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/models",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #04: Create Models Collection - Same Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ef214bb4-819d-42e5-abe5-903af1e7a77c",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"name\": \"Students Input Models - 2\",\r\n        \"entries\": [\r\n            {\r\n                \"name\": \"search students text-box\",\r\n                \"value\": \"#SearchString\",\r\n                \"type\": \"css selector\",\r\n                \"comment\": \"Search students text-box on the top center panel under students page.\"\r\n            },\r\n            {\r\n                \"name\": \"search students button\",\r\n                \"value\": \"//input[@id='SearchButton']\",\r\n                \"comment\": \"Search students button on the top center panel under students page.\"\r\n            }    \r\n        ],\r\n        \"context\": {\r\n            \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n        }\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/models",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #05: Create Models Collection - No Models",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "25288f5c-d161-48fd-ac08-9ad0b5cead62",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[ ]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/models",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #06: Create Models Collection - No Entries",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7b25f583-d21e-4c18-b236-beddc7fc4530",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"name\": \"Students Input Models - 2\",\r\n        \"entries\": [ ],\r\n        \"context\": {\r\n            \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n        }\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/models",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #07: Get Models Collections - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "859abf3f-f001-4819-8a50-3424f570c20d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Models count is 2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.data.collection.length === 2;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #08: Get Models Collection - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a9eae0b-f7cb-4bc1-ab39-f1c5d40576a8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Models count is 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.length === 1;\r",
											"});\r",
											"\r",
											"pm.test(\"Entries count is 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData[0].entries.length === 1;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models/{{collection_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"{{collection_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #09: Get Models Collection - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d86aab2-96c1-4507-b53e-e31810c6339a",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models/not_a_collection",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"not_a_collection"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #10: Get Associated Configurations - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5095250e-1b16-4fd6-b4ac-d786e80a1812",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Configurations count is 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.data.configurations.length === 1;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models/{{collection_id}}/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"{{collection_id}}",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #11: Get Associated Configurations - Collection Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "515b5acb-5443-40de-8623-cbc8f5af42e0",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models/not_a_collection/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"not_a_collection",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #12: Create Models Collection - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45ac08cd-3332-4557-9c8b-69fb9569e6f8",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('collection_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"name\": \"Students Input Models - 3\",\r\n        \"entries\": [\r\n            {\r\n                \"name\": \"search students text-box\",\r\n                \"value\": \"#SearchString\",\r\n                \"type\": \"css selector\",\r\n                \"comment\": \"Search students text-box on the top center panel under students page.\"\r\n            },\r\n            {\r\n                \"name\": \"search students button\",\r\n                \"value\": \"//input[@id='SearchButton']\",\r\n                \"comment\": \"Search students button on the top center panel under students page.\"\r\n            }    \r\n        ],\r\n        \"context\": {\r\n            \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n        }\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/models",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #13: Get Associated Configurations - Configuration Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2bb3c8f0-55de-4d08-8865-52e8db46e2c9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Configurations count is 0\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.data.configurations.length === 0;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models/{{collection_id}}/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"{{collection_id}}",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #14: Add Models - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4044dd66-7a1b-47ec-9b46-afb092451a3e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Models count is 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.length === 1;\r",
											"});\r",
											"\r",
											"pm.test(\"Entries count is 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData[0].entries.length === 1;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"name\": \"Students Input Models - 4\",\r\n    \"entries\": [\r\n      {\r\n        \"name\": \"search students text-box\",\r\n        \"type\": \"css selector\",\r\n        \"value\": \"#SearchString\",\r\n        \"model\": \"Students Input Models - 3\",\r\n        \"comment\": \"Search students text-box on the top center panel under students page.\"\r\n      },\r\n      {\r\n        \"name\": \"search students button\",\r\n        \"type\": \"Xpath\",\r\n        \"value\": \"//input[@id='SearchButton']\",\r\n        \"model\": \"Students Input Models - 3\",\r\n        \"comment\": \"Search students button on the top center panel under students page.\"\r\n      }\r\n    ],\r\n    \"context\": {\r\n      \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    }\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/models/{{collection_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"{{collection_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #15: Get Models Collections - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e8a585c-ab0e-4b74-b1fc-340de91ca209",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Models count is 4\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.data.collection.length === 4;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #16: Add Models - Collection Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "082899ee-8ab7-442b-af9b-d623c970727d",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"name\": \"Students Input Models - 4\",\r\n    \"entries\": [\r\n      {\r\n        \"name\": \"search students text-box\",\r\n        \"type\": \"css selector\",\r\n        \"value\": \"#SearchString\",\r\n        \"model\": \"Students Input Models - 3\",\r\n        \"comment\": \"Search students text-box on the top center panel under students page.\"\r\n      },\r\n      {\r\n        \"name\": \"search students button\",\r\n        \"type\": \"Xpath\",\r\n        \"value\": \"//input[@id='SearchButton']\",\r\n        \"model\": \"Students Input Models - 3\",\r\n        \"comment\": \"Search students button on the top center panel under students page.\"\r\n      }\r\n    ],\r\n    \"context\": {\r\n      \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    }\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/models/not_a_collection",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"not_a_collection"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #17: Get Models Collections - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2e2cec08-32ae-4473-b22d-4b3e57676b54",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Models count is 4\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.data.collection.length === 4;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #18: Add Configuration - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba6479a8-2a85-4a54-ba81-7af4642789f8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Models count is 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.length === 2;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models/{{collection_id}}/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"{{collection_id}}",
										"configurations",
										"{{configuration_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #19: Add Configuration - Collection Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70b1912e-67ea-48cf-b3c1-3107e7d06fc8",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models/not_a_collection/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"not_a_collection",
										"configurations",
										"{{configuration_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #20: Add Configuration - Configuration Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4d6a52a-19fa-436b-b58e-dfce55123647",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models/{{collection_id}}/configurations/not_a_configuration",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"{{collection_id}}",
										"configurations",
										"not_a_configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #21: Delete Collection - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "84a0c604-fa77-48e4-ab7b-1a2ce6cf26fa",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models/{{collection_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"{{collection_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #22: Delete Collection - Collection Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5e830ca2-c4f3-42a3-8a34-92a94ef132ff",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models/{{collection_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"{{collection_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #23: Get Models Collections - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c2817514-9516-46a4-8134-46f978c814c0",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Models count is 3\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.data.collection.length === 3;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #24: Delete Collections - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fbf158a4-a23c-4cb1-b69e-b0aafb0adb8a",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #25: Get Models Collections - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d14615c-9e23-4593-ad0b-96fad5c4bb3c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Models count is 0\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.data.collection.length === 0;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/models",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "# API - Introduction\r\nUse the following API methods to request details about _**Rhino Models**_ and to create or modify them.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "78490c63-d695-4f51-8c47-67c8c9beac69",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9172a45c-4dc1-4ed2-87e0-2c606066b5a8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Test Cases",
			"item": [
				{
					"name": "Documentation",
					"item": [
						{
							"name": "Create Tests Collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b0480759-0e9d-40c3-93f5-bb5425f4967c",
										"exec": [
											"pm.test(\"Status code is 201\", function () {    \r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('collection_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id] rhino-documentation-#001\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\n\n[test-actions]\n1. go to url {@address} using any compliant web-browser\n2. close all child windows (to make sure only the web site is open and visible)\n3. send keys {Carson} into {@search-text-box} text-box\n4. click on {@search-button} using {css selector}\n5. wait for {3000} milliseconds\n6. close browser\n\n[test-expected-results]\n[1] assert {url} match {@address-expected}\n[5] assert {count} on {@search-text-box} is greater than {0}\n\n[test-data-provider]\n[\n\t{\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\n\t\t\"search-button\":\"#SearchButton\",\n\t\t\"students-table\": \"//td[@id]\"\n\t}\n]",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/tests",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests"
									]
								},
								"description": "Creates a new _**Rhino Test Case Collection**_.\r\n\r\n```\r\nPOST /api/tests/:configuration_id\r\n```\r\n\r\n|Name            |Type  |Description                                                                             |\r\n|----------------|------|----------------------------------------------------------------------------------------|\r\n|configuration_id|string|The ID of the configuration group under which to create the tests collection (optional).|\r\n\r\n### Request Fields\r\nNew _**Rhino Test Case Collection**_ using the same response format as [Get Test Case Collection](#get-test-case-collection).  \r\n\r\n> Please note, it is possible to create an empty collection without provided any information in the request body.\r\n\r\n#### Request Sample\r\n```\r\n[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\r\n\t\t\"search-button\":\"#SearchButton\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]\r\n\r\n>>>\r\n\r\n[test-id] rhino-documentation-#002\r\n...\r\n```\r\n\r\n### Response Fields\r\n|Name |Type  |Description              |\r\n|-----|------|-------------------------|\r\n|id   |string|The ID of the collection.|\r\n\r\n#### Response Sample\r\n```js\r\n{\r\n  \"data\": {\r\n    \"id\": \"73e21d1b-770b-4347-805a-eae4f622a146\"\r\n  }\r\n}\r\n```\r\n\r\n### Response Codes\r\n|Code|Description                                                    |\r\n|----|---------------------------------------------------------------|\r\n|201 |Success, the _**Rhino Test Case Collection**_ was created.     |\r\n|404 |Not Found, the provide _**Rhino Configuration**_ was not found.|\r\n|500 |Fail, the server encountered an unexpected error.              |"
							},
							"response": [
								{
									"name": "Create Collection - Single Test, No Data, with Configuration",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[test-id] 001\n[test-scenario] search on google.com web-site - positive\n\n[test-actions]\n1. go to url {https://www.google.com/} using any compliant web-browser\n2. close all child windows (to make sure only the web site is open and visible)\n3. send keys {automation} into {@search-box} text-box (//input[@name='q'])\n4. click on the first {//ul[@role='listbox']/li}\n5. wait for {3000} milliseconds\n6. close browser\n\n[test-expected-results]\n[1] assert {url} match {google.com}\n[3] assert on {//input[@name='q']} get value from {value} attribute must match {gravity}",
											"options": {
												"raw": {
													"language": "text"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/tests/{{configuration_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"tests",
												"{{configuration_id}}"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Create Collection - Multiple Tests, Data Driven",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[test-id] 001\n[test-scenario] search on google.com web-site - positive\n\n[test-actions]\n1. go to url {@address} using any compliant web-browser\n2. close all child windows (to make sure only the web site is open and visible)\n3. send keys {automation} into {@search-box} text-box (search text-box)\n4. click on the first {@auto-complete-item}\n5. wait for {3000} milliseconds\n6. close browser\n\n[test-expected-results]\n[1] assert {url} match {@address-expected}\n[3] assert on {@search-box} get value from {value} attribute must match {gravity}\n\n[test-data-provider]\n[\n\t{\n\t\t\"address\":\"https://www.google.com/\",\n\t\t\"address-expected\":\"google.com\",\n\t\t\"search-box\":\"//input[@name='q']\",\n\t\t\"auto-complete-item\":\"//ul[@role='listbox']/li\"\n\t},\n\t{\n\t\t\"address\":\"https://www.bing.com/\",\n\t\t\"address-expected\":\"bing.com\",\n\t\t\"search-box\":\"//input[@name='q']\",\n\t\t\"auto-complete-item\":\"//ul[@id='sa_ul']/li\"\n\t}\n]\n\n>>>\n\n[test-id] 002\n[test-scenario] search on google.com web-site - positive\n\n[test-actions]\n1. go to url {@address} using any compliant web-browser\n2. close all child windows (to make sure only the web site is open and visible)\n3. send keys {automation} into {@search-box} text-box (search text-box)\n4. click on the first {@auto-complete-item}\n5. wait for {3000} milliseconds\n6. close browser\n\n[test-expected-results]\n[1] assert {url} match {@address-expected}\n[3] assert on {@search-box} get value from {value} attribute must match {gravity}\n\n[test-data-provider]\n[\n\t{\n\t\t\"address\":\"https://www.google.com/\",\n\t\t\"address-expected\":\"google.com\",\n\t\t\"search-box\":\"//input[@name='q']\",\n\t\t\"auto-complete-item\":\"//ul[@role='listbox']/li\"\n\t},\n\t{\n\t\t\"address\":\"https://www.bing.com/\",\n\t\t\"address-expected\":\"bing.com\",\n\t\t\"search-box\":\"//input[@name='q']\",\n\t\t\"auto-complete-item\":\"//ul[@id='sa_ul']/li\"\n\t}\n]",
											"options": {
												"raw": {
													"language": "text"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/tests",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"tests"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Create Collection - Single Test, Data Driven",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[test-id] 001\n[test-scenario] search on google.com web-site - positive\n\n[test-actions]\n1. go to url {@address} using any compliant web-browser\n2. close all child windows (to make sure only the web site is open and visible)\n3. send keys {automation} into {@search-box} text-box (search text-box)\n4. click on the first {@auto-complete-item}\n5. wait for {3000} milliseconds\n6. close browser\n\n[test-expected-results]\n[1] assert {url} match {@address-expected}\n[3] assert on {@search-box} get value from {value} attribute must match {gravity}\n\n[test-data-provider]\n[\n\t{\n\t\t\"address\":\"https://www.google.com/\",\n\t\t\"address-expected\":\"google.com\",\n\t\t\"search-box\":\"//input[@name='q']\",\n\t\t\"auto-complete-item\":\"//ul[@role='listbox']/li\"\n\t},\n\t{\n\t\t\"address\":\"https://www.bing.com/\",\n\t\t\"address-expected\":\"bing.com\",\n\t\t\"search-box\":\"//input[@name='q']\",\n\t\t\"auto-complete-item\":\"//ul[@id='sa_ul']/li\"\n\t}\n]",
											"options": {
												"raw": {
													"language": "text"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/tests",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"tests"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Tests Collections",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44794774-1978-43ec-ad99-db93f2e117ed",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests"
									]
								},
								"description": "Returns a list of available _**Rhino Test Cases**_ collections.\r\n\r\n```\r\nGET /api/v3/tests\r\n```\r\n\r\n#### Response Content\r\n```js\r\n{\r\n  \"data\": {\r\n    \"collection\": [\r\n      {\r\n        \"id\": \"1ed4ea1c-9959-40d7-b40e-717b8fc1cfb4\",\r\n        \"configurations\": [\r\n          \"03d1cd94-5e38-43d8-b010-e932d92f9067\",\r\n          \"8bed8025-3cgf-52g1-0919-533cbc6d523c\"\r\n        ],\r\n        \"tests\": 3\r\n      },\r\n      {\r\n        \"id\": \"ba6b3da7-1979-48ea-9b00-e30682f5f111\",\r\n        \"configurations\": [],\r\n        \"tests\": 3\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nThe example response includes 2 collections, with 3 tests in each and 2 configurations for one of them.\r\n\r\n|Name          |Type  |Description                                                   |\r\n|--------------|------|--------------------------------------------------------------|\r\n|id            |string|The ID of the _**Rhino Tests Collection**_.                   |\r\n|configurations|array |All _**Rhino Configurations**_ which are using the collection.|\r\n|tests         |number|Total models under the models collection.                     |\r\n\r\n### Response Codes\r\n|Code|Description                                                                            |\r\n|----|---------------------------------------------------------------------------------------|\r\n|200 |Success, the _**Rhino Tests Collection**_ information returned as part of the response.|\r\n|500 |Fail, the server encountered an unexpected error.                                      |"
							},
							"response": [
								{
									"name": "Get Tests",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/tests",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"tests"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get Tests Collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "074e8fba-073a-4d1f-8ab3-d5c029cb3bcf",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"{{collection_id}}"
									]
								},
								"description": "Returns an existing _**Rhino Test Case**_ collection (test suite content).\r\n\r\n```\r\nGET /api/v3/tests/:collection_id\r\n```\r\n\r\n|Name         |Type  |Description                                    |\r\n|-------------|------|-----------------------------------------------|\r\n|collection_id|string|The ID of the _**Rhino Test Case**_ collection.|\r\n\r\n### Response Content\r\nPlease see below for a typical response:\r\n\r\n```\r\n[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n  {\r\n    \"address\": \"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n    \"address-expected\": \"gravitymvctestapplication.azurewebsites.net\",\r\n    \"search-text-box\": \"//input[@id='SearchString']\",\r\n    \"search-button\": \"#SearchButton\",\r\n    \"students-table\": \"//td[@id]\"\r\n  }\r\n]\r\n\r\n>>>\r\n\r\n[test-id] rhino-documentation-#002\r\n...\r\n```\r\n\r\nThe following system fields are always included in the response:\r\n\r\n> The response is an array of Rhino Test Spec of media type `text/plain`.\r\n> Scenarios are separated by an empty line, followed by `>>>` followed by another empty line.\r\n> The fields are annotated following Rhino's language text format.\r\n\r\n#### Mandatory Fields\r\n|Name                 |Type|Description                                                  |\r\n|---------------------|----|-------------------------------------------------------------|\r\n|test-id              |text|The unique ID of the test case.                              |\r\n|test-scenario        |text|The title of the test case.                                  |\r\n|test-actions         |text|Line separated list of the test actions to execute.          |\r\n\r\nThe following system fields are sometimes included in the response:\r\n\r\n#### Optional Fields\r\n|Name                 |Type|Description                                                            |\r\n|---------------------|----|-----------------------------------------------------------------------|\r\n|test-expected-results|text|Line separated list of the test expected results to execute.           |\r\n|test-data-provider   |text|JSON or Markdown format table (string, string) for data driven testing.|\r\n|test-priority        |text|The test priority level - must include number i.e. \"1 - High\".         |\r\n|test-severity        |text|The test severity level - must include number i.e. \"4 - Low\".          |\r\n|test-tolerance       |text|The test tolerance level - must include decimal number i.e. \"80.5%\".   |\r\n\r\n### Response Codes\r\n|Code|Description                                                            |\r\n|----|-----------------------------------------------------------------------|\r\n|200 |Success, the _**Rhino Tests Cases**_ returned as part of the response. |\r\n|404 |Not Found, the provided _**Rhino Test Case Collection**_ was not found.|\r\n|500 |Fail, the server encountered an unexpected error.                      |"
							},
							"response": [
								{
									"name": "Get Tests Collection",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"tests",
												"{{collection_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 17 Aug 2020 19:26:59 GMT"
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Content-Length",
											"value": "866"
										}
									],
									"cookie": [],
									"body": "[test-id] rhino-documentation-#001\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\n\n[test-actions]\n1. go to url {@address} using any compliant web-browser\n2. close all child windows (to make sure only the web site is open and visible)\n3. send keys {Carson} into {@search-text-box} text-box\n4. click on {@search-button} using {css selector}\n5. wait for {3000} milliseconds\n6. close browser\n\n[test-expected-results]\n[1] assert {url} match {@address-expected}\n[5] assert {count} on {@search-text-box} is greater than {0}\n\n[test-data-provider]\n[\n\t{\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\n\t\t\"search-button\":\"#SearchButton\",\n\t\t\"students-table\": \"//td[@id]\"\n\t}\n]"
								}
							]
						},
						{
							"name": "Get Associated Configurations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7918e0bb-a4d1-4626-8698-78ed3f9d3c16",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"{{collection_id}}",
										"configurations"
									]
								},
								"description": "Returns a list of available _**Rhino Configurations**_ which are associated with this _**Rhino Test Case**_ collection.\r\n\r\n```\r\nGET /api/v3/tests/:collection_id/configurations\r\n```\r\n\r\n|Name         |Type  |Description                                    |\r\n|-------------|------|-----------------------------------------------|\r\n|collection_id|string|The ID of the _**Rhino Test Case**_ collection.|\r\n\r\n#### Response Content\r\n```js\r\n{\r\n  \"data\": {\r\n    \"configurations\": [\r\n      \"03d1cd94-5e38-43d8-b010-e932d92f9067\",\r\n      \"8bed8025-3cgf-52g1-0919-533cbc6d523c\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nThe example response includes 2 configuration which are associated with this collection.\r\n\r\n|Name          |Type  |Description                                      |\r\n|--------------|------|-------------------------------------------------|\r\n|configurations|array |All _**Rhino Models**_ which are using the model.|\r\n\r\n### Response Codes\r\n|Code|Description                                                                   |\r\n|----|------------------------------------------------------------------------------|\r\n|200 |Success, the _**Rhino Configurations**_ were returned as part of the response.|\r\n|404 |Not Found, the _**Rhino Test Case**_ collection was not found.                |\r\n|500 |Fail, the server encountered an unexpected error.                             |"
							},
							"response": []
						},
						{
							"name": "Add Tests to Collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8621fb78-6f71-4003-a9a4-938a24f1b17b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id] rhino-documentation-#003\n[test-scenario] search on google.com web-site - positive\n\n[test-actions]\n1. go to url {@address} using any compliant web-browser\n2. close all child windows (to make sure only the web site is open and visible)\n3. send keys {automation} into {@search-box} text-box (search text-box)\n4. click on the first {@auto-complete-item}\n5. wait for {3000} milliseconds\n6. close browser\n\n[test-expected-results]\n[1] assert {url} match {@address-expected}\n[3] assert on {@search-box} get value from {value} attribute must match {gravity}\n\n[test-data-provider]\n[\n\t{\n\t\t\"address\":\"https://www.google.com/\",\n\t\t\"address-expected\":\"google.com\",\n\t\t\"search-box\":\"//input[@name='q']\",\n\t\t\"auto-complete-item\":\"//ul[@role='listbox']/li\"\n\t},\n\t{\n\t\t\"address\":\"https://www.bing.com/\",\n\t\t\"address-expected\":\"bing.com\",\n\t\t\"search-box\":\"//input[@name='q']\",\n\t\t\"auto-complete-item\":\"//ul[@id='sa_ul']/li\"\n\t}\n]\n\n>>>\n\n[test-id] rhino-documentation-#004\n[test-scenario] search on google.com web-site - positive\n\n[test-actions]\n1. go to url {@address} using any compliant web-browser\n2. close all child windows (to make sure only the web site is open and visible)\n3. send keys {automation} into {@search-box} text-box (search text-box)\n4. click on the first {@auto-complete-item}\n5. wait for {3000} milliseconds\n6. close browser\n\n[test-expected-results]\n[1] assert {url} match {@address-expected}\n[3] assert on {@search-box} get value from {value} attribute must match {gravity}\n\n[test-data-provider]\n[\n\t{\n\t\t\"address\":\"https://www.google.com/\",\n\t\t\"address-expected\":\"google.com\",\n\t\t\"search-box\":\"//input[@name='q']\",\n\t\t\"auto-complete-item\":\"//ul[@role='listbox']/li\"\n\t},\n\t{\n\t\t\"address\":\"https://www.bing.com/\",\n\t\t\"address-expected\":\"bing.com\",\n\t\t\"search-box\":\"//input[@name='q']\",\n\t\t\"auto-complete-item\":\"//ul[@id='sa_ul']/li\"\n\t}\n]",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"{{collection_id}}"
									]
								},
								"description": "Add additional _**Rhino Test Cases**_ into an existing collection.  \r\n\r\n> Please note, there is no duplication check here, and you can add tests with the same ID.\r\n> However, Rhino Engine, will not execute them, since it will distinct all IDs before running automation.\r\n\r\n```\r\nPATCH /api/v3/tests/:collection_id\r\n```\r\n\r\n|Name         |Type  |Description                                    |\r\n|-------------|------|-----------------------------------------------|\r\n|collection_id|string|The ID of the _**Rhino Test Case**_ collection.|\r\n\r\n### Request Fields\r\nThe request body follows the same format as [Get Test Case Collection](#get-test-case-collection) response content.\r\n\r\n### Request Example\r\n```\r\n[test-id] rhino-documentation-#003\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n  {\r\n    \"address\": \"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n    \"address-expected\": \"gravitymvctestapplication.azurewebsites.net\",\r\n    \"search-text-box\": \"//input[@id='SearchString']\",\r\n    \"search-button\": \"#SearchButton\",\r\n    \"students-table\": \"//td[@id]\"\r\n  }\r\n]\r\n\r\n>>>\r\n\r\n[test-id] rhino-documentation-#004\r\n...\r\n```\r\n\r\n### Response Codes\r\n|Code|Description                                                        |\r\n|----|-------------------------------------------------------------------|\r\n|200 |Success, the _**Collection**_ was returned as part of the response.|\r\n|400 |Bad Request, no test cases were provided in the request body.      |\r\n|404 |Not Found, the _**Collection**_ was not found.                     |\r\n|500 |Fail, the server encountered an unexpected error.                  |"
							},
							"response": [
								{
									"name": "Add Tests to Collection",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[test-id] rhino-documentation-#003\n[test-scenario] search on google.com web-site - positive\n\n[test-actions]\n1. go to url {@address} using any compliant web-browser\n2. close all child windows (to make sure only the web site is open and visible)\n3. send keys {automation} into {@search-box} text-box (search text-box)\n4. click on the first {@auto-complete-item}\n5. wait for {3000} milliseconds\n6. close browser\n\n[test-expected-results]\n[1] assert {url} match {@address-expected}\n[3] assert on {@search-box} get value from {value} attribute must match {gravity}\n\n[test-data-provider]\n[\n\t{\n\t\t\"address\":\"https://www.google.com/\",\n\t\t\"address-expected\":\"google.com\",\n\t\t\"search-box\":\"//input[@name='q']\",\n\t\t\"auto-complete-item\":\"//ul[@role='listbox']/li\"\n\t},\n\t{\n\t\t\"address\":\"https://www.bing.com/\",\n\t\t\"address-expected\":\"bing.com\",\n\t\t\"search-box\":\"//input[@name='q']\",\n\t\t\"auto-complete-item\":\"//ul[@id='sa_ul']/li\"\n\t}\n]\n\n>>>\n\n[test-id] rhino-documentation-#004\n[test-scenario] search on google.com web-site - positive\n\n[test-actions]\n1. go to url {@address} using any compliant web-browser\n2. close all child windows (to make sure only the web site is open and visible)\n3. send keys {automation} into {@search-box} text-box (search text-box)\n4. click on the first {@auto-complete-item}\n5. wait for {3000} milliseconds\n6. close browser\n\n[test-expected-results]\n[1] assert {url} match {@address-expected}\n[3] assert on {@search-box} get value from {value} attribute must match {gravity}\n\n[test-data-provider]\n[\n\t{\n\t\t\"address\":\"https://www.google.com/\",\n\t\t\"address-expected\":\"google.com\",\n\t\t\"search-box\":\"//input[@name='q']\",\n\t\t\"auto-complete-item\":\"//ul[@role='listbox']/li\"\n\t},\n\t{\n\t\t\"address\":\"https://www.bing.com/\",\n\t\t\"address-expected\":\"bing.com\",\n\t\t\"search-box\":\"//input[@name='q']\",\n\t\t\"auto-complete-item\":\"//ul[@id='sa_ul']/li\"\n\t}\n]",
											"options": {
												"raw": {
													"language": "text"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"tests",
												"{{collection_id}}"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Add Configuration to Collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7717f6da-e521-4887-82c9-af6b087187c8",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"{{collection_id}}",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Add additional _**Rhino Configuration**_ into an existing collection.\r\n\r\n```\r\nPATCH /api/v3/tests/:collection_id/configurations/:configuration_id\r\n```\r\n\r\n|Name            |Type  |Description                                    |\r\n|----------------|------|-----------------------------------------------|\r\n|collection_id   |string|The ID of the _**Rhino Test Case**_ collection.|\r\n|configuration_id|string|The ID of the _**Rhino Configuration**_.       |\r\n\r\n### Response Codes\r\n|Code|Description                                                           |\r\n|----|----------------------------------------------------------------------|\r\n|204 |Success, the _**Configuration**_ was applied to the _**Collection**_. |\r\n|404 |Not Found, the _**Collection**_ or _**Configuration**_ were not found.|\r\n|500 |Fail, the server encountered an unexpected error.                     |"
							},
							"response": [
								{
									"name": "Add Configuration to Collection",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "text"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}/configurations/{{configuration_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"tests",
												"{{collection_id}}",
												"configurations",
												"{{configuration_id}}"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 18 Aug 2020 15:51:47 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Delete Collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0640e3c-1844-4c69-9bee-b6b6ad1e419d",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"{{collection_id}}"
									]
								},
								"description": "Deletes an existing _**Rhino Test Case**_ collection.\r\n\r\n```\r\nDELETE /api/v3/tests/:collection_id\r\n```\r\n\r\n|Name         |Type  |Description                                    |\r\n|-------------|------|-----------------------------------------------|\r\n|collection_id|string|The ID of the _**Rhino Test Case**_ collection.|\r\n  \r\n> Please Note: Deleting a collection cannot be undone and it can affect the configurations which were using the test cases.  \r\n\r\n### Response Codes\r\n|Code|Description                                             |\r\n|----|--------------------------------------------------------|\r\n|204 |Success, the _**Test Case**_ collection was deleted.    |\r\n|404 |Not Found, the _**Test Case**_ collection was not found.|\r\n|500 |Fail, the server encountered an unexpected error.       |"
							},
							"response": [
								{
									"name": "Delete Collection",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"tests",
												"{{collection_id}}"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Delete All Collections",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "49f6460c-4683-4ee6-beaa-63bebcbf8049",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests"
									]
								},
								"description": "Deletes all existing _**Rhino Test Case**_ collections.\r\n\r\n```\r\nDELETE /api/v3/tests\r\n```\r\n  \r\n> Please Note: Deleting a collection cannot be undone and it can affect the configurations which were using the test cases.\r\n  \r\n### Response Codes\r\n|Code|Description                                           |\r\n|----|------------------------------------------------------|\r\n|204 |Success, the _**Test Case**_ collections were deleted.|\r\n|500 |Fail, the server encountered an unexpected error.     |"
							},
							"response": [
								{
									"name": "Delete All Collections",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/tests",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"tests"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					],
					"description": "This guide explains how to access and use _**Automation Collection API**_ to integrate automated tests, submit test results and automate various aspects of your application.",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tests: Sanity",
					"item": [
						{
							"name": "Flow Action #01: Create Configuration - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1fd57e8-9f43-4a94-8a5c-51752a519a99",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('configuration_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome & Firefox\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        },\r\n        {\r\n            \"driver\": \"FirefoxDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        }\r\n    ],\r\n    \"dataSource\": [ ],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_password}}\",\r\n        \"userName\": \"{{rhino_user}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": false,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #02: Create Tests Collection  with Configuration - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0032f2c4-59ed-4780-bac1-96735f248572",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('collection_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\r\n\t\t\"search-button\":\"#SearchButton\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"{{configuration_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #03: Create Tests Collection - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a15a8259-955a-46f2-8f32-2650d7e985cb",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\r\n\t\t\"search-button\":\"#SearchButton\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/tests",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #04: Create Tests Collection - No Tests",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7180e33-724e-44a7-90ea-0d0f3cba07db",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/tests",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #05: Get Tests Collections - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "131c766c-2b73-4494-8185-89ba3b8205b7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Tests count is 2\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('2');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #06: Get Tests Collection - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cffde408-6403-4f53-bd8f-50f11c9f4d51",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Tests count is 1\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('1');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"{{collection_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #07: Get Tests Collection - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "48a9a66f-ab23-4d4b-b6db-9fa365b833c9",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/not_a_collection",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"not_a_collection"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #08: Get Associated Configurations - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8e06181-a7f0-4229-b251-878c22cc251c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Configurations count is 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.data.configurations.length === 1;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"{{collection_id}}",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #09: Get Associated Configurations - Collection Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3422b34-85dc-4d89-88f3-46c97a85ea47",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/not_a_collection/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"not_a_collection",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #10: Create Tests Collection - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf0dd6b3-c490-49c4-adf4-7a1bdc5e49ce",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\r\n\t\t\"search-button\":\"#SearchButton\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/tests",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #11: Get Associated Configurations - Configuration Not Found Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4c4d85a-5a11-41a4-b976-f351ec39bfd2",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Configurations count is 0\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    return jsonData.data.configurations.length === 0;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"{{collection_id}}",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #12: Add Tests - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5f217d7a-1903-4475-a134-4d4da77c3716",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Tests count is 3\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('3');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\r\n\t\t\"search-button\":\"#SearchButton\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]\r\n\r\n>>>\r\n\r\n[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\r\n\t\t\"search-button\":\"#SearchButton\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"{{collection_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #13: Add Tests - Collection Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7b05565a-7664-4178-b818-b96df5419696",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\r\n\t\t\"search-button\":\"#SearchButton\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]\r\n\r\n>>>\r\n\r\n[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\r\n\t\t\"search-button\":\"#SearchButton\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/not_a_collection",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"not_a_collection"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #14: Add Configuration - Configuration Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "faa346b9-be1c-4a42-9138-56998735490b",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}/configurations/not_a_configuration",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"{{collection_id}}",
										"configurations",
										"not_a_configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #15: Get Tests Collections - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d296f878-7361-4b5d-b917-b8fcdfd3fa09",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Tests count is 5\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('5');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #16: Delete Collection - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f27882d9-1af6-400d-8b5a-5f898a616edf",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"{{collection_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #17: Delete Collection - Collection Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "32507462-0f39-4502-95a1-267c68875b97",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/{{collection_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"{{collection_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #18: Get Tests Collections - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "34056a6e-9c6a-4ed9-a68b-e05926e5ff7f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Tests count is 2\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('2');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #19: Delete Collections - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c212537-2ee7-4392-a6e7-1eba63383bde",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #20: Get Tests Collections - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c694d0c4-aee6-4427-9d2c-366eca9e4bdf",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Tests count is 0\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('0');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/tests",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "442b77c9-1001-4a09-8a09-8a43299be1e8",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "64ec6d5d-d708-4454-8717-da9af510e91d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "# API - Introduction\r\nUse the following API methods to request details about _**Rhino Test Cases**_ and to create or modify automation scenarios.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2d53a636-51dc-4f3b-9d15-6467a0f2dd8a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a062d26b-f38f-4e3b-8f22-469e431f25f4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Test Runs",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Create Configuration - Local Driver",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1cbd832f-23a3-48f5-bf4d-68ee9b0fea68",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('configuration_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        }\r\n    ],\r\n    \"dataSource\": [ ],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_user}}\",\r\n        \"userName\": \"{{rhino_password}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": true,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05b065a0-07b6-4314-9fa5-b930a0ca45c3",
										"exec": [
											"pm.test(\"Status code is 201\", function () {    \r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('collection_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id] rhino-documentation-#001\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\n\n[test-actions]\n1. go to url {@address} using any compliant web-browser\n2. close all child windows (to make sure only the web site is open and visible)\n3. send keys {Carson} into {@search-text-box}\n4. click on {@search-button} using {css selector}\n5. wait for {3000} milliseconds\n6. register parameter {first_name} take {Jhon}\n7. close browser\n\n[test-expected-results]\n[1] assert {url} match {@address-expected}\n[5] assert {count} on {@students-table} is greater than {0}\n\n[test-data-provider]\n[\n\t{\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\n\t\t\"search-button\":\"#SearchButton\",\n\t\t\"students-table\": \"//td[@id]\"\n\t}\n]",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"{{configuration_id}}"
									]
								}
							},
							"response": []
						}
					],
					"description": "Preconditions for _**Rhino API**_ microservices.",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Documentation",
					"item": [
						{
							"name": "Run by Configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7acddd07-790a-4bd8-90ab-cd15cd805028",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/rhino/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"rhino",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "# API: Rhino\r\nUse the following API methods run automation specs and get _**Rhino Test Run**_ object.\r\n\r\n## Run by Configuration\r\nRuns an existing configuration and returns _**Rhino Test Run**_ object.\r\n\r\n```\r\nGET /api/v3/rhino/configurations/:configuration_id\r\n```\r\n\r\n|Name            |Type  |Description                             |\r\n|----------------|------|----------------------------------------|\r\n|configuration_id|string|The ID of the _**Rhino Configuration**_.|\r\n\r\n#### Response Content\r\n\r\n```js\r\n{\r\n  \"key\": \"unattached-2020.08.19.06.36.43.698\",\r\n  \"actual\": true,\r\n  \"reasonPhrase\": \"\",\r\n  \"title\": \"Rhino Automation - Test Run Generator (ID: 2020.08.19.06.36.43.698); (Configuration: Rhino Automation - Chrome)\",\r\n  \"start\": \"2020-08-19T18:36:43.6989032+03:00\",\r\n  \"end\": \"2020-08-19T18:37:36.4887447+03:00\",\r\n  \"runTime\": \"00:00:52.7898415\",\r\n  \"testCases\": [\r\n    {\r\n      \"identifier\": \"unattached-2020.08.19.06.36.43.698-rhino-documentation-#001-0-0\",\r\n      \"key\": \"rhino-documentation-#001\",\r\n      \"testSuite\": \"\",\r\n      \"testRunKey\": \"unattached-2020.08.19.06.36.43.698\",\r\n      \"scenario\": \"search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\",\r\n      \"reasonPhrase\": \"\",\r\n      \"actual\": true,\r\n      \"steps\": [\r\n        {\r\n          \"identifier\": \"unattached-2020.08.19.06.36.43.698-rhino-documentation-#001-0-0-0\",\r\n          \"testCase\": \"\",\r\n          \"action\": \"1. go to url {https://gravitymvctestapplication.azurewebsites.net/student} using any compliant web-browser\",\r\n          \"command\": \"GoToUrl\",\r\n          \"expected\": \"<span>assert {url} match {gravitymvctestapplication.azurewebsites.net}</span>\",\r\n          \"actual\": true,\r\n          \"reasonPhrase\": \"\",\r\n          \"link\": \"\",\r\n          \"runTime\": \"00:00:14.2072016\"\r\n        },\r\n        {\r\n          \"identifier\": \"unattached-2020.08.19.06.36.43.698-rhino-documentation-#001-0-0-1\",\r\n          \"testCase\": \"\",\r\n          \"action\": \"2. close all child windows (to make sure only the web site is open and visible)\",\r\n          \"command\": \"CloseAllChildWindows\",\r\n          \"expected\": \"\",\r\n          \"actual\": true,\r\n          \"reasonPhrase\": \"\",\r\n          \"link\": \"\",\r\n          \"runTime\": \"00:00:00.0119308\"\r\n        },\r\n        {\r\n          \"identifier\": \"unattached-2020.08.19.06.36.43.698-rhino-documentation-#001-0-0-2\",\r\n          \"testCase\": \"\",\r\n          \"action\": \"3. send keys {Carson} into {//input[@id='SearchString']}\",\r\n          \"command\": \"SendKeys\",\r\n          \"expected\": \"\",\r\n          \"actual\": true,\r\n          \"reasonPhrase\": \"\",\r\n          \"link\": \"\",\r\n          \"runTime\": \"00:00:00.1368129\"\r\n        },\r\n        {\r\n          \"identifier\": \"unattached-2020.08.19.06.36.43.698-rhino-documentation-#001-0-0-3\",\r\n          \"testCase\": \"\",\r\n          \"action\": \"4. click on {#SearchButton} using {css selector}\",\r\n          \"command\": \"Click\",\r\n          \"expected\": \"\",\r\n          \"actual\": true,\r\n          \"reasonPhrase\": \"\",\r\n          \"link\": \"\",\r\n          \"runTime\": \"00:00:00.2752300\"\r\n        },\r\n        {\r\n          \"identifier\": \"unattached-2020.08.19.06.36.43.698-rhino-documentation-#001-0-0-4\",\r\n          \"testCase\": \"\",\r\n          \"action\": \"5. wait for {3000} milliseconds\",\r\n          \"command\": \"Wait\",\r\n          \"expected\": \"<span>assert {count} on {//td[@id]} is greater than {0}</span>\",\r\n          \"actual\": true,\r\n          \"reasonPhrase\": \"\",\r\n          \"link\": \"\",\r\n          \"runTime\": \"00:00:03.0361094\"\r\n        },\r\n        {\r\n          \"identifier\": \"unattached-2020.08.19.06.36.43.698-rhino-documentation-#001-0-0-5\",\r\n          \"testCase\": \"\",\r\n          \"action\": \"6. register parameter {first_name} take {Jhon}\",\r\n          \"command\": \"RegisterParameter\",\r\n          \"expected\": \"\",\r\n          \"actual\": true,\r\n          \"reasonPhrase\": \"\",\r\n          \"link\": \"\",\r\n          \"runTime\": \"00:00:15.0670764\"\r\n        },\r\n        {\r\n          \"identifier\": \"unattached-2020.08.19.06.36.43.698-rhino-documentation-#001-0-0-6\",\r\n          \"testCase\": \"\",\r\n          \"action\": \"7. close browser\",\r\n          \"command\": \"CloseBrowser\",\r\n          \"expected\": \"\",\r\n          \"actual\": true,\r\n          \"reasonPhrase\": \"\",\r\n          \"link\": \"\",\r\n          \"runTime\": \"00:00:00.1242385\"\r\n        }\r\n      ],\r\n      \"totalSteps\": 7,\r\n      \"link\": \"\",\r\n      \"iteration\": 0,\r\n      \"dataSource\": [\r\n        {\r\n          \"address\": \"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n          \"address-expected\": \"gravitymvctestapplication.azurewebsites.net\",\r\n          \"search-text-box\": \"//input[@id='SearchString']\",\r\n          \"search-button\": \"#SearchButton\",\r\n          \"students-table\": \"//td[@id]\"\r\n        }\r\n      ],\r\n      \"modelEntries\": [],\r\n      \"priority\": \"\",\r\n      \"severity\": \"\",\r\n      \"tolerance\": 0.0,\r\n      \"passedOnAttempt\": 0,\r\n      \"qualityRank\": 100.0,\r\n      \"inconclusive\": false,\r\n      \"start\": \"2020-08-19T18:36:43.9059141+03:00\",\r\n      \"end\": \"2020-08-19T18:37:36.4732305+03:00\",\r\n      \"runTime\": \"00:00:52.5673164\",\r\n      \"environment\": {\r\n        \"applicationParams\": {},\r\n        \"macroParams\": {},\r\n        \"sessionParams\": {\r\n          \"first_name\": \"Jhon\"\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  \"totalTests\": 1,\r\n  \"totalSteps\": 7,\r\n  \"totalPass\": 1,\r\n  \"totalPassSteps\": 7,\r\n  \"totalFail\": 0,\r\n  \"totalFailSteps\": 0,\r\n  \"totalIterations\": 1,\r\n  \"totalInconclusive\": 0,\r\n  \"successRate\": 100.0,\r\n  \"qualityRank\": 100.0,\r\n  \"link\": null,\r\n  \"performancePoints\": {\r\n    \"rhino-documentation-#001_0\": 0.87612194\r\n  },\r\n  \"priorityPoints\": {\r\n    \"\": 0\r\n  },\r\n  \"severityPoints\": {\r\n    \"\": 0\r\n  },\r\n  \"aboveOptimalRate\": 0.0,\r\n  \"aboveOptimalCount\": 0,\r\n  \"belowOptimalRate\": 100.0,\r\n  \"belowOptimalCount\": 1,\r\n  \"averageTestTime\": \"00:00:52.5673164\",\r\n  \"totalTimeouts\": \"00:00:00\",\r\n  \"loadTimeouts\": \"00:00:00\",\r\n  \"elementTimeouts\": \"00:00:00\",\r\n  \"severity\": 0,\r\n  \"priority\": 0,\r\n  \"tolerance\": 0.0\r\n}\r\n```\r\n\r\nThe following system fields are always included in the response:\r\n\r\n#### General\r\n|Name                    |Type     |Description                                                                                   |\r\n|------------------------|---------|----------------------------------------------------------------------------------------------|\r\n|key                     |string   |The unique identifier of this _**Rhino Test Run**_.                                           |\r\n|actual                  |boolean  |The actual result of this _**Rhino Test Run**_. ```true``` for pass, ```false``` for fail.    |\r\n|reasonPhrase            |string   |The reason of why this _**Rhino Test Run**_ failed.                                           |\r\n|title                   |string   |The title of this _**Rhino Test Run**_.                                                       |\r\n|start                   |date+time|The start time of this _**Rhino Test Run**_.                                                  |\r\n|end                     |date+time|The start time of this _**Rhino Test Run**_.                                                  |\r\n|runTime                 |time     |The run time (total) of this _**Rhino Test Run**_.                                            |\r\n|[testCases](#test-cases)|array    |A collection of _**Rhino Test Case**_ executed under this  _**Rhino Test Run**_.              |\r\n|totalSteps              |number   |The total steps number of this _**Rhino Test Case**_.                                         |\r\n|totalIterations         |number   |The total iterations number of this _**Rhino Test Run**_.                                     |\r\n|totalInconclusive       |number   |The total inconclusive tests number of this _**Rhino Test Run**_.                             |\r\n|successRate             |double   |The success rate of this _**Rhino Test Run**_.                                                |\r\n|qualityRank             |double   |The quality rank of this _**Rhino Test Run**_.                                                |\r\n|link                    |string   |The link pointing to this _**Rhino Test Run**_ if you are using any ALM connector.            |\r\n|performancePoints       |object   |The performance points of this _**Rhino Test Run**_, aggregated test iteration execution time.|\r\n|priorityPoints          |object   |The priority points of this _**Rhino Test Run**_, priority rank per Rhino Test Case.          |\r\n|severityPoints          |object   |The severity points of this _**Rhino Test Run**_, severity rank per Rhino Test Case.          |\r\n|aboveOptimalRate        |double   |The rate of tests which their running time is above the optimal running time threshold.       |\r\n|aboveOptimalCount       |number   |The number of tests which their running time is above the optimal running time threshold.     |\r\n|belowOptimalRate        |double   |The rate of tests which their running time is below the optimal running time threshold.       |\r\n|belowOptimalCount       |number   |The number of tests which their running time is below the optimal running time threshold.     |\r\n|totalTests              |number   |The total tests number of this _**Rhino Test Run**_.                                          |\r\n|totalSteps              |number   |The total steps number of this _**Rhino Test Run**_.                                          |\r\n|totalPass               |number   |The total passed tests number of this _**Rhino Test Run**_.                                   |\r\n|averageTestTime         |double   |The average individual test time of this _**Rhino Test Run**_.                                |\r\n|totalTimeouts           |time     |The total time spent on timeouts for this _**Rhino Test Run**_.                               |\r\n|loadTimeouts            |time     |The total time spent on page load timeouts for this _**Rhino Test Run**_.                     |\r\n|elementTimeouts         |time     |The total time spent on elements search timeouts for this _**Rhino Test Run**_.               |\r\n|severity                |number   |The severity level of this _**Rhino Test Run**_.                                              |\r\n|priority                |number   |The priority level of this _**Rhino Test Run**_.                                              |\r\n|tolerance               |double   |The tolerance level of this _**Rhino Test Run**_.                                             |\r\n\r\n#### Test Cases\r\n|Name                       |Type     |Description                                                                                                                    |\r\n|---------------------------|---------|-------------------------------------------------------------------------------------------------------------------------------|\r\n|identifier                 |string   |The unique identifier of this _**Rhino Test Case*_.                                                                            |\r\n|key                        |string   |The _**Rhino Test Case*_ ID.                                                                                                   |\r\n|testSuite                  |string   |The ID of the test suite which test belongs to.                                                                                |\r\n|testRunKey                 |string   |The unique identifier of the test run which runs under.                                                                        |\r\n|scenario                   |string   |The title this _**Rhino Test Case*_.                                                                                           |\r\n|reasonPhrase               |string   |The reason of why this _**Rhino Test Case**_ failed.                                                                           |\r\n|actual                     |boolean  |The actual result of this _**Rhino Test Case**_. ```true``` for pass, ```false``` for fail.                                    |\r\n|[steps](#steps)            |array    |A collection of _**Rhino Test Step**_ executed under this  _**Rhino Test Case**_.                                              |\r\n|totalSteps                 |number   |The total steps number of this _**Rhino Test Case**_.                                                                          |\r\n|iteration                  |number   |The iteration number of this _**Rhino Test Case**_. Iterations are created when test run on data source or on multiple drivers.|\r\n|dataSource                 |object   |The local data source (iteration will be created for each data row) of this _**Rhino Test Case**_.                             |\r\n|modelEntries               |object   |A collection of _**Rhino Model**_ used by this _**Rhino Test Case**_.                                                          |\r\n|priority                   |number   |The priority level of this _**Rhino Test Case**_.                                                                              |\r\n|severity                   |number   |The severity level of this _**Rhino Test Case**_.                                                                              |\r\n|tolerance                  |double   |The tolerance level of this _**Rhino Test Case**_.                                                                             |\r\n|passedOnAttempt            |number   |On which attempt (when retry) the test has passed. The value 0 will be given if the test failed.                               |\r\n|qualityRank                |double   |The quality rank of this _**Rhino Test Case**_.                                                                                |\r\n|inconclusive               |Boolean  |If set to true, this test will be marked with warning when fails.                                                              |\r\n|start                      |date+time|The start time of this _**Rhino Test Case**_.                                                                                  |\r\n|end                        |date+time|The start time of this _**Rhino Test Case**_.                                                                                  |\r\n|runTime                    |time     |The run time (total) of this _**Rhino Test Case**_.                                                                            |\r\n|[environment](#environment)|object   |The automation environment data state (parameters current value) from Rhino Server State.                                      |\r\n\r\n#### Steps\r\n|Name        |Type     |Description                                                                                |\r\n|------------|---------|-------------------------------------------------------------------------------------------|\r\n|identifier  |string   |The unique identifier of this _**Rhino Test Step*_.                                        |\r\n|testCase    |string   |The parent test case identifier.                                                           |\r\n|action      |string   |The test action (i.e. go to URL {https://www.foo.io}).                                     |\r\n|command     |string   |The command used for this action (plugin command).                                         |\r\n|expected    |string   |The expected result of this _**Rhino Test Step*_.                                          |\r\n|actual      |boolean  |The actual result of this _**Rhino Test Case**_. ```true``` for pass, ```false``` for fail.|\r\n|reasonPhrase|string   |The reason of why this _**Rhino Test Case**_ failed.                                       |\r\n|link        |string   |The link pointing to this _**Rhino Test Step**_ if you are using any ALM connector.        |\r\n|runTime     |time     |The run time (total) of this _**Rhino Test Step**_.                                        |\r\n\r\n#### Environment\r\n|Name             |Type  |Description                                                                                                                  |\r\n|-----------------|------|-----------------------------------------------------------------------------------------------------------------------------|\r\n|applicationParams|object|The application parameters - Gravity Environment parameters, available for all runs. Will only reset when restart the server.|\r\n|applicationParams|object|The session parameters - Gravity Environment parameters, available for a single runs.  Will reset when run is completed.     |\r\n|macorParams      |object|The macro parameters - Gravity Macro parameters, available for a single runs.  Will reset when run is completed.             |\r\n\r\n### Response Codes\r\n|Code|Description                                                         |\r\n|----|--------------------------------------------------------------------|\r\n|200 |Success, the _**Rhino Result**_ is returned as part of the response.|\r\n|400 |Bad Request, _**Rhino Configuration**_ was not provided.            |\r\n|404 |Not Found, the _**Rhino Configuration**_ was not found.             |\r\n|500 |Fail, the server encountered an unexpected error.                   |"
							},
							"response": [
								{
									"name": "Run by Configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/rhino/configurations/{{configuration_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"rhino",
												"configurations",
												"{{configuration_id}}"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Run by Collection (all configurations)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1007692d-bbba-4d7f-8f3a-1ceb577b5c5d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/rhino/collections/{{collection_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"rhino",
										"collections",
										"{{collection_id}}"
									]
								},
								"description": "Runs an existing _**Rhino Test Case**_ collection and returns _**Rhino Test Run**_ object. The execution will be done on all configurations attached to this collection.\r\n\r\n```\r\nGET /api/v3/rhino/collections/:collection_id\r\n```\r\n\r\n|Name         |Type  |Description                          |\r\n|-------------|------|-------------------------------------|\r\n|collection_id|string|The ID of the _**Rhino Collection**_.|\r\n\r\n## Response Content\r\n\r\nThe response body follows the same format as [Run by Configuration](#run-by-configuration) response content.\r\n\r\n### Response Codes\r\n|Code|Description                                                         |\r\n|----|--------------------------------------------------------------------|\r\n|200 |Success, the _**Rhino Result**_ is returned as part of the response.|\r\n|400 |Bad Request, _**Rhino Collection**_ was not provided.               |\r\n|404 |Not Found, the _**Rhino Collection**_ was not found.                |\r\n|500 |Fail, the server encountered an unexpected error.                   |"
							},
							"response": [
								{
									"name": "Run by Collection (all configurations)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/rhino/collections/{{collection_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"rhino",
												"collections",
												"{{collection_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 20 Aug 2020 09:48:12 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Content-Length",
											"value": "5434"
										}
									],
									"cookie": [],
									"body": "{\n    \"key\": \"unattached-2020.08.20.12.47.17.716\",\n    \"actual\": true,\n    \"reasonPhrase\": \"\",\n    \"title\": \"Rhino Automation - Test Run Generator (ID: 2020.08.20.12.47.17.716); (Configuration: Rhino Automation - Chrome)\",\n    \"start\": \"2020-08-20T12:47:17.7165515+03:00\",\n    \"end\": \"2020-08-20T12:48:09.3274126+03:00\",\n    \"runTime\": \"00:00:51.6108611\",\n    \"testCases\": [\n        {\n            \"identifier\": \"unattached-2020.08.20.12.47.17.716-rhino-documentation-#001-0-0\",\n            \"key\": \"rhino-documentation-#001\",\n            \"testSuite\": \"\",\n            \"testRunKey\": \"unattached-2020.08.20.12.47.17.716\",\n            \"scenario\": \"search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\",\n            \"reasonPhrase\": \"\",\n            \"actual\": true,\n            \"steps\": [\n                {\n                    \"identifier\": \"unattached-2020.08.20.12.47.17.716-rhino-documentation-#001-0-0-0\",\n                    \"testCase\": \"\",\n                    \"action\": \"1. go to url {https://gravitymvctestapplication.azurewebsites.net/student} using any compliant web-browser\",\n                    \"command\": \"GoToUrl\",\n                    \"expected\": \"<span>assert {url} match {gravitymvctestapplication.azurewebsites.net}</span>\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:13.9614314\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.12.47.17.716-rhino-documentation-#001-0-0-1\",\n                    \"testCase\": \"\",\n                    \"action\": \"2. close all child windows (to make sure only the web site is open and visible)\",\n                    \"command\": \"CloseAllChildWindows\",\n                    \"expected\": \"\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:00.0109321\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.12.47.17.716-rhino-documentation-#001-0-0-2\",\n                    \"testCase\": \"\",\n                    \"action\": \"3. send keys {Carson} into {//input[@id='SearchString']}\",\n                    \"command\": \"SendKeys\",\n                    \"expected\": \"\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:00.1180891\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.12.47.17.716-rhino-documentation-#001-0-0-3\",\n                    \"testCase\": \"\",\n                    \"action\": \"4. click on {#SearchButton} using {css selector}\",\n                    \"command\": \"Click\",\n                    \"expected\": \"\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:00.2648393\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.12.47.17.716-rhino-documentation-#001-0-0-4\",\n                    \"testCase\": \"\",\n                    \"action\": \"5. wait for {3000} milliseconds\",\n                    \"command\": \"Wait\",\n                    \"expected\": \"<span>assert {count} on {//td[@id]} is greater than {0}</span>\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:03.0228198\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.12.47.17.716-rhino-documentation-#001-0-0-5\",\n                    \"testCase\": \"\",\n                    \"action\": \"6. register parameter {first_name} take {Jhon}\",\n                    \"command\": \"RegisterParameter\",\n                    \"expected\": \"\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:15.0588197\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.12.47.17.716-rhino-documentation-#001-0-0-6\",\n                    \"testCase\": \"\",\n                    \"action\": \"7. close browser\",\n                    \"command\": \"CloseBrowser\",\n                    \"expected\": \"\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:00.1465610\"\n                }\n            ],\n            \"totalSteps\": 7,\n            \"link\": \"\",\n            \"iteration\": 0,\n            \"dataSource\": [\n                {\n                    \"address\": \"https://gravitymvctestapplication.azurewebsites.net/student\",\n                    \"address-expected\": \"gravitymvctestapplication.azurewebsites.net\",\n                    \"search-text-box\": \"//input[@id='SearchString']\",\n                    \"search-button\": \"#SearchButton\",\n                    \"students-table\": \"//td[@id]\"\n                }\n            ],\n            \"modelEntries\": [],\n            \"priority\": \"\",\n            \"severity\": \"\",\n            \"tolerance\": 0,\n            \"passedOnAttempt\": 0,\n            \"qualityRank\": 100,\n            \"inconclusive\": false,\n            \"start\": \"2020-08-20T12:47:17.8920337+03:00\",\n            \"end\": \"2020-08-20T12:48:09.3042491+03:00\",\n            \"runTime\": \"00:00:51.4122154\",\n            \"environment\": {\n                \"applicationParams\": {},\n                \"macroParams\": {},\n                \"sessionParams\": {\n                    \"first_name\": \"Jhon\"\n                }\n            }\n        }\n    ],\n    \"totalTests\": 1,\n    \"totalSteps\": 7,\n    \"totalPass\": 1,\n    \"totalPassSteps\": 7,\n    \"totalFail\": 0,\n    \"totalFailSteps\": 0,\n    \"totalIterations\": 1,\n    \"totalInconclusive\": 0,\n    \"successRate\": 100,\n    \"qualityRank\": 100,\n    \"link\": null,\n    \"performancePoints\": {\n        \"rhino-documentation-#001_0\": 0.8568702566666667\n    },\n    \"priorityPoints\": {\n        \"\": 0\n    },\n    \"severityPoints\": {\n        \"\": 0\n    },\n    \"aboveOptimalRate\": 0,\n    \"aboveOptimalCount\": 0,\n    \"belowOptimalRate\": 100,\n    \"belowOptimalCount\": 1,\n    \"averageTestTime\": \"00:00:51.4122154\",\n    \"totalTimeouts\": \"00:00:00\",\n    \"loadTimeouts\": \"00:00:00\",\n    \"elementTimeouts\": \"00:00:00\",\n    \"severity\": 0,\n    \"priority\": 0,\n    \"tolerance\": 0\n}"
								}
							]
						},
						{
							"name": "Run by Collection (one configuration)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d06777a9-8861-41ef-b94c-d71a6101d22b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/rhino/collections/{{collection_id}}/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"rhino",
										"collections",
										"{{collection_id}}",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Runs an existing _**Rhino Test Case**_ collection and returns _**Rhino Test Run**_ object.\r\n\r\n```\r\nGET /api/v3/rhino/collections/:collection_id/configurations/:configuration_id\r\n```\r\n\r\n|Name            |Type  |Description                             |\r\n|----------------|------|----------------------------------------|\r\n|collection_id   |string|The ID of the _**Rhino Collection**_.   |\r\n|configuration_id|string|The ID of the _**Rhino Configuration**_.|\r\n\r\n## Response Content\r\n\r\nThe response body follows the same format as [Run by Configuration](#run-by-configuration) response content.\r\n\r\n### Response Codes\r\n|Code|Description                                                                         |\r\n|----|------------------------------------------------------------------------------------|\r\n|200 |Success, the _**Rhino Result**_ is returned as part of the response.                |\r\n|400 |Bad Request, _**Rhino Collection**_ or  _**Rhino Configuration**_ were not provided.|\r\n|404 |Not Found, the _**Rhino Collection**_ or  _**Rhino Configuration**_ were not found. |\r\n|500 |Fail, the server encountered an unexpected error.                                   |"
							},
							"response": [
								{
									"name": "Run by Collection (one configuration)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/rhino/collections/{{collection_id}}/configurations/{{configuration_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"rhino",
												"collections",
												"{{collection_id}}",
												"configurations",
												"{{configuration_id}}"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Run by Configurations - Unattached",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8bfa1305-5600-44cb-a60f-775dc1138f7f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n\t{\r\n\t\t\"name\": \"Rhino Automation - Chrome\",\r\n\t\t\"testsRepository\": [\r\n\t\t\t\"{{collection_id}}\"\r\n\t\t],\r\n\t\t\"driverParameters\": [\r\n\t\t\t{\r\n\t\t\t\t\"driver\": \"ChromeDriver\",\r\n\t\t\t\t\"driverBinaries\": \"{{rhino_drivers}}\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"dataSource\": [],\r\n\t\t\"models\": [],\r\n\t\t\"connector\": \"connector_text\",\r\n\t\t\"gravityEndpoint\": \"\",\r\n\t\t\"authentication\": {\r\n\t\t\t\"password\": \"{{rhino_password}}\",\r\n\t\t\t\"userName\": \"{{rhino_user}}\"\r\n\t\t},\r\n\t\t\"engineConfiguration\": {\r\n\t\t\t\"maxParallel\": 1,\r\n\t\t\t\"failOnException\": false,\r\n\t\t\t\"optimalThreshold\": 3.0,\r\n\t\t\t\"qualityThreshold\": 0.0,\r\n\t\t\t\"toleranceThreshold\": 0.0,\r\n\t\t\t\"priority\": 0,\r\n\t\t\t\"severity\": 0,\r\n\t\t\t\"errorOnExitCode\": 0,\r\n\t\t\t\"elementSearchingTimeout\": 15000,\r\n\t\t\t\"pageLoadTimeout\": 60000,\r\n\t\t\t\"retrunExceptions\": true,\r\n\t\t\t\"returnPerformancePoints\": true,\r\n\t\t\t\"returnEnvironment\": true,\r\n\t\t\t\"terminateOnAssertFailure\": false\r\n\t\t},\r\n\t\t\"screenshotsConfiguration\": {\r\n\t\t\t\"keepOriginal\": false,\r\n\t\t\t\"returnScreenshots\": true,\r\n\t\t\t\"screenshotsOut\": \"{{rhino_images}}\",\r\n\t\t\t\"onExceptionOnly\": false\r\n\t\t},\r\n\t\t\"reportConfiguration\": {\r\n\t\t\t\"reportOut\": \"{{rhino_reports}}\",\r\n\t\t\t\"logsOut\": \"{{rhino_logs}}\",\r\n\t\t\t\"reporters\": [\r\n\t\t\t\t\"reporter_basic\",\r\n\t\t\t\t\"reporter_warehouse\"\r\n\t\t\t],\r\n\t\t\t\"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n\t\t\t\"dataProvider\": null,\r\n\t\t\t\"archive\": false,\r\n\t\t\t\"localReport\": true,\r\n\t\t\t\"addGravityData\": true\r\n\t\t}\r\n\t}\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/rhino/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"rhino",
										"configurations"
									]
								},
								"description": "Executes a collection of _**Rhino Configuration**_ without saving the configuration under Rhino Server State.\r\n\r\n```\r\nPOST /api/v3/rhino/configurations/execute\r\n```\r\n\r\n### Request Fields\r\nA collection of _**Rhino Configuration**. Each item in the request body follows the same format as _**Get Configuration**_ response content.\r\n\r\n### Request Example\r\n```js\r\n[\r\n    {\r\n        \"name\": \"Rhino Automation - Chrome\",\r\n        \"testsRepository\": [ ],\r\n        \"driverParameters\": [\r\n            {\r\n                \"driver\": \"ChromeDriver\",\r\n                \"driverBinaries\": \"http://localhost:4444/wd/hub\"\r\n            }\r\n        ],\r\n        \"dataSource\": [],\r\n        \"models\": [ ],\r\n        \"connector\": \"connector_text\",\r\n        \"gravityEndpoint\": \"\",\r\n        \"authentication\": {\r\n            \"password\": \"<rhino_user>\",\r\n            \"userName\": \"<rhino_password>\"\r\n        },\r\n        \"engineConfiguration\": {\r\n            \"maxParallel\": 1,\r\n            \"failOnException\": false,\r\n            \"optimalThreshold\": 3.0,\r\n            \"qualityThreshold\": 0.0,\r\n            \"toleranceThreshold\": 0.0,\r\n            \"priority\": 0,\r\n            \"severity\": 0,\r\n            \"errorOnExitCode\": 0,\r\n            \"elementSearchingTimeout\": 15000,\r\n            \"pageLoadTimeout\": 60000,\r\n            \"retrunExceptions\": true,\r\n            \"returnPerformancePoints\": true,\r\n            \"returnEnvironment\": true,\r\n            \"terminateOnAssertFailure\": false\r\n        },\r\n        \"screenshotsConfiguration\": {\r\n            \"keepOriginal\": false,\r\n            \"returnScreenshots\": false,\r\n            \"screenshotsOut\": \"<path_to_screenshots_folder>\",\r\n            \"onExceptionOnly\": false\r\n        },\r\n        \"reportConfiguration\": {\r\n            \"reportOut\": \"<path_to_reports_folder>\",\r\n            \"logsOut\": \"<path_to_logs_folder>\",\r\n            \"reporters\": null,\r\n            \"connectionString\": null,\r\n            \"dataProvider\": null,\r\n            \"archive\": false,\r\n            \"localReport\": true,\r\n            \"addGravityData\": true\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"Rhino Automation - Firefox\",\r\n        \"testsRepository\": [ ]\r\n    ...\r\n]\r\n```\r\n\r\n## Response Content\r\n\r\nThe response body follows the same format as [Run by Configuration](#run-by-configuration) response content.\r\n\r\n### Response Codes\r\n|Code|Description                                                         |\r\n|----|--------------------------------------------------------------------|\r\n|200 |Success, the _**Rhino Result**_ is returned as part of the response.|\r\n|500 |Fail, the server encountered an unexpected error.                   |"
							},
							"response": [
								{
									"name": "Run by Configurations - Unattached",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{\r\n\t\t\"name\": \"Rhino Automation - Chrome\",\r\n\t\t\"testsRepository\": [ \"{{collection_id}}\" ],\r\n\t\t\"driverParameters\": [\r\n\t\t\t{\r\n\t\t\t\t\"driver\": \"ChromeDriver\",\r\n\t\t\t\t\"driverBinaries\": \"{{rhino_drivers}}\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"dataSource\": [ ],\r\n\t\t\"models\": [ ],\r\n\t\t\"connector\": \"connector_text\",\r\n\t\t\"gravityEndpoint\": \"\",\r\n\t\t\"authentication\": {\r\n\t\t\t\"password\": \"{{rhino_password}}\",\r\n\t\t\t\"userName\": \"{{rhino_user}}\"\r\n\t\t},\r\n\t\t\"engineConfiguration\": {\r\n\t\t\t\"maxParallel\": 1,\r\n\t\t\t\"failOnException\": false,\r\n\t\t\t\"optimalThreshold\": 3.0,\r\n\t\t\t\"qualityThreshold\": 0.0,\r\n\t\t\t\"toleranceThreshold\": 0.0,\r\n\t\t\t\"priority\": 0,\r\n\t\t\t\"severity\": 0,\r\n\t\t\t\"errorOnExitCode\": 0,\r\n\t\t\t\"elementSearchingTimeout\": 15000,\r\n\t\t\t\"pageLoadTimeout\": 60000,\r\n\t\t\t\"retrunExceptions\": true,\r\n\t\t\t\"returnPerformancePoints\": true,\r\n\t\t\t\"returnEnvironment\": true,\r\n\t\t\t\"terminateOnAssertFailure\": false\r\n\t\t},\r\n\t\t\"screenshotsConfiguration\": {\r\n\t\t\t\"keepOriginal\": false,\r\n\t\t\t\"returnScreenshots\": true,\r\n\t\t\t\"screenshotsOut\": \"{{rhino_images}}\",\r\n\t\t\t\"onExceptionOnly\": false\r\n\t\t},\r\n\t\t\"reportConfiguration\": {\r\n\t\t\t\"reportOut\": \"{{rhino_reports}}\",\r\n\t\t\t\"logsOut\": \"{{rhino_logs}}\",\r\n\t\t\t\"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n\t\t\t\"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n\t\t\t\"dataProvider\": null,\r\n\t\t\t\"archive\": false,\r\n\t\t\t\"localReport\": true,\r\n\t\t\t\"addGravityData\": true\r\n\t\t}\r\n\t}\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/rhino/configurations",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"rhino",
												"configurations"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Run by Collection (one configuration)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5489dda6-9d05-462b-9b6d-1190c3690147",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\r\n\t\t\"search-button\":\"#SearchButton\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]"
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/rhino/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"rhino",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Runs _**Rhino Spec**_ directly from the request body.\r\n\r\n```\r\nPOST /api/v3/rhino/configurations/:configuration_id\r\n```\r\n\r\n|Name            |Type  |Description                             |\r\n|----------------|------|----------------------------------------|\r\n|configuration_id|string|The ID of the _**Rhino Configuration**_.|\r\n\r\n### Request Fields\r\nThe request body follows the same format as _**Get Test Case Collection**_ response content.\r\n\r\n### Request Example\r\nPlease see below for a typical request:\r\n\r\n```\r\n[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\r\n\t\t\"search-button\":\"#SearchButton\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]\r\n\r\n>>>\r\n\r\n[test-id] rhino-documentation-#002\r\n...\r\n```\r\n\r\n## Response Content\r\n\r\nThe response body follows the same format as [Run by Configuration](#run-by-configuration) response content.\r\n\r\n### Response Codes\r\n|Code|Description                                                         |\r\n|----|--------------------------------------------------------------------|\r\n|200 |Success, the _**Rhino Result**_ is returned as part of the response.|\r\n|400 |Bad Request, _**Rhino Configuration**_ was not provided.            |\r\n|404 |Not Found, the _**Rhino Configuration**_ was not found.             |\r\n|500 |Fail, the server encountered an unexpected error.                   |"
							},
							"response": [
								{
									"name": "Run by Collection (one configuration)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\r\n\t\t\"search-button\":\"#SearchButton\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]"
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/rhino/configurations/{{configuration_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"rhino",
												"configurations",
												"{{configuration_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 20 Aug 2020 18:59:12 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Content-Length",
											"value": "5004"
										}
									],
									"cookie": [],
									"body": "{\n    \"key\": \"unattached-2020.08.20.09.58.56.303\",\n    \"actual\": true,\n    \"reasonPhrase\": \"\",\n    \"title\": \"Rhino Automation - Test Run Generator (ID: 2020.08.20.09.58.56.303); (Configuration: Rhino Automation - Chrome)\",\n    \"start\": \"2020-08-20T21:58:56.3039452+03:00\",\n    \"end\": \"2020-08-20T21:59:10.6548002+03:00\",\n    \"runTime\": \"00:00:14.3508550\",\n    \"testCases\": [\n        {\n            \"identifier\": \"unattached-2020.08.20.09.58.56.303-rhino-documentation-#001-0-0\",\n            \"key\": \"rhino-documentation-#001\",\n            \"testSuite\": \"\",\n            \"testRunKey\": \"unattached-2020.08.20.09.58.56.303\",\n            \"scenario\": \"search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\",\n            \"reasonPhrase\": \"\",\n            \"actual\": true,\n            \"steps\": [\n                {\n                    \"identifier\": \"unattached-2020.08.20.09.58.56.303-rhino-documentation-#001-0-0-0\",\n                    \"testCase\": \"\",\n                    \"action\": \"1. go to url {https://gravitymvctestapplication.azurewebsites.net/student} using any compliant web-browser\",\n                    \"command\": \"GoToUrl\",\n                    \"expected\": \"<span>assert {url} match {gravitymvctestapplication.azurewebsites.net}</span>\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:03.9650295\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.09.58.56.303-rhino-documentation-#001-0-0-1\",\n                    \"testCase\": \"\",\n                    \"action\": \"2. close all child windows (to make sure only the web site is open and visible)\",\n                    \"command\": \"CloseAllChildWindows\",\n                    \"expected\": \"\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:00.3620576\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.09.58.56.303-rhino-documentation-#001-0-0-2\",\n                    \"testCase\": \"\",\n                    \"action\": \"3. send keys {Carson} into {//input[@id='SearchString']} text-box\",\n                    \"command\": \"SendKeys\",\n                    \"expected\": \"\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:00.4648217\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.09.58.56.303-rhino-documentation-#001-0-0-3\",\n                    \"testCase\": \"\",\n                    \"action\": \"4. click on {#SearchButton} using {css selector}\",\n                    \"command\": \"Click\",\n                    \"expected\": \"\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:00.6452210\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.09.58.56.303-rhino-documentation-#001-0-0-4\",\n                    \"testCase\": \"\",\n                    \"action\": \"5. wait for {3000} milliseconds\",\n                    \"command\": \"Wait\",\n                    \"expected\": \"<span>assert {count} on {//input[@id='SearchString']} is greater than {0}</span>\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:03.7343510\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.09.58.56.303-rhino-documentation-#001-0-0-5\",\n                    \"testCase\": \"\",\n                    \"action\": \"6. close browser\",\n                    \"command\": \"CloseBrowser\",\n                    \"expected\": \"\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:00.1413591\"\n                }\n            ],\n            \"totalSteps\": 6,\n            \"link\": \"\",\n            \"iteration\": 0,\n            \"dataSource\": [\n                {\n                    \"address\": \"https://gravitymvctestapplication.azurewebsites.net/student\",\n                    \"address-expected\": \"gravitymvctestapplication.azurewebsites.net\",\n                    \"search-text-box\": \"//input[@id='SearchString']\",\n                    \"search-button\": \"#SearchButton\",\n                    \"students-table\": \"//td[@id]\"\n                }\n            ],\n            \"modelEntries\": [],\n            \"priority\": \"\",\n            \"severity\": \"\",\n            \"tolerance\": 0,\n            \"passedOnAttempt\": 0,\n            \"qualityRank\": 100,\n            \"inconclusive\": false,\n            \"start\": \"2020-08-20T21:58:56.5027089+03:00\",\n            \"end\": \"2020-08-20T21:59:10.632288+03:00\",\n            \"runTime\": \"00:00:14.1295791\",\n            \"environment\": {\n                \"applicationParams\": {},\n                \"macroParams\": {},\n                \"sessionParams\": {}\n            }\n        }\n    ],\n    \"totalTests\": 1,\n    \"totalSteps\": 6,\n    \"totalPass\": 1,\n    \"totalPassSteps\": 6,\n    \"totalFail\": 0,\n    \"totalFailSteps\": 0,\n    \"totalIterations\": 1,\n    \"totalInconclusive\": 0,\n    \"successRate\": 100,\n    \"qualityRank\": 100,\n    \"link\": null,\n    \"performancePoints\": {\n        \"rhino-documentation-#001_0\": 0.235492985\n    },\n    \"priorityPoints\": {\n        \"\": 0\n    },\n    \"severityPoints\": {\n        \"\": 0\n    },\n    \"aboveOptimalRate\": 0,\n    \"aboveOptimalCount\": 0,\n    \"belowOptimalRate\": 100,\n    \"belowOptimalCount\": 1,\n    \"averageTestTime\": \"00:00:14.1295791\",\n    \"totalTimeouts\": \"00:00:00\",\n    \"loadTimeouts\": \"00:00:00\",\n    \"elementTimeouts\": \"00:00:00\",\n    \"severity\": 0,\n    \"priority\": 0,\n    \"tolerance\": 0\n}"
								}
							]
						}
					],
					"description": "This guide explains how to access and use _**Rhino API**_ to run Rhino Specs.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f05ef6cd-30c5-4ece-89f9-1d8e75872d5b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "14ee80fc-5b72-457e-988e-7200877b15b7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tests: Sanity",
					"item": [
						{
							"name": "Flow Action #1: Run by Configuration - No Models",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "716dda49-ae00-4434-9301-51f55d7d92b5",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"No failed tests\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.totalFail).to.eql(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/rhino/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"rhino",
										"configurations",
										"{{configuration_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #2: Create Models Collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "efaa9fac-6328-4ea9-86e9-c413cf753ba3",
										"exec": [
											"pm.test(\"Status code is 201\", function () {    \r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('models_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": \"Students Input Models\",\n        \"entries\": [\n            {\n                \"name\": \"search students text-box\",\n                \"value\": \"#SearchString\",\n                \"type\": \"css selector\",\n                \"comment\": \"Search students text-box on the top center panel under students page.\"\n            },\n            {\n                \"name\": \"search students button\",\n                \"value\": \"//input[@id='SearchButton']\",\n                \"comment\": \"Search students button on the top center panel under students page.\"\n            }    \n        ],\n        \"context\": {\n            \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/models/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"models",
										"{{configuration_id}}"
									]
								},
								"description": "Creates a new _**Rhino Model**_.\r\n\r\n```\r\nPOST /api/v3/models\r\n```\r\n\r\n### Request Fields\r\nThe request body follows the same format as [Get Model](#get-model) response content.\r\n\r\n### Request Example\r\n```js\r\n[\r\n\t{\r\n\t\t\"name\": \"Students Input Models\",\r\n\t\t\"entries\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"search students text-box\",\r\n\t\t\t\t\"value\": \"#SearchString\",\r\n\t\t\t\t\"type\": \"css selector\",\r\n                \"model\": \"Students Input Models\",\r\n\t\t\t\t\"comment\": \"Search students text-box on the top center panel under students page.\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"search students button\",\r\n\t\t\t\t\"value\": \"//input[@id='SearchButton']\",\r\n                \"type\": \"xpath\",\r\n\t\t\t\t\"model\": \"Students Input Models\",\r\n\t\t\t\t\"comment\": \"Search students button on the top center panel under students page.\"\r\n\t\t\t}\t\r\n\t\t],\r\n        \"context\": {\r\n            \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n\t\t}\r\n\t}\r\n]\r\n```\r\n\r\n### Response Codes\r\n|Code|Description                                                                                      |\r\n|----|-------------------------------------------------------------------------------------------------|\r\n|201 |Success, the _**Models Collection**_ created and identifier was returned as part of the response.|\r\n|400 |Bad Request, the request is missing a mandatory field(s) or bad formatted.                       |\r\n|500 |Fail, the server encountered an unexpected error.                                                |"
							},
							"response": [
								{
									"name": "Create Models Collection",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"name\": \"Students Input Models\",\n        \"entries\": [\n            {\n                \"name\": \"search students text-box\",\n                \"value\": \"#SearchString\",\n                \"type\": \"css selector\",\n                \"comment\": \"Search students text-box on the top center panel under students page.\"\n            },\n            {\n                \"name\": \"search students button\",\n                \"value\": \"//input[@id='SearchButton']\",\n                \"comment\": \"Search students button on the top center panel under students page.\"\n            }    \n        ],\n        \"context\": {\n            \"pageUrl\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\n        }\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/models",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"models"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Flow Action #3: Create Configuration - Local Driver",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "73fd0a75-1c33-416d-b9e2-931d28a4c179",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('configuration_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        }\r\n    ],\r\n    \"dataSource\": [ ],\r\n    \"models\": [ \"{{models_id}}\" ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_password}}\",\r\n        \"userName\": \"{{rhino_user}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": true,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #4: Run by Collection (one configuration) - Models",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "51f5d280-89dc-4dcc-aeab-14efde6b4a3d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"No failed tests\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.totalFail).to.eql(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {search students text-box}\r\n4. click on {search students button}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@students-table} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]"
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/rhino/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"rhino",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Runs _**Rhino Spec**_ directly from the request body.\r\n\r\n```\r\nPOST /api/v3/rhino/:configuration_id\r\n```\r\n\r\n|Name            |Type  |Description                             |\r\n|----------------|------|----------------------------------------|\r\n|configuration_id|string|The ID of the _**Rhino Configuration**_.|\r\n\r\n### Request Fields\r\nThe request body follows the same format as _**Get Test Case Collection**_ response content.\r\n\r\n### Request Example\r\nPlease see below for a typical request:\r\n\r\n```\r\n[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\r\n\t\t\"search-button\":\"#SearchButton\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]\r\n\r\n>>>\r\n\r\n[test-id] rhino-documentation-#002\r\n...\r\n```\r\n\r\n## Response Content\r\n\r\nThe response body follows the same format as [Run by Configuration](#run-by-configuration) response content.\r\n\r\n### Response Codes\r\n|Code|Description                                                         |\r\n|----|--------------------------------------------------------------------|\r\n|200 |Success, the _**Rhino Result**_ is returned as part of the response.|\r\n|400 |Bad Request, _**Rhino Configuration**_ was not provided.            |\r\n|404 |Not Found, the _**Rhino Configuration**_ was not found.             |\r\n|500 |Fail, the server encountered an unexpected error.                   |"
							},
							"response": [
								{
									"name": "Run by Spec",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\r\n\t\t\"search-button\":\"#SearchButton\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]"
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/rhino/{{configuration_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"rhino",
												"{{configuration_id}}"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Create Configuration - Local Driver",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "52a33be5-4b2c-433a-8737-9a027f82e64b",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('configuration_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"{{rhino_drivers}}\"\r\n        }\r\n    ],\r\n    \"dataSource\": [ ],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_user}}\",\r\n        \"userName\": \"{{rhino_password}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": true,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1649631b-93f9-428f-931e-656542ec11e2",
										"exec": [
											"pm.test(\"Status code is 201\", function () {    \r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('collection_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id] rhino-documentation-#001\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\n\n[test-actions]\n1. go to url {@address} using any compliant web-browser\n2. close all child windows (to make sure only the web site is open and visible)\n3. send keys {Carson} into {@search-text-box}\n4. click on {@search-button} using {css selector}\n5. wait for {3000} milliseconds\n6. register parameter {first_name} take {Jhon}\n7. close browser\n\n[test-expected-results]\n[1] assert {url} match {@address-expected}\n[5] assert {count} on {@students-table} is greater than {0}\n\n[test-data-provider]\n[\n\t{\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\n\t\t\"search-button\":\"#SearchButton\",\n\t\t\"students-table\": \"//td[@id]\"\n\t}\n]",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/tests/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"tests",
										"{{configuration_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #5: Run by Collection (one configuration) - Models",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f25c1220-8b84-4890-bb92-d895706687ab",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"No failed tests\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.totalFail).to.eql(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/rhino/collections/{{collection_id}}/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"rhino",
										"collections",
										"{{collection_id}}",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Runs an existing _**Rhino Test Case**_ collection and returns _**Rhino Test Run**_ object.\r\n\r\n```\r\nGET /api/v3/rhino/collections/:collection_id/configurations/:configuration_id\r\n```\r\n\r\n|Name            |Type  |Description                             |\r\n|----------------|------|----------------------------------------|\r\n|collection_id   |string|The ID of the _**Rhino Collection**_.   |\r\n|configuration_id|string|The ID of the _**Rhino Configuration**_.|\r\n\r\n## Response Content\r\n\r\nThe response body follows the same format as [Run by Configuration](#run-by-configuration) response content.\r\n\r\n### Response Codes\r\n|Code|Description                                                                         |\r\n|----|------------------------------------------------------------------------------------|\r\n|200 |Success, the _**Rhino Result**_ is returned as part of the response.                |\r\n|400 |Bad Request, _**Rhino Collection**_ or  _**Rhino Configuration**_ were not provided.|\r\n|404 |Not Found, the _**Rhino Collection**_ or  _**Rhino Configuration**_ were not found. |\r\n|500 |Fail, the server encountered an unexpected error.                                   |"
							},
							"response": [
								{
									"name": "Run by Collection (one configuration)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/rhino/collections/{{collection_id}}/configurations/{{configuration_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"rhino",
												"collections",
												"{{collection_id}}",
												"configurations",
												"{{configuration_id}}"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "# API - Introduction\r\nUse the following API methods run automation specs and get Rhino Result object.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1000ea9e-db56-4f67-8336-90ad28a6a58d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c1427613-4701-4884-ae67-9ffea271782e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Plugins",
			"item": [
				{
					"name": "Documentation",
					"item": [
						{
							"name": "Create Plugins",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "351c8b3d-8e9b-4168-a8fd-df01f972601c",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id]        CircularSearch\r\n[test-scenario]  Performs a circular students search by calling itself (Students Page).\r\n\r\n[test-parameters]\r\n|Parameter |Description                                            |\r\n|----------|-------------------------------------------------------|\r\n|first_name|Student first name. Will be used for searching student.|\r\n|last_name |Student last name. Will be used asserting results.     |\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {//input[@id='SearchButton']}\r\n3. circular search student {{$ --first_name:foo --last_name:bar}}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {(?i)student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//td[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                        |Description                                                   |\r\n|---------------------------------------------------------------|--------------------------------------------------------------|\r\n|circular search {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchCourses\r\n[test-scenario]  Verify courses number when searching courses by department (Courses Page).\r\n\r\n[test-parameters]\r\n|Parameter |Description                                         |\r\n|----------|----------------------------------------------------|\r\n|department|Department name. Will be used for searching courses.|\r\n|total     |Total courses. Will be used asserting results.      |\r\n\r\n[test-actions]\r\n1. click on {Courses} using {link text}\r\n2. select from combo box {department} take {SelectedDepartment} using id\r\n3. click on {//input[@value='Filter']}\r\n\r\n[test-expected-results]\r\n[3] verify that {count} on {//tbody/tr} equal {total}\r\n\r\n[test-examples]\r\n|Example                                              |Description                                                                                   |\r\n|-----------------------------------------------------|----------------------------------------------------------------------------------------------|\r\n|search courses {{$ --department:Economics --total:2}}|Performs courses search by department name and validated number of courses in that department.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchStudent\r\n[test-scenario]  Verify student last name when searching by first name (Students Page).\r\n\r\n[test-parameters]\r\n|Parameter |Description                                            |\r\n|----------|-------------------------------------------------------|\r\n|first_name|Student first name. Will be used for searching student.|\r\n|last_name |Student last name. Will be used asserting results.     |\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {#SearchButton} using {css selector}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {(?i)student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//TD[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                       |Description                                                   |\r\n|--------------------------------------------------------------|--------------------------------------------------------------|\r\n|search student {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchStudentAndCourses\r\n[test-scenario]  Verify student last name when searching by first name (Students Page) & Verify courses number when searching courses by department (Courses Page).\r\n\r\n[test-parameters]\r\n|Parameter |Description                                            |\r\n|----------|-------------------------------------------------------|\r\n|first_name|Student first name. Will be used for searching student.|\r\n|last_name |Student last name. Will be used asserting results.     |\r\n\r\n[test-actions]\r\n1. search student {{$ --first_name:first_name --last_name:last_name}\r\n2. search courses {{$ --department:Economics --total:2}}\r\n\r\n[test-examples]\r\n|Example                                                                   |Description                                                                                                                                                  |\r\n|--------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n|search student and courses {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name. Performs courses search by department name and validated number of courses in that department.|"
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								},
								"description": "Creates one or more new _**Rhino Plugin**_.\r\n\r\n```\r\nPOST /api/v3/plugins?prvt=(false|true)\r\n```\r\n\r\n|Name|Type   |Description                                                                                         |\r\n|----|-------|----------------------------------------------------------------------------------------------------|\r\n|prvt|boolean|Set to true in order to create the plugin as a private plugin available only to the user created it.|\r\n\r\n### Request Fields\r\nThe request body follows the same format as [Get Plugin](#get-plugin) response content.\r\n\r\n### Request Example\r\n```\r\n[test-id] SearchStudent\r\n[test-scenario] Search Student by First Name and Assert Page Address and Last Name\r\n\r\n[test-parameters]\r\n|Parameter |Description                                            |\r\n|----------|-------------------------------------------------------|\r\n|first_name|Student first name. Will be used for searching student.|\r\n|last_name |Student last name. Will be used asserting results.     |\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {#SearchButton} using {css selector}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//TD[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                       |Description                                                   |\r\n|--------------------------------------------------------------|--------------------------------------------------------------|\r\n|search student {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id] SearchCourse\r\n...\r\n```\r\n\r\n### Response Codes\r\n|Code|Description                                                                                             |\r\n|----|--------------------------------------------------------------------------------------------------------|\r\n|200 |Success, some of the _**Plugin(s)**_ were not created and reasons were returned as part of the response.|\r\n|201 |Created, the _**Plugin(s)**_ were created returned as part of the response.                             |\r\n|500 |Fail, the server encountered an unexpected error.                                                       |"
							},
							"response": [
								{
									"name": "Create Plugins - Public",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[test-id]        CircularSearch\r\n[test-scenario]  Performs a circular students search by calling itself (Students Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {//input[@id='SearchButton']}\r\n3. circular search student {{$ --first_name:foo --last_name:bar}}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//td[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                        |Description                                                   |\r\n|---------------------------------------------------------------|--------------------------------------------------------------|\r\n|circular search {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchCourses\r\n[test-scenario]  Verify courses number when searching courses by department (Courses Page).\r\n\r\n[test-parameters]\r\ndepartment\r\ntotal\r\n\r\n[test-actions]\r\n1. click on {Courses} using {link text}\r\n2. select from combo box {department} take {SelectedDepartment} using id\r\n3. click on {//input[@value='Filter']}\r\n\r\n[test-expected-results]\r\n[3] verify that {count} on {//tbody/tr} equal {total}\r\n\r\n[test-examples]\r\n|Example                                              |Description                                                                                   |\r\n|-----------------------------------------------------|----------------------------------------------------------------------------------------------|\r\n|search courses {{$ --department:Economics --total:2}}|Performs courses search by department name and validated number of courses in that department.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchStudent\r\n[test-scenario]  Verify student last name when searching by first name (Students Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {#SearchButton} using {css selector}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//TD[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                       |Description                                                   |\r\n|--------------------------------------------------------------|--------------------------------------------------------------|\r\n|search student {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchStudentAndCourses\r\n[test-scenario]  Verify student last name when searching by first name (Students Page) & Verify courses number when searching courses by department (Courses Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. search student {{$ --first_name:first_name --last_name:last_name}\r\n2. search courses {{$ --department:Economics --total:2}}\r\n\r\n[test-examples]\r\n|Example                                                                   |Description                                                                                                                                                  |\r\n|--------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n|search student and courses {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name. Performs courses search by department name and validated number of courses in that department.|"
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/plugins",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"plugins"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								},
								{
									"name": "Create Plugins - Private",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[test-id]        CircularSearch\r\n[test-scenario]  Performs a circular students search by calling itself (Students Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {//input[@id='SearchButton']}\r\n3. circular search student {{$ --first_name:foo --last_name:bar}}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//td[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                        |Description                                                   |\r\n|---------------------------------------------------------------|--------------------------------------------------------------|\r\n|circular search {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchCourses\r\n[test-scenario]  Verify courses number when searching courses by department (Courses Page).\r\n\r\n[test-parameters]\r\ndepartment\r\ntotal\r\n\r\n[test-actions]\r\n1. click on {Courses} using {link text}\r\n2. select from combo box {department} take {SelectedDepartment} using id\r\n3. click on {//input[@value='Filter']}\r\n\r\n[test-expected-results]\r\n[3] verify that {count} on {//tbody/tr} equal {total}\r\n\r\n[test-examples]\r\n|Example                                              |Description                                                                                   |\r\n|-----------------------------------------------------|----------------------------------------------------------------------------------------------|\r\n|search courses {{$ --department:Economics --total:2}}|Performs courses search by department name and validated number of courses in that department.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchStudent\r\n[test-scenario]  Verify student last name when searching by first name (Students Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {#SearchButton} using {css selector}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//TD[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                       |Description                                                   |\r\n|--------------------------------------------------------------|--------------------------------------------------------------|\r\n|search student {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchStudentAndCourses\r\n[test-scenario]  Verify student last name when searching by first name (Students Page) & Verify courses number when searching courses by department (Courses Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. search student {{$ --first_name:first_name --last_name:last_name}\r\n2. search courses {{$ --department:Economics --total:2}}\r\n\r\n[test-examples]\r\n|Example                                                                   |Description                                                                                                                                                  |\r\n|--------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n|search student and courses {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name. Performs courses search by department name and validated number of courses in that department.|"
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/plugins?prvt=true",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"plugins"
											],
											"query": [
												{
													"key": "prvt",
													"value": "true"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get Plugins",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca80202b-0e29-4ea2-a05b-acd55ba68d44",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								},
								"description": "Returns a list of available _**Rhino Plugins**_ content.\r\n\r\n```\r\nGET /api/v3/plugins\r\n```\r\n\r\n### Response Content\r\nThe response body is an array of specs follows the same format as [Get Plugin](#get-plugin) response content.  \r\nPlease see below for a typical response:\r\n\r\n```\r\n[test-id] SearchStudent\r\n[test-scenario] Search Student by First Name and Assert Page Address and Last Name\r\n\r\n[test-parameters]\r\n|Parameter |Description                                            |\r\n|----------|-------------------------------------------------------|\r\n|first_name|Student first name. Will be used for searching student.|\r\n|last_name |Student last name. Will be used asserting results.     |\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {#SearchButton} using {css selector}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//TD[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                       |Description                                                   |\r\n|--------------------------------------------------------------|--------------------------------------------------------------|\r\n|search student {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id] SearchCourse\r\n...\r\n```\r\n\r\n### Response Codes\r\n|Code|Description                                                                   |\r\n|----|------------------------------------------------------------------------------|\r\n|200 |Success, the _**Rhino Plugin**_ collection returned as part of the response.  |\r\n|404 |Not Found, no public plugins and no private plugins were found for the issuer.|\r\n|500 |Fail, the server encountered an unexpected error.                             |"
							},
							"response": [
								{
									"name": "Get Plugins - Public",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/plugins",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"plugins"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get Plugin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae25f23d-86f6-4fef-b71a-f39359e50761",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins/SearchStudent",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins",
										"SearchStudent"
									]
								},
								"description": "Returns an existing _**Rhino Plugins**_ content.\r\n\r\n```\r\nGET /api/v3/plugins/:plugin_id\r\n```\r\n\r\n|Name     |Type  |Description                                                                                                |\r\n|---------|------|-----------------------------------------------------------------------------------------------------------|\r\n|plugin_id|string|The ID of the _**Rhino Plugin**_ this is the unique name of the plugin as given under \"test-id\" annotation.|\r\n\r\n### Response Content\r\nPlease see below for a typical response:\r\n\r\n```\r\n[test-id] SearchStudent\r\n[test-scenario] Search Student by First Name and Assert Page Address and Last Name\r\n\r\n[test-parameters]\r\n|Parameter |Description                                            |\r\n|----------|-------------------------------------------------------|\r\n|first_name|Student first name. Will be used for searching student.|\r\n|last_name |Student last name. Will be used asserting results.     |\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {#SearchButton} using {css selector}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//TD[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                       |Description                                                   |\r\n|--------------------------------------------------------------|--------------------------------------------------------------|\r\n|search student {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n```\r\n\r\nThe following system fields are always included in the response:\r\n\r\n> The response a Rhino Plugin Spec of media type `text/plain`.\r\n> The fields are annotated following Rhino's language text format.\r\n\r\n#### Mandatory Fields\r\n|Name         |Type  |Description                                        |\r\n|-------------|------|---------------------------------------------------|\r\n|test-id      |text  |The **unique name** of the plugin.                 |\r\n|test-scenario|text  |The title of the plugin.                           |\r\n|test-actions |text  |Line separated list of the test actions to execute.|\r\n|test-examples|object|At least one example of how to call your plugin.   |\r\n\r\nThe following system fields are sometimes included in the response:\r\n\r\n#### Optional Fields\r\n|Name                 |Type  |Description                                                                   |\r\n|---------------------|------|------------------------------------------------------------------------------|\r\n|test-expected-results|text  |Line separated list of the test expected results to execute.                  |\r\n|test-parameters      |object|A list of parameters including a short description of what the parameter does.|\r\n\r\n### Response Codes\r\n|Code|Description                                                      |\r\n|----|-----------------------------------------------------------------|\r\n|200 |Success, the _**Rhino Plugin**_ returned as part of the response.|\r\n|404 |Not Found, the provided _**Rhino Plugin**_ was not found.        |\r\n|500 |Fail, the server encountered an unexpected error.                |"
							},
							"response": [
								{
									"name": "Get Plugin - Public",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/plugins/SearchStudent",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"plugins",
												"SearchStudent"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Delete Plugin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d1819374-9193-420b-be15-538cbee1c6ec",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins/SearchStudent",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins",
										"SearchStudent"
									]
								},
								"description": "Deletes an existing _**Rhino Plugin**_.\r\n\r\n```\r\nDELETE /api/v3/configurations/:plugin_id\r\n```\r\n\r\n|Name     |Type  |Description                                                                                                |\r\n|---------|------|-----------------------------------------------------------------------------------------------------------|\r\n|plugin_id|string|The ID of the _**Rhino Plugin**_ this is the unique name of the plugin as given under \"test-id\" annotation.|\r\n\r\n> Please Note: Deleting a plugin cannot be undone and can affect test cases.\r\n\r\n### Response Codes\r\n|Code|Description                                                                         |\r\n|----|------------------------------------------------------------------------------------|\r\n|204 |Success, the _**Rhino Plugin**_ was deleted.                                        |\r\n|404 |Not Found, the _**Rhino Plugin**_ was not found under the configurations collection.|\r\n|500 |Fail, the server encountered an unexpected error.                                   |"
							},
							"response": [
								{
									"name": "Delete Plugin - Public",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/plugins/SearchStudent",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"plugins",
												"SearchStudent"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Delete Plugins",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2b5a643c-0b06-432c-a733-241921ce225d",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								},
								"description": "Deletes all existing _**Rhino Plugin**_.\r\n\r\n```\r\nDELETE /api/v3/configurations\r\n```\r\n\r\n> Please Note: Deleting a plugin cannot be undone and can affect test cases.\r\n\r\n### Response Codes\r\n|Code|Description                                      |\r\n|----|-------------------------------------------------|\r\n|204 |Success, the _**Rhino Plugins**_ were deleted.   |\r\n|404 |Not Found, the _**Rhino Plugin**_ were not found.|\r\n|500 |Fail, the server encountered an unexpected error.|"
							},
							"response": [
								{
									"name": "Delete Plugins",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/plugins",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"plugins"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					],
					"description": "This guide explains how to access and use _**Rhino API**_ to create Rhino Plugins.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8b768305-eda6-4306-81e7-72d54a9fb69e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "39df91d9-db0f-42e3-a565-1bc323afcc0b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tests: Sanity",
					"item": [
						{
							"name": "Flow Action #01: Create Plugins",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "272ab996-2f25-43db-8e27-97f6a1e84d03",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Plugins count is 4\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('4');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id]        CircularSearch\r\n[test-scenario]  Performs a circular students search by calling itself (Students Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {//input[@id='SearchButton']}\r\n3. circular search student {{$ --first_name:foo --last_name:bar}}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//td[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                        |Description                                                   |\r\n|---------------------------------------------------------------|--------------------------------------------------------------|\r\n|circular search {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchCourses\r\n[test-scenario]  Verify courses number when searching courses by department (Courses Page).\r\n\r\n[test-parameters]\r\ndepartment\r\ntotal\r\n\r\n[test-actions]\r\n1. click on {Courses} using {link text}\r\n2. select from combo box {department} take {SelectedDepartment} using id\r\n3. click on {//input[@value='Filter']}\r\n\r\n[test-expected-results]\r\n[3] verify that {count} on {//tbody/tr} equal {total}\r\n\r\n[test-examples]\r\n|Example                                              |Description                                                                                   |\r\n|-----------------------------------------------------|----------------------------------------------------------------------------------------------|\r\n|search courses {{$ --department:Economics --total:2}}|Performs courses search by department name and validated number of courses in that department.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchStudent\r\n[test-scenario]  Verify student last name when searching by first name (Students Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {#SearchButton} using {css selector}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//TD[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                       |Description                                                   |\r\n|--------------------------------------------------------------|--------------------------------------------------------------|\r\n|search student {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchStudentAndCourses\r\n[test-scenario]  Verify student last name when searching by first name (Students Page) & Verify courses number when searching courses by department (Courses Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. search student {{$ --first_name:first_name --last_name:last_name}\r\n2. search courses {{$ --department:Economics --total:2}}\r\n\r\n[test-examples]\r\n|Example                                                                   |Description                                                                                                                                                  |\r\n|--------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n|search student and courses {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name. Performs courses search by department name and validated number of courses in that department.|"
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #02: Create Plugins Repeat",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "12797aa9-da2d-4480-bb81-54b9015d4300",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Plugins count is 4\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('4');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id]        CircularSearch\r\n[test-scenario]  Performs a circular students search by calling itself (Students Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {//input[@id='SearchButton']}\r\n3. circular search student {{$ --first_name:foo --last_name:bar}}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//td[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                        |Description                                                   |\r\n|---------------------------------------------------------------|--------------------------------------------------------------|\r\n|circular search {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchCourses\r\n[test-scenario]  Verify courses number when searching courses by department (Courses Page).\r\n\r\n[test-parameters]\r\ndepartment\r\ntotal\r\n\r\n[test-actions]\r\n1. click on {Courses} using {link text}\r\n2. select from combo box {department} take {SelectedDepartment} using id\r\n3. click on {//input[@value='Filter']}\r\n\r\n[test-expected-results]\r\n[3] verify that {count} on {//tbody/tr} equal {total}\r\n\r\n[test-examples]\r\n|Example                                              |Description                                                                                   |\r\n|-----------------------------------------------------|----------------------------------------------------------------------------------------------|\r\n|search courses {{$ --department:Economics --total:2}}|Performs courses search by department name and validated number of courses in that department.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchStudent\r\n[test-scenario]  Verify student last name when searching by first name (Students Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {#SearchButton} using {css selector}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//TD[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                       |Description                                                   |\r\n|--------------------------------------------------------------|--------------------------------------------------------------|\r\n|search student {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchStudentAndCourses\r\n[test-scenario]  Verify student last name when searching by first name (Students Page) & Verify courses number when searching courses by department (Courses Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. search student {{$ --first_name:first_name --last_name:last_name}\r\n2. search courses {{$ --department:Economics --total:2}}\r\n\r\n[test-examples]\r\n|Example                                                                   |Description                                                                                                                                                  |\r\n|--------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n|search student and courses {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name. Performs courses search by department name and validated number of courses in that department.|"
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #03: Create Plugins - Private",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01a14234-f0d7-4796-9c74-bfa47e937b43",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Plugins count is 8\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('8');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id]        PrivateCircularSearch\r\n[test-scenario]  Performs a circular students search by calling itself (Students Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {//input[@id='SearchButton']}\r\n3. circular search student {{$ --first_name:foo --last_name:bar}}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//td[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                        |Description                                                   |\r\n|---------------------------------------------------------------|--------------------------------------------------------------|\r\n|circular search {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id]        PrivateSearchCourses\r\n[test-scenario]  Verify courses number when searching courses by department (Courses Page).\r\n\r\n[test-parameters]\r\ndepartment\r\ntotal\r\n\r\n[test-actions]\r\n1. click on {Courses} using {link text}\r\n2. select from combo box {department} take {SelectedDepartment} using id\r\n3. click on {//input[@value='Filter']}\r\n\r\n[test-expected-results]\r\n[3] verify that {count} on {//tbody/tr} equal {total}\r\n\r\n[test-examples]\r\n|Example                                              |Description                                                                                   |\r\n|-----------------------------------------------------|----------------------------------------------------------------------------------------------|\r\n|search courses {{$ --department:Economics --total:2}}|Performs courses search by department name and validated number of courses in that department.|\r\n\r\n>>>\r\n\r\n[test-id]        PrivateSearchStudent\r\n[test-scenario]  Verify student last name when searching by first name (Students Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {#SearchButton} using {css selector}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//TD[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                       |Description                                                   |\r\n|--------------------------------------------------------------|--------------------------------------------------------------|\r\n|search student {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id]        PrivateSearchStudentAndCourses\r\n[test-scenario]  Verify student last name when searching by first name (Students Page) & Verify courses number when searching courses by department (Courses Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. search student {{$ --first_name:first_name --last_name:last_name}\r\n2. search courses {{$ --department:Economics --total:2}}\r\n\r\n[test-examples]\r\n|Example                                                                   |Description                                                                                                                                                  |\r\n|--------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n|search student and courses {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name. Performs courses search by department name and validated number of courses in that department.|"
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins?prvt=true",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									],
									"query": [
										{
											"key": "prvt",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #04: Get Plugin - Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2710ffbd-2458-495a-b220-1ef1350b75e8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Plugins count is 1\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('1');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins/SearchStudent",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins",
										"SearchStudent"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #05: Get Plugin - Positive Private",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03cb1d0b-ea9b-4341-95a9-4b779646926e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Plugins count is 1\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('1');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins/PrivateSearchStudent",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins",
										"PrivateSearchStudent"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #06: Get Plugin - Private No Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05129adf-a08f-494f-a382-b5863cefba45",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins/PrivateSearchStudent",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins",
										"PrivateSearchStudent"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #07: Get Plugin - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1eb3885a-d7c8-4a95-9c39-81e043c4a91f",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins/NotAPlugin",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins",
										"NotAPlugin"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #08: Delete Plugin - Private No Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5797d392-3bc5-4dfc-8167-3f6fa470bfdc",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins/PrivateSearchStudent",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins",
										"PrivateSearchStudent"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #09: Delete Plugin - Private Positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81f46578-303d-42ab-9edb-9aa5a19af757",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins/PrivateSearchStudent",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins",
										"PrivateSearchStudent"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #10: Get Plugins - Positive Private",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "76318af3-a641-4f6f-84b9-105cc368d4f1",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Plugins count is 7\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('7');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #11: Delete Plugin - Positive with Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b10e48c4-ee7c-4c5b-bd3a-48c74e62b322",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins/SearchStudent",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins",
										"SearchStudent"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #12: Delete Plugin - Positive without Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f547244-bcf0-4521-8ae1-fa087f658c20",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins/SearchCourses",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins",
										"SearchCourses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #13: Get Plugins - Positive Private",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03bad126-d183-47da-b5af-faedac1dc22f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Plugins count is 5\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('5');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #14: Delete All Plugins - No Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "819a9f48-48cd-4890-97e7-3135c5e1c281",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #13: Get Plugins - Positive Private",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a4158ec2-a454-426d-82c5-b3dcd9b35809",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Plugins count is 3\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('3');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #14: Create Plugins",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "69029973-72e6-4479-9b2c-e925a0f3ea1f",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Plugins count is 4\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('4');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id]        CircularSearch\r\n[test-scenario]  Performs a circular students search by calling itself (Students Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {//input[@id='SearchButton']}\r\n3. circular search student {{$ --first_name:foo --last_name:bar}}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//td[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                        |Description                                                   |\r\n|---------------------------------------------------------------|--------------------------------------------------------------|\r\n|circular search {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchCourses\r\n[test-scenario]  Verify courses number when searching courses by department (Courses Page).\r\n\r\n[test-parameters]\r\ndepartment\r\ntotal\r\n\r\n[test-actions]\r\n1. click on {Courses} using {link text}\r\n2. select from combo box {department} take {SelectedDepartment} using id\r\n3. click on {//input[@value='Filter']}\r\n\r\n[test-expected-results]\r\n[3] verify that {count} on {//tbody/tr} equal {total}\r\n\r\n[test-examples]\r\n|Example                                              |Description                                                                                   |\r\n|-----------------------------------------------------|----------------------------------------------------------------------------------------------|\r\n|search courses {{$ --department:Economics --total:2}}|Performs courses search by department name and validated number of courses in that department.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchStudent\r\n[test-scenario]  Verify student last name when searching by first name (Students Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {#SearchButton} using {css selector}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//TD[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                       |Description                                                   |\r\n|--------------------------------------------------------------|--------------------------------------------------------------|\r\n|search student {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id]        SearchStudentAndCourses\r\n[test-scenario]  Verify student last name when searching by first name (Students Page) & Verify courses number when searching courses by department (Courses Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. search student {{$ --first_name:first_name --last_name:last_name}\r\n2. search courses {{$ --department:Economics --total:2}}\r\n\r\n[test-examples]\r\n|Example                                                                   |Description                                                                                                                                                  |\r\n|--------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n|search student and courses {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name. Performs courses search by department name and validated number of courses in that department.|"
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #14: Create Plugins Private User #2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "37657c57-0c7c-40c8-ba9f-5832265c9202",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Plugins count is 6\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('6');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "user2@rhino.api",
											"type": "string"
										},
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id]        Private2CircularSearch\r\n[test-scenario]  Performs a circular students search by calling itself (Students Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {//input[@id='SearchButton']}\r\n3. circular search student {{$ --first_name:foo --last_name:bar}}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//td[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                        |Description                                                   |\r\n|---------------------------------------------------------------|--------------------------------------------------------------|\r\n|circular search {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|\r\n\r\n>>>\r\n\r\n[test-id]        Private2SearchCourses\r\n[test-scenario]  Verify courses number when searching courses by department (Courses Page).\r\n\r\n[test-parameters]\r\ndepartment\r\ntotal\r\n\r\n[test-actions]\r\n1. click on {Courses} using {link text}\r\n2. select from combo box {department} take {SelectedDepartment} using id\r\n3. click on {//input[@value='Filter']}\r\n\r\n[test-expected-results]\r\n[3] verify that {count} on {//tbody/tr} equal {total}\r\n\r\n[test-examples]\r\n|Example                                              |Description                                                                                   |\r\n|-----------------------------------------------------|----------------------------------------------------------------------------------------------|\r\n|search courses {{$ --department:Economics --total:2}}|Performs courses search by department name and validated number of courses in that department.|"
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins?prvt=true",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									],
									"query": [
										{
											"key": "prvt",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #15: Delete All Plugins - Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "91f12656-81e1-4adc-8099-3c68869298f6",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #16: Get Plugins - Positive User #2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17f148eb-23f1-4c30-b39b-4c3504d12016",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Plugins count is 6\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('6');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "user2@rhino.api",
											"type": "string"
										},
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #17: Delete All Plugins - Credentials User #2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f5398ce5-bcb3-4611-9cb7-c3976df75e16",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "user2@rhino.api",
											"type": "string"
										},
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #18: Get Plugins - Positive Private User #1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7935181b-9429-4e4f-b6c4-4b6dfbb72f8a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Plugins count is 4\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('4');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #19: Get Plugins - Positive Private User #2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "24d1da10-5406-4b20-b8a6-b00b6131264a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Plugins count is 4\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('4');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "user2@rhino.api",
											"type": "string"
										},
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #20: Delete All Plugins - Public No Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e741067-0726-4b2a-a061-441192ad5cce",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #21: Get Plugins - Positive Private User #1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a1c48770-6e8a-4ebf-a097-6197a21c4e6a",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #22: Get Plugins - Positive Private User #2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b4db9051-9f92-4499-b6a3-a50f17d8240f",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "user2@rhino.api",
											"type": "string"
										},
										{
											"key": "password",
											"value": "user@rhino.api",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "{{rhino_password}}",
								"type": "string"
							},
							{
								"key": "username",
								"value": "{{rhino_user}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "192e7973-982f-4b5d-9d1d-167ec6ae23cc",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "82aebc36-fa58-4593-bb25-5bdccbc9faac",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tests: Integration",
					"item": [
						{
							"name": "Flow Action #01: Create Plugins",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6b2dffe-2007-4d42-a472-3f9484c8da38",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Plugins count is 1\", () => {\r",
											"  pm.expect(pm.response.headers.get('Rhino-Total-Specs')).to.eql('1');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id]        SearchStudent\r\n[test-scenario]  Verify student last name when searching by first name (Students Page).\r\n\r\n[test-parameters]\r\nfirst_name\r\nlast_name\r\n\r\n[test-actions]\r\n1. send keys {first_name} into {#SearchString} using {css selector}\r\n2. click on {#SearchButton} using {css selector}\r\n\r\n[test-expected-results]\r\n[2] verify that {url} match {(?i)student}\r\n[2] verify that {attribute} of {#SearchString} using {css selector} from {value} match {first_name}\r\n[2] verify that {text} of {//TD[contains(@id,'student_last_name_')]} match {last_name}\r\n\r\n[test-examples]\r\n|Example                                                       |Description                                                   |\r\n|--------------------------------------------------------------|--------------------------------------------------------------|\r\n|search student {{$ --first_name:Carson --last_name:Alexander}}|Performs student search by first name and validated last name.|"
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #02: Create Configuration - Local Driver",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "373c53a6-0018-410a-9e98-f9d9a208c455",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('configuration_id', jsonData.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rhino Automation - Chrome\",\r\n    \"testsRepository\": [ ],\r\n    \"driverParameters\": [\r\n        {\r\n            \"driver\": \"ChromeDriver\",\r\n            \"driverBinaries\": \"D:\\\\automation-env\\\\web-drivers\"\r\n        }\r\n    ],\r\n    \"dataSource\": [ ],\r\n    \"models\": [ ],\r\n    \"connector\": \"connector_text\",\r\n    \"gravityEndpoint\": \"\",\r\n    \"authentication\": {\r\n        \"password\": \"{{rhino_user}}\",\r\n        \"userName\": \"{{rhino_password}}\"\r\n    },\r\n    \"engineConfiguration\": {\r\n        \"maxParallel\": 1,\r\n        \"failOnException\": false,\r\n        \"optimalThreshold\": 3.0,\r\n        \"qualityThreshold\": 0.0,\r\n        \"toleranceThreshold\": 0.0,\r\n        \"priority\": 0,\r\n        \"severity\": 0,\r\n        \"errorOnExitCode\": 0,\r\n        \"elementSearchingTimeout\": 15000,\r\n        \"pageLoadTimeout\": 60000,\r\n        \"retrunExceptions\": true,\r\n        \"returnPerformancePoints\": true,\r\n        \"returnEnvironment\": true,\r\n        \"terminateOnAssertFailure\": false\r\n    },\r\n    \"screenshotsConfiguration\": {\r\n        \"keepOriginal\": false,\r\n        \"returnScreenshots\": true,\r\n        \"screenshotsOut\": \"{{rhino_images}}\",\r\n        \"onExceptionOnly\": false\r\n    },\r\n    \"reportConfiguration\": {\r\n        \"reportOut\": \"{{rhino_reports}}\",\r\n        \"logsOut\": \"{{rhino_logs}}\",\r\n        \"reporters\": [\"reporter_basic\", \"reporter_warehouse\"],\r\n        \"connectionString\": \"{{rhino_reports_connection_string}}\",\r\n        \"dataProvider\": null,\r\n        \"archive\": false,\r\n        \"localReport\": true,\r\n        \"addGravityData\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flow Action #03: Run by Collection (one configuration)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b27cb28-438b-4a85-9066-1a4ec968a802",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"No failed tests\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.totalFail).to.eql(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {https://gravitymvctestapplication.azurewebsites.net/student} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. search student {{$ --first_name:Carson --last_name:Alexander}}\r\n5. wait for {3000} milliseconds\r\n6. close browser"
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/rhino/configurations/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"rhino",
										"configurations",
										"{{configuration_id}}"
									]
								},
								"description": "Runs _**Rhino Spec**_ directly from the request body.\r\n\r\n```\r\nPOST /api/v3/rhino/configurations/:configuration_id\r\n```\r\n\r\n|Name            |Type  |Description                             |\r\n|----------------|------|----------------------------------------|\r\n|configuration_id|string|The ID of the _**Rhino Configuration**_.|\r\n\r\n### Request Fields\r\nThe request body follows the same format as _**Get Test Case Collection**_ response content.\r\n\r\n### Request Example\r\nPlease see below for a typical request:\r\n\r\n```\r\n[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\r\n\t\t\"search-button\":\"#SearchButton\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]\r\n\r\n>>>\r\n\r\n[test-id] rhino-documentation-#002\r\n...\r\n```\r\n\r\n## Response Content\r\n\r\nThe response body follows the same format as [Run by Configuration](#run-by-configuration) response content.\r\n\r\n### Response Codes\r\n|Code|Description                                                         |\r\n|----|--------------------------------------------------------------------|\r\n|200 |Success, the _**Rhino Result**_ is returned as part of the response.|\r\n|400 |Bad Request, _**Rhino Configuration**_ was not provided.            |\r\n|404 |Not Found, the _**Rhino Configuration**_ was not found.             |\r\n|500 |Fail, the server encountered an unexpected error.                   |"
							},
							"response": [
								{
									"name": "Run by Collection (one configuration)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[test-id] rhino-documentation-#001\r\n[test-scenario] search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\r\n\r\n[test-actions]\r\n1. go to url {@address} using any compliant web-browser\r\n2. close all child windows (to make sure only the web site is open and visible)\r\n3. send keys {Carson} into {@search-text-box} text-box\r\n4. click on {@search-button} using {css selector}\r\n5. wait for {3000} milliseconds\r\n6. close browser\r\n\r\n[test-expected-results]\r\n[1] assert {url} match {@address-expected}\r\n[5] assert {count} on {@search-text-box} is greater than {0}\r\n\r\n[test-data-provider]\r\n[\r\n\t{\r\n\t\t\"address\":\"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n\t\t\"address-expected\":\"gravitymvctestapplication.azurewebsites.net\",\r\n\t\t\"search-text-box\":\"//input[@id='SearchString']\",\r\n\t\t\"search-button\":\"#SearchButton\",\r\n\t\t\"students-table\": \"//td[@id]\"\r\n\t}\r\n]"
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/rhino/configurations/{{configuration_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"rhino",
												"configurations",
												"{{configuration_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 20 Aug 2020 18:59:12 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Content-Length",
											"value": "5004"
										}
									],
									"cookie": [],
									"body": "{\n    \"key\": \"unattached-2020.08.20.09.58.56.303\",\n    \"actual\": true,\n    \"reasonPhrase\": \"\",\n    \"title\": \"Rhino Automation - Test Run Generator (ID: 2020.08.20.09.58.56.303); (Configuration: Rhino Automation - Chrome)\",\n    \"start\": \"2020-08-20T21:58:56.3039452+03:00\",\n    \"end\": \"2020-08-20T21:59:10.6548002+03:00\",\n    \"runTime\": \"00:00:14.3508550\",\n    \"testCases\": [\n        {\n            \"identifier\": \"unattached-2020.08.20.09.58.56.303-rhino-documentation-#001-0-0\",\n            \"key\": \"rhino-documentation-#001\",\n            \"testSuite\": \"\",\n            \"testRunKey\": \"unattached-2020.08.20.09.58.56.303\",\n            \"scenario\": \"search students on https://gravitymvctestapplication.azurewebsites.net/student web-site\",\n            \"reasonPhrase\": \"\",\n            \"actual\": true,\n            \"steps\": [\n                {\n                    \"identifier\": \"unattached-2020.08.20.09.58.56.303-rhino-documentation-#001-0-0-0\",\n                    \"testCase\": \"\",\n                    \"action\": \"1. go to url {https://gravitymvctestapplication.azurewebsites.net/student} using any compliant web-browser\",\n                    \"command\": \"GoToUrl\",\n                    \"expected\": \"<span>assert {url} match {gravitymvctestapplication.azurewebsites.net}</span>\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:03.9650295\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.09.58.56.303-rhino-documentation-#001-0-0-1\",\n                    \"testCase\": \"\",\n                    \"action\": \"2. close all child windows (to make sure only the web site is open and visible)\",\n                    \"command\": \"CloseAllChildWindows\",\n                    \"expected\": \"\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:00.3620576\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.09.58.56.303-rhino-documentation-#001-0-0-2\",\n                    \"testCase\": \"\",\n                    \"action\": \"3. send keys {Carson} into {//input[@id='SearchString']} text-box\",\n                    \"command\": \"SendKeys\",\n                    \"expected\": \"\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:00.4648217\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.09.58.56.303-rhino-documentation-#001-0-0-3\",\n                    \"testCase\": \"\",\n                    \"action\": \"4. click on {#SearchButton} using {css selector}\",\n                    \"command\": \"Click\",\n                    \"expected\": \"\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:00.6452210\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.09.58.56.303-rhino-documentation-#001-0-0-4\",\n                    \"testCase\": \"\",\n                    \"action\": \"5. wait for {3000} milliseconds\",\n                    \"command\": \"Wait\",\n                    \"expected\": \"<span>assert {count} on {//input[@id='SearchString']} is greater than {0}</span>\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:03.7343510\"\n                },\n                {\n                    \"identifier\": \"unattached-2020.08.20.09.58.56.303-rhino-documentation-#001-0-0-5\",\n                    \"testCase\": \"\",\n                    \"action\": \"6. close browser\",\n                    \"command\": \"CloseBrowser\",\n                    \"expected\": \"\",\n                    \"actual\": true,\n                    \"reasonPhrase\": \"\",\n                    \"link\": \"\",\n                    \"runTime\": \"00:00:00.1413591\"\n                }\n            ],\n            \"totalSteps\": 6,\n            \"link\": \"\",\n            \"iteration\": 0,\n            \"dataSource\": [\n                {\n                    \"address\": \"https://gravitymvctestapplication.azurewebsites.net/student\",\n                    \"address-expected\": \"gravitymvctestapplication.azurewebsites.net\",\n                    \"search-text-box\": \"//input[@id='SearchString']\",\n                    \"search-button\": \"#SearchButton\",\n                    \"students-table\": \"//td[@id]\"\n                }\n            ],\n            \"modelEntries\": [],\n            \"priority\": \"\",\n            \"severity\": \"\",\n            \"tolerance\": 0,\n            \"passedOnAttempt\": 0,\n            \"qualityRank\": 100,\n            \"inconclusive\": false,\n            \"start\": \"2020-08-20T21:58:56.5027089+03:00\",\n            \"end\": \"2020-08-20T21:59:10.632288+03:00\",\n            \"runTime\": \"00:00:14.1295791\",\n            \"environment\": {\n                \"applicationParams\": {},\n                \"macroParams\": {},\n                \"sessionParams\": {}\n            }\n        }\n    ],\n    \"totalTests\": 1,\n    \"totalSteps\": 6,\n    \"totalPass\": 1,\n    \"totalPassSteps\": 6,\n    \"totalFail\": 0,\n    \"totalFailSteps\": 0,\n    \"totalIterations\": 1,\n    \"totalInconclusive\": 0,\n    \"successRate\": 100,\n    \"qualityRank\": 100,\n    \"link\": null,\n    \"performancePoints\": {\n        \"rhino-documentation-#001_0\": 0.235492985\n    },\n    \"priorityPoints\": {\n        \"\": 0\n    },\n    \"severityPoints\": {\n        \"\": 0\n    },\n    \"aboveOptimalRate\": 0,\n    \"aboveOptimalCount\": 0,\n    \"belowOptimalRate\": 100,\n    \"belowOptimalCount\": 1,\n    \"averageTestTime\": \"00:00:14.1295791\",\n    \"totalTimeouts\": \"00:00:00\",\n    \"loadTimeouts\": \"00:00:00\",\n    \"elementTimeouts\": \"00:00:00\",\n    \"severity\": 0,\n    \"priority\": 0,\n    \"tolerance\": 0\n}"
								}
							]
						},
						{
							"name": "Flow Action #04: Delete Configurations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01c9f5ab-ed6e-4da2-a617-2a1eec6885da",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/configurations",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"configurations"
									]
								},
								"description": "Delete all configurations"
							},
							"response": []
						},
						{
							"name": "Flow Action #05: Delete All Plugins - Public No Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6d619e4c-8dd8-4262-b7d0-433c4adce171",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/plugins",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"plugins"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "# API - Introduction\r\nUse the following API methods to request details about _**Rhino Plugins**_ and to create or modify them.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "75f86621-8bc0-45fc-a983-0eb286f63ccd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "55934e52-1a0b-4f1d-a52d-73841d6fb705",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Logs & Analysis",
			"item": [
				{
					"name": "Documentation",
					"item": [
						{
							"name": "Get Logs",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/logs/20200818/configuration/{{configuration_id}}",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"logs",
										"20200818",
										"configuration",
										"{{configuration_id}}"
									]
								},
								"description": "Returns an existing _**Automation Log**_.\r\n\r\n> Configuration key to set logs folder is ```reportConfiguration.logsOut```.\r\n> If not specified, the default logs directory is ```<current_directory>\\Logs```.\r\n\r\n```\r\nGET /api/logs/:log_id/configuration/:configuration_id\r\n```\r\n\r\n|Name            |Type  |Description                                                                                |\r\n|----------------|------|-------------------------------------------------------------------------------------------|\r\n|log_id          |string|The ID of the _**Automation Log**_. Will be the date in the following format ```yyyyMMdd```|\r\n|configuration_id|string|The ID of the configuration group.                                                         |\r\n\r\n#### Response Content\r\n> The response is an array of log entries of media type ```text/plain```.\r\n> Log entries are separated by an empty line.\r\n\r\n```\r\nDBG - 2020-07-08 07:31:29.092\r\n    Application: kdd.engine\r\n    Logger     : kdd.engine.text-connector\r\n    LogLevel   : DEBUG\r\n    TimeStamp  : 2020-07-08 07:31:29.092\r\n    MachineName: DESKTOP-G1MC8H7\r\n    Message    : [OnBeforeTestExecution] does not need an implementation for this connector\r\n\r\nAutomation.Kdd.Agent Information: 0 : INF - 2020-07-08 07:31:29.094\r\n    Application: kdd.engine\r\n    Logger     : kdd.engine.text-connector\r\n    LogLevel   : INFO\r\n    TimeStamp  : 2020-07-08 07:31:29.094\r\n    MachineName: DESKTOP-G1MC8H7\r\n    Message    : executing 'Login'\r\n\r\nAutomation.Kdd.Agent Information: 0 : [GoToUrl]; argument [https://gravitymvctestapplication.azurewebsites.net/] executed\r\nAutomation.Kdd.Agent Information: 0 : [SendKeys]; element [Username]; argument [userName] executed\r\nAutomation.Kdd.Agent Information: 0 : [SendKeys]; element [Password]; argument [password] executed\r\nAutomation.Kdd.Agent Information: 0 : [Click]; element [//button[contains(.,'Log In')]] executed\r\nAutomation.Kdd.Agent Information: 0 : [WaitForUrl] executed\r\nAutomation.Kdd.Agent Information: 0 : [Assert]; argument [{{$ --url --match:Dashboard}}] executed\r\nAutomation.Kdd.Agent Information: 0 : [CloseBrowser] executed\r\nAutomation.Kdd.Agent Information: 0 : [web-automation]; argument [1/1] executed\r\n...\r\n```\r\n\r\n### Response Codes\r\n|Code|Description                                                            |\r\n|----|-----------------------------------------------------------------------|\r\n|200 |Success, the _**Automation Logs**_ is returned as part of the response.|\r\n|404 |Not Found, the _**Automation Logs**_ were not found.                   |\r\n|500 |Fail, the server encountered an unexpected error.                      |"
							},
							"response": [
								{
									"name": "Get Logs",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/logs/20200818/configuration/{{configuration_id}}",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"logs",
												"20200818",
												"configuration",
												"{{configuration_id}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 18 Aug 2020 19:19:24 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Log [20200818] or configuration [345bf818-ce8a-4532-8cfd-cffadac9f627] were not found.\"\n}"
								}
							]
						},
						{
							"name": "Get Logs - Last Number of Lines",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/logs/20200818/configuration/{{configuration_id}}/size/500",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"logs",
										"20200818",
										"configuration",
										"{{configuration_id}}",
										"size",
										"500"
									]
								},
								"description": "Returns an existing _**Automation Log**_ tail, by specific size.\r\n\r\n> Configuration key to set logs folder is ```reportConfiguration.logsOut```.\r\n> If not specified, the default logs directory is ```<current_directory>\\Logs```.\r\n\r\n```\r\nGET /api/logs/:log_id/configuration/:configuration_id/size/:size\r\n```\r\n\r\n|Name            |Type  |Description                                                                                |\r\n|----------------|------|-------------------------------------------------------------------------------------------|\r\n|log_id          |string|The ID of the _**Automation Log**_. Will be the date in the following format ```yyyyMMdd```|\r\n|configuration_id|string|The ID of the configuration group.                                                         |\r\n|size            |number|A fixed number of lines from the end of the log upwards.                                   |\r\n\r\n#### Response Content\r\n> The response is an array of log entries of media type ```text/plain```.\r\n> Log entries are separated by an empty line.\r\n\r\n```\r\nDBG - 2020-07-08 07:31:29.092\r\n    Application: kdd.engine\r\n    Logger     : kdd.engine.text-connector\r\n    LogLevel   : DEBUG\r\n    TimeStamp  : 2020-07-08 07:31:29.092\r\n    MachineName: DESKTOP-G1MC8H7\r\n    Message    : [OnBeforeTestExecution] does not need an implementation for this connector\r\n\r\nAutomation.Kdd.Agent Information: 0 : INF - 2020-07-08 07:31:29.094\r\n    Application: kdd.engine\r\n    Logger     : kdd.engine.text-connector\r\n    LogLevel   : INFO\r\n    TimeStamp  : 2020-07-08 07:31:29.094\r\n    MachineName: DESKTOP-G1MC8H7\r\n    Message    : executing 'Login'\r\n\r\nAutomation.Kdd.Agent Information: 0 : [GoToUrl]; argument [https://gravitymvctestapplication.azurewebsites.net/] executed\r\nAutomation.Kdd.Agent Information: 0 : [SendKeys]; element [Username]; argument [userName] executed\r\nAutomation.Kdd.Agent Information: 0 : [SendKeys]; element [Password]; argument [password] executed\r\nAutomation.Kdd.Agent Information: 0 : [Click]; element [//button[contains(.,'Log In')]] executed\r\nAutomation.Kdd.Agent Information: 0 : [WaitForUrl] executed\r\nAutomation.Kdd.Agent Information: 0 : [Assert]; argument [{{$ --url --match:Dashboard}}] executed\r\nAutomation.Kdd.Agent Information: 0 : [CloseBrowser] executed\r\nAutomation.Kdd.Agent Information: 0 : [web-automation]; argument [1/1] executed\r\n...\r\n```\r\n\r\n### Response Codes\r\n|Code|Description                                                            |\r\n|----|-----------------------------------------------------------------------|\r\n|200 |Success, the _**Automation Logs**_ is returned as part of the response.|\r\n|404 |Not Found, the _**Automation Logs**_ were not found.                   |\r\n|500 |Fail, the server encountered an unexpected error.                      |"
							},
							"response": [
								{
									"name": "Get Logs - Last Number of Lines",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/logs/20200818/configuration/{{configuration_id}}/size/500",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"logs",
												"20200818",
												"configuration",
												"{{configuration_id}}",
												"size",
												"500"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Get Logs - Download",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v3/logs/20200818/configuration/{{configuration_id}}/download",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"logs",
										"20200818",
										"configuration",
										"{{configuration_id}}",
										"download"
									]
								},
								"description": "Downloads an existing _**Automation Log**_ as _**zip**_ file.\r\n\r\n> Configuration key to set logs folder is ```reportConfiguration.logsOut```.\r\n> If not specified, the default logs directory is ```<current_directory>\\Logs```.\r\n\r\n```\r\nGET /api/logs/:log_id/configuration/:configuration_id/download\r\n```\r\n\r\n|Name            |Type  |Description                                                                                |\r\n|----------------|------|-------------------------------------------------------------------------------------------|\r\n|log_id          |string|The ID of the _**Automation Log**_. Will be the date in the following format ```yyyyMMdd```|\r\n|configuration_id|string|The ID of the configuration group.                                                         |\r\n\r\n#### Response Content\r\n> The response is a file of media type ```application/zip```.\r\n\r\n### Response Codes\r\n|Code|Description                                                            |\r\n|----|-----------------------------------------------------------------------|\r\n|200 |Success, the _**Automation Logs**_ is returned as part of the response.|\r\n|404 |Not Found, the _**Automation Logs**_ were not found.                   |\r\n|500 |Fail, the server encountered an unexpected error.                      |"
							},
							"response": [
								{
									"name": "Get Logs - Download",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{endpoint}}/api/v3/logs/20200818/configuration/{{configuration_id}}/download",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"logs",
												"20200818",
												"configuration",
												"{{configuration_id}}",
												"download"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					],
					"description": "This guide explains how to access and use _**Automation Logs API**_ to get logs and analysis information about the automation runs and tests.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "689ea54d-0f94-4940-88c6-9c733cc8b2fd",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "293df9ed-2b1e-4d02-8dc7-30dcef40d3d0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tests: Sanity",
					"item": [],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "# API - Introduction\r\nUse the following API methods to request details about automation logs which were created during the automation run.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "076c62be-aa19-46fc-939d-92f311e4fb67",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c3d4701c-5ac1-4cb8-ab2d-b5e5ba0d2787",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Debug Automation",
			"item": [
				{
					"name": "Documentation",
					"item": [
						{
							"name": "Send Gravity API Web Automation Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08946a5e-b6ba-4a9d-bc9b-3f5fdbafc44a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"{{rhino_password}}\",\r\n    \"UserName\": \"{{rhino_user}}\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"{{rhino_images}}\"\r\n  },\r\n  \"DriverParams\": \"{\\r\\n  \\\"driver\\\": \\\"ChromeDriver\\\",\\r\\n  \\\"driverBinaries\\\": \\\"{{rhino_drivers}}\\\"\\r\\n}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"GoToUrl\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --url --match:gravitymvctestapplication.azurewebsites.net}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseAllChildWindows\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"SendKeys\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//input[@id='SearchString']\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"Carson\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Click\",\r\n      \"Locator\": \"CssSelector\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"#SearchButton\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Wait\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"3000\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//td[@id]\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --count --gt:0}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"RegisterParameter\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"Jhon\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"first_name\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseBrowser\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/debug",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"debug"
									]
								},
								"description": "> Note, the API used for these requests is the underline [Gravity API](https://github.com/gravity-api?tab=repositories).\r\n\r\n## Execute Gravity API Request\r\nReturns an _**Orbit Response**_ object.\r\n\r\n```\r\nGET /api/v3/debug\r\n```\r\n\r\n### Request Content\r\nPlease see below for a typical request:\r\n\r\n```js\r\n{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"rhinoPassword\",\r\n    \"UserName\": \"rhinoUserName\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\"\r\n  },\r\n  \"DriverParams\": \"{\\r\\n  \\\"driver\\\": \\\"ChromeDriver\\\",\\r\\n  \\\"driverBinaries\\\": \\\"D:\\\\\\\\automation-env\\\\\\\\web-drivers\\\"\\r\\n}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"GoToUrl\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --url --match:gravitymvctestapplication.azurewebsites.net}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseAllChildWindows\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"SendKeys\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//input[@id='SearchString']\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"Carson\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Click\",\r\n      \"Locator\": \"CssSelector\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"#SearchButton\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Wait\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"3000\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//td[@id]\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --count --gt:0}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"RegisterParameter\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"Jhon\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"first_name\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseBrowser\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nThe following system fields must be always included in the request:\r\n\r\n#### General\r\n|Name                                                  |Type  |Description                                                                  |\r\n|------------------------------------------------- ----|------|-----------------------------------------------------------------------------|\r\n|[authentication](#authentication)                     |object|A collection of extraction objects returned by Gravity API.                  |\r\n|[engineConfiguration](#engine-configuration)          |object|A set of data, based on the request sent to Gravity API.                     |\r\n|[screenshotsConfiguration](#screenshots-configuration)|object|A set of data, based on the request sent to Gravity API.                     |\r\n|driverParams                                          |string|Parameters which represents the target platforms on which the tests will run.|\r\n|[actions](#gravity-action)                            |array |A collection of _**Gravity Plugin**_ to execute by this request.             |\r\n\r\n#### Authentication\r\n|Name    |Type  |Description                 |\r\n|--------|------|----------------------------|\r\n|userName|string|A valid Rhino API user name.|\r\n|password|string|A valid Rhino API password. |\r\n\r\n#### Engine Configuration\r\n|Name                    |Type   |Description                                                                                                            |\r\n|------------------------|-------|-----------------------------------------------------------------------------------------------------------------------|\r\n|maxParallel             |number |The maximum number of tests that will be executed in parallel.                                                         |\r\n|failOnException         |boolean|When set to true, test cases will fail if exceptions were thrown during test regardless of assertions passed or failed.|\r\n|optimalThreshold        |decimal|Any test which violates this threshold (in minutes), will be marked as non-optimal.                                    |\r\n|qualityThreshold        |decimal|Any test which violates this threshold (in percents), will be marked as failed.                                        |\r\n|toleranceThreshold      |decimal|Any test which falls within this threshold (in percents), will be marked as warning when fail.                         |\r\n|priority                |number |All tests with priority lower than this number will be marked as warning when fail.                                    |\r\n|severity                |number |All tests with severity lower than this number will be marked as warning when fail.                                    |\r\n|errorOnExitCode         |number |The error code (console application error code) which will cause the CI/CD process to fail.                            |\r\n|elementSearchingTimeout |number |The timeout in millisecond when searching for elements.                                                                |\r\n|pageLoadTimeout         |number |The timeout in millisecond when loading a page or application.                                                         |\r\n|retrunExceptions        |boolean|When set to false, exceptions will not be returned by Gravity engine. This might affect the tests results.             |\r\n|returnPerformancePoints |boolean|When set to false, performance data will not be returned by Gravity engine. This might affect the tests results.       |\r\n|returnEnvironment       |boolean|When set to true, will return the current Gravity Environment parameters.                                              |\r\n|terminateOnAssertFailure|boolean|When set to true, automation will stop if assertion any assertion action failed.                                       |\r\n\r\n#### Screenshots Configuration\r\n|Name             |Type   |Description                                                                                               |\r\n|-----------------|-------|----------------------------------------------------------------------------------------------------------|\r\n|keepOriginal     |boolean|When set to true, will keep the original file created by Gravity engine, when creating a new Rhino report.|\r\n|returnScreenshots|boolean|When set to false, screenshots will be returned from Gravity engine.                                      |\r\n|screenshotsOut   |decimal|The directory in which to save automatic screenshots.                                                     |\r\n\r\n#### Gravity Action\r\n|Name                   |Type  |Description                                                                                                                                              |\r\n|-----------------------|------|---------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n|actionType             |string|_**Gravity Plugin**_ name (i.e. Click or SendKeys).                                                                                                      |\r\n|Locator                |string|Elements locator type (i.e. Xpath or CssSelector).                                                                                                       |\r\n|Reference              |number|A zero based index of the _**Gravity Plugin**_ in the _**Web Automation**_ actions array (read only property).                                           |\r\n|RepeatReference        |number|A zero based index of the _**Gravity Plugin**_ n the _**Repeat**_ plugin actions array (read only property).                                             |\r\n|ElementAttributeToActOn|string|The element attribute name on which this _**Gravity Plugin**_ will act (i.e. href or class).                                                             |\r\n|ElementToActOn         |string|The element on which this _**Gravity Plugin**_ will act. This will be the locator value (i.e. if the locator type is CssSelector, it will be #myElement).|\r\n|RegularExpression      |string|A regular expression to apply on attribute or inner text values of an element, before the _**Gravity Plugin**_ is executed.                              |\r\n|Argument               |string|An argument to pass along with this _**Gravity Plugin**_ (i.e. if the action is SendKeys the argument can be \"hello world!\".                             |\r\n\r\n### Response Content\r\nPlease see below for a typical response:\r\n\r\n```js\r\n{\r\n  \"extractions\": [\r\n    {\r\n      \"key\": \"1\",\r\n      \"entities\": [\r\n        {\r\n          \"entityContentEntries\": {\r\n            \"actual\": \"3\",\r\n            \"expected\": \"0\",\r\n            \"method\": \"gt\",\r\n            \"assertion\": \"true\"\r\n          }\r\n        }\r\n      ],\r\n      \"orbitSession\": {\r\n        \"sessionsId\": \"2a0d998832ff9bd2f859a16a9664cb37\",\r\n        \"machineName\": \"DESKTOP-G1MC8H7\",\r\n        \"machineIp\": \"192.168.1.21\"\r\n      }\r\n    },\r\n    {\r\n      \"key\": \"0\",\r\n      \"entities\": [\r\n        {\r\n          \"entityContentEntries\": {\r\n            \"actual\": \"https://gravitymvctestapplication.azurewebsites.net/student\",\r\n            \"expected\": \"gravitymvctestapplication.azurewebsites.net\",\r\n            \"method\": \"match\",\r\n            \"assertion\": \"true\"\r\n          }\r\n        }\r\n      ],\r\n      \"orbitSession\": {\r\n        \"sessionsId\": \"2a0d998832ff9bd2f859a16a9664cb37\",\r\n        \"machineName\": \"DESKTOP-G1MC8H7\",\r\n        \"machineIp\": \"192.168.1.21\"\r\n      }\r\n    }\r\n  ],\r\n  \"orbitRequest\": {\r\n    \"serializedRequest\": null,\r\n    \"serializedResponse\": null,\r\n    \"exceptions\": [],\r\n    \"performancePoints\": [\r\n      {\r\n        \"time\": 3659.9477,\r\n        \"actionReference\": 0,\r\n        \"action\": \"GoToUrl\",\r\n        \"repeatReference\": 0\r\n      },\r\n      {\r\n        \"time\": 383.979,\r\n        \"actionReference\": 1,\r\n        \"action\": \"Assert\",\r\n        \"repeatReference\": 0\r\n      },\r\n      {\r\n        \"time\": 352.1497,\r\n        \"actionReference\": 2,\r\n        \"action\": \"CloseAllChildWindows\",\r\n        \"repeatReference\": 0\r\n      },\r\n      {\r\n        \"time\": 469.0115,\r\n        \"actionReference\": 3,\r\n        \"action\": \"SendKeys\",\r\n        \"repeatReference\": 0\r\n      },\r\n      {\r\n        \"time\": 648.0932,\r\n        \"actionReference\": 4,\r\n        \"action\": \"Click\",\r\n        \"repeatReference\": 0\r\n      },\r\n      {\r\n        \"time\": 3341.0645,\r\n        \"actionReference\": 5,\r\n        \"action\": \"Wait\",\r\n        \"repeatReference\": 0\r\n      },\r\n      {\r\n        \"time\": 372.835,\r\n        \"actionReference\": 6,\r\n        \"action\": \"Assert\",\r\n        \"repeatReference\": 0\r\n      },\r\n      {\r\n        \"time\": 15435.1959,\r\n        \"actionReference\": 7,\r\n        \"action\": \"RegisterParameter\",\r\n        \"repeatReference\": 0\r\n      },\r\n      {\r\n        \"time\": 137.4526,\r\n        \"actionReference\": 8,\r\n        \"action\": \"CloseBrowser\",\r\n        \"repeatReference\": 0\r\n      }\r\n    ],\r\n    \"screenshots\": [\r\n      {\r\n        \"actionReference\": 7,\r\n        \"comment\": \"info\",\r\n        \"type\": \"PNG\",\r\n        \"location\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\\\\20200821090121559-7-RegisterParameter.png\"\r\n      },\r\n      {\r\n        \"actionReference\": 6,\r\n        \"comment\": \"info\",\r\n        \"type\": \"PNG\",\r\n        \"location\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\\\\20200821090106121-6-Assert.png\"\r\n      },\r\n      {\r\n        \"actionReference\": 5,\r\n        \"comment\": \"info\",\r\n        \"type\": \"PNG\",\r\n        \"location\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\\\\20200821090105752-5-Wait.png\"\r\n      },\r\n      {\r\n        \"actionReference\": 4,\r\n        \"comment\": \"info\",\r\n        \"type\": \"PNG\",\r\n        \"location\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\\\\20200821090102338-4-Click.png\"\r\n      },\r\n      {\r\n        \"actionReference\": 3,\r\n        \"comment\": \"info\",\r\n        \"type\": \"PNG\",\r\n        \"location\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\\\\20200821090101706-3-SendKeys.png\"\r\n      },\r\n      {\r\n        \"actionReference\": 2,\r\n        \"comment\": \"info\",\r\n        \"type\": \"PNG\",\r\n        \"location\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\\\\20200821090101249-2-CloseAllChildWindows.png\"\r\n      },\r\n      {\r\n        \"actionReference\": 1,\r\n        \"comment\": \"info\",\r\n        \"type\": \"PNG\",\r\n        \"location\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\\\\20200821090100860-1-Assert.png\"\r\n      },\r\n      {\r\n        \"actionReference\": 0,\r\n        \"comment\": \"info\",\r\n        \"type\": \"PNG\",\r\n        \"location\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\\\\20200821090100416-0-GoToUrl.png\"\r\n      }\r\n    ],\r\n    \"userName\": \"automation@rhino.api\",\r\n    \"startTime\": \"2020-08-21T12:00:52.0187856+03:00\",\r\n    \"endTime\": \"2020-08-21T12:01:22.0720038+03:00\",\r\n    \"totalRunTime\": 30053,\r\n    \"responseSize\": 5550,\r\n    \"requestSize\": 4794,\r\n    \"environment\": {\r\n      \"applicationParams\": {},\r\n      \"macroParams\": {},\r\n      \"sessionParams\": {\r\n        \"first_name\": \"John\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThe following system fields are always included in the response:\r\n\r\n#### General\r\n|Name                         |Type  |Description                                                |\r\n|-----------------------------|------|-----------------------------------------------------------|\r\n|[extractions](#extraction)   |array |A collection of extraction objects returned by Gravity API.|\r\n|[orbitRequest](#Orbit-request)|object|A set of data, based on the request sent to Gravity API.  |\r\n\r\n#### Extraction\r\n|Name                          |Type  |Description                                                                  |\r\n|------------------------------|------|-----------------------------------------------------------------------------|\r\n|key                           |string|The unique identifier for this extraction entry.                             |\r\n|[entities](#entity)           |array |A collection of information which describes an entity (as map or dictionary).|\r\n|[orbitSession](#orbit-session)|object|Gravity API session information.                                             |\r\n\r\n#### Entity\r\n|Name   |Type  |Description                                                |\r\n|-------|------|-----------------------------------------------------------|\r\n|content|object|A collection of Key/Value which describes an entity schema.|\r\n\r\n#### Orbit Session\r\n|Name       |Type   |Description                                                                |\r\n|-----------|-------|---------------------------------------------------------------------------|\r\n|sessionsId |string|Gravity API session ID. Will be the WebDriver session if WebDriver was used.|\r\n|machineName|string|The machine name under which this Gravity API session was executed.         |\r\n|machineIp  |string|The machine IP address under which this Gravity API session was executed.   |\r\n\r\n#### Orbit Request\r\n|Name                                   |Type     |Description                                                                                                       |\r\n|---------------------------------------|---------|------------------------------------------------------------------------------------------------------------------|\r\n|serializedRequest                      |string   |The serialized _**Web Automation**_ request sent by the client. _Will always be null due do privacy policies_.    |\r\n|serializedResponse                     |string   |The serialized _**Orbit Response**_ object returned by Gravity API. _Will always be null due do privacy policies_.|\r\n|[exceptions](#orbit-exception)         |array    |A collection of _**Orbit Exception**_ object thrown during execution.                                             |\r\n|[performancePoints](#performance-point)|array    |A collection of _**Orbit Performance Point**_ object.                                                             |\r\n|[screenshots](#gravity-screenshot)     |array    |A collection of _**Orbit Screenshot**_ object.                                                                    |\r\n|userName                               |string   |The user name used to execute this _**Web Automation**_ request.                                                  |\r\n|start                                  |date+time|The start time of this _**Web Automation**_.                                                                      |\r\n|end                                    |date+time|The end time of this _**Web Automation**_.                                                                        |\r\n|runTime                                |time     |The run time (total) of this _**Web Automation**_.                                                                |\r\n|responseSize                           |number   |Response size in KB of the _**Orbit Response**_ object returned by Gravity API.                                   |\r\n|requestSize                            |number   |Response size in KB of the _**Web Automation**_ object sent to Gravity API.                                       |\r\n|environment                            |object   |The run time (total) of this _**Web Automation**_.                                                                |\r\n|[environment](#environment)            |object   |The automation environment data state (parameters current value) from Rhino Server State.                         |\r\n\r\n#### Orbit Exception\r\n|Name           |Type  |Description                                                                                                        |\r\n|---------------|------|-------------------------------------------------------------------------------------------------------------------|\r\n|exception      |object|The thrown exception full stack information.                                                                       |\r\n|actionReference|number|A zero based index of the _**Gravity Plugin**_ which throw the exception in the _**Web Automation**_ actions array.|\r\n|action         |string|The _**Gravity Plugin**_ which throw the exception (i.e. Click or SendKeys).                                       |\r\n|screenshot     |string|The full path of this exception screenshot (if taken).                                                             |\r\n|repeatReference|number|A zero based index of the _**Gravity Plugin**_ which throw the exception in the _**Repeat**_ plugin actions array. |\r\n|context        |object|A context for this exception which can hold an extra information.                                                  |\r\n\r\n#### Performance Point\r\n|Name           |Type  |Description                                                                              |\r\n|---------------|------|-----------------------------------------------------------------------------------------|\r\n|time           |double|The total run time of the _**Gravity Plugin**_ (i.e. Click or SendKeys).                 |\r\n|actionReference|number|A zero based index of the _**Gravity Plugin**_ in the _**Web Automation**_ actions array.|\r\n|action         |string|The _**Gravity Plugin**_ which throw the exception (i.e. Click or SendKeys).             |\r\n|repeatReference|number|A zero based index of the _**Gravity Plugin**_ in the _**Repeat**_ plugin actions array. |\r\n\r\n#### Screenshot\r\n|Name           |Type  |Description                                                                              |\r\n|---------------|------|-----------------------------------------------------------------------------------------|\r\n|actionReference|number|A zero based index of the _**Gravity Plugin**_ in the _**Web Automation**_ actions array.|\r\n|comment        |string|Any text for describing the screenshot.                                                  |\r\n|type           |string|The image file type (i.e. PNG or JPG).                                                   |\r\n|location       |string|The full path of this exception screenshot (if taken).                                   |\r\n\r\n#### Environment\r\n|Name             |Type  |Description                                                                                                                  |\r\n|-----------------|------|-----------------------------------------------------------------------------------------------------------------------------|\r\n|applicationParams|object|The application parameters - Gravity Environment parameters, available for all runs. Will only reset when restart the server.|\r\n|applicationParams|object|The session parameters - Gravity Environment parameters, available for a single runs.  Will reset when run is completed.     |\r\n|macorParams      |object|The macro parameters - Gravity Macro parameters, available for a single runs.  Will reset when run is completed.             |\r\n\r\n### Response Codes\r\n|Code|Description                                                            |\r\n|----|-----------------------------------------------------------------------|\r\n|200 |Success, the _**Orbit Response**_ was returned as part of the response.|\r\n|500 |Fail, the server encountered an unexpected error.                      |"
							},
							"response": [
								{
									"name": "Send Gravity API Web Automation Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"{{rhino_password}}\",\r\n    \"UserName\": \"{{rhino_user}}\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"{{rhino_images}}\"\r\n  },\r\n  \"DriverParams\": \"{\\r\\n  \\\"driver\\\": \\\"ChromeDriver\\\",\\r\\n  \\\"driverBinaries\\\": \\\"D:\\\\\\\\automation-env\\\\\\\\web-drivers\\\"\\r\\n}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"GoToUrl\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --url --match:gravitymvctestapplication.azurewebsites.net}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseAllChildWindows\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"SendKeys\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//input[@id='SearchString']\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"Carson\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Click\",\r\n      \"Locator\": \"CssSelector\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"#SearchButton\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Wait\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"3000\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//td[@id]\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --count --gt:0}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"RegisterParameter\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"Jhon\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"first_name\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseBrowser\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/debug",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"debug"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					],
					"description": "This guide explains how to access and use _**Debug API**_ to simulate debugging of Rhino Spec.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "110287d8-a5bb-4821-886e-4eaf76e8b31d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e2a397ea-d8f8-433a-9078-458307a647d2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tests: Sanity",
					"item": [
						{
							"name": "Debug - Step #1 - Create - Go To Url",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79cc7612-bd27-44d4-8fcf-d62d9a0b516a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set('session_id', jsonData.extractions[0].orbitSession.sessionsId)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"{{rhino_password}}\",\r\n    \"UserName\": \"{{rhino_user}}\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"{{rhino_images}}\"\r\n  },\r\n  \"DriverParams\": \"{\\r\\n  \\\"driver\\\": \\\"ChromeDriver\\\",\\r\\n  \\\"driverBinaries\\\": \\\"{{rhino_drivers}}\\\"\\r\\n}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"GoToUrl\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/debug",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"debug"
									]
								}
							},
							"response": []
						},
						{
							"name": "Debug - Step #2 - Assert",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d46922a-cb90-4eec-bb92-cae9451e2c70",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"{{rhino_password}}\",\r\n    \"UserName\": \"{{rhino_user}}\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"{{rhino_images}}\"\r\n  },\r\n  \"DriverParams\": \"{{session_id}}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --url --match:gravitymvctestapplication.azurewebsites.net}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/debug",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"debug"
									]
								}
							},
							"response": [
								{
									"name": "Send Gravity API Web Automation Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"Aa123456!\",\r\n    \"UserName\": \"automation@rhino.api\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\"\r\n  },\r\n  \"DriverParams\": \"{\\r\\n  \\\"driver\\\": \\\"ChromeDriver\\\",\\r\\n  \\\"driverBinaries\\\": \\\"D:\\\\\\\\automation-env\\\\\\\\web-drivers\\\"\\r\\n}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"GoToUrl\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --url --match:gravitymvctestapplication.azurewebsites.net}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseAllChildWindows\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"SendKeys\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//input[@id='SearchString']\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"Carson\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Click\",\r\n      \"Locator\": \"CssSelector\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"#SearchButton\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Wait\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"3000\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//td[@id]\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --count --gt:0}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"RegisterParameter\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"Jhon\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"first_name\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseBrowser\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/debug",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"debug"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Debug - Step #3 - Close All Child Windows",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09c7fb17-0877-4275-ac27-ef5b3899f393",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"{{rhino_password}}\",\r\n    \"UserName\": \"{{rhino_user}}\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"{{rhino_images}}\"\r\n  },\r\n  \"DriverParams\": \"{{session_id}}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"CloseAllChildWindows\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/debug",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"debug"
									]
								}
							},
							"response": [
								{
									"name": "Send Gravity API Web Automation Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"Aa123456!\",\r\n    \"UserName\": \"automation@rhino.api\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\"\r\n  },\r\n  \"DriverParams\": \"{\\r\\n  \\\"driver\\\": \\\"ChromeDriver\\\",\\r\\n  \\\"driverBinaries\\\": \\\"D:\\\\\\\\automation-env\\\\\\\\web-drivers\\\"\\r\\n}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"GoToUrl\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --url --match:gravitymvctestapplication.azurewebsites.net}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseAllChildWindows\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"SendKeys\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//input[@id='SearchString']\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"Carson\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Click\",\r\n      \"Locator\": \"CssSelector\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"#SearchButton\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Wait\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"3000\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//td[@id]\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --count --gt:0}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"RegisterParameter\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"Jhon\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"first_name\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseBrowser\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/debug",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"debug"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Debug - Step #4 - Send Keys",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dc8bc876-1e56-42b5-adf5-2311da818da0",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"{{rhino_password}}\",\r\n    \"UserName\": \"{{rhino_user}}\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"{{rhino_images}}\"\r\n  },\r\n  \"DriverParams\": \"{{session_id}}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"SendKeys\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//input[@id='SearchString']\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"Carson\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/debug",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"debug"
									]
								}
							},
							"response": [
								{
									"name": "Send Gravity API Web Automation Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"Aa123456!\",\r\n    \"UserName\": \"automation@rhino.api\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\"\r\n  },\r\n  \"DriverParams\": \"{\\r\\n  \\\"driver\\\": \\\"ChromeDriver\\\",\\r\\n  \\\"driverBinaries\\\": \\\"D:\\\\\\\\automation-env\\\\\\\\web-drivers\\\"\\r\\n}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"GoToUrl\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --url --match:gravitymvctestapplication.azurewebsites.net}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseAllChildWindows\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"SendKeys\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//input[@id='SearchString']\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"Carson\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Click\",\r\n      \"Locator\": \"CssSelector\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"#SearchButton\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Wait\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"3000\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//td[@id]\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --count --gt:0}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"RegisterParameter\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"Jhon\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"first_name\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseBrowser\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/debug",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"debug"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Debug - Step #5 - Click",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "29895971-4f0f-482b-b089-fc960ff74369",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"{{rhino_password}}\",\r\n    \"UserName\": \"{{rhino_user}}\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"{{rhino_images}}\"\r\n  },\r\n  \"DriverParams\": \"{{session_id}}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"Click\",\r\n      \"Locator\": \"CssSelector\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"#SearchButton\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/debug",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"debug"
									]
								}
							},
							"response": [
								{
									"name": "Send Gravity API Web Automation Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"Aa123456!\",\r\n    \"UserName\": \"automation@rhino.api\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\"\r\n  },\r\n  \"DriverParams\": \"{\\r\\n  \\\"driver\\\": \\\"ChromeDriver\\\",\\r\\n  \\\"driverBinaries\\\": \\\"D:\\\\\\\\automation-env\\\\\\\\web-drivers\\\"\\r\\n}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"GoToUrl\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --url --match:gravitymvctestapplication.azurewebsites.net}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseAllChildWindows\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"SendKeys\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//input[@id='SearchString']\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"Carson\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Click\",\r\n      \"Locator\": \"CssSelector\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"#SearchButton\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Wait\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"3000\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//td[@id]\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --count --gt:0}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"RegisterParameter\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"Jhon\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"first_name\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseBrowser\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/debug",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"debug"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Debug - Step #6 - Wait",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "76c5887f-9b50-4d74-abd0-d36ad131b3a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"{{rhino_password}}\",\r\n    \"UserName\": \"{{rhino_user}}\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"{{rhino_images}}\"\r\n  },\r\n  \"DriverParams\": \"{{session_id}}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"Wait\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"3000\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/debug",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"debug"
									]
								}
							},
							"response": [
								{
									"name": "Send Gravity API Web Automation Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"Aa123456!\",\r\n    \"UserName\": \"automation@rhino.api\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\"\r\n  },\r\n  \"DriverParams\": \"{\\r\\n  \\\"driver\\\": \\\"ChromeDriver\\\",\\r\\n  \\\"driverBinaries\\\": \\\"D:\\\\\\\\automation-env\\\\\\\\web-drivers\\\"\\r\\n}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"GoToUrl\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --url --match:gravitymvctestapplication.azurewebsites.net}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseAllChildWindows\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"SendKeys\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//input[@id='SearchString']\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"Carson\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Click\",\r\n      \"Locator\": \"CssSelector\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"#SearchButton\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Wait\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"3000\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//td[@id]\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --count --gt:0}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"RegisterParameter\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"Jhon\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"first_name\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseBrowser\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/debug",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"debug"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Debug - Step #7 - Assert",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c69d476c-5864-40ee-9d2d-d8c30c7612e3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"{{rhino_password}}\",\r\n    \"UserName\": \"{{rhino_user}}\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"{{rhino_images}}\"\r\n  },\r\n  \"DriverParams\": \"{{session_id}}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//td[@id]\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --count --gt:0}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/debug",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"debug"
									]
								}
							},
							"response": [
								{
									"name": "Send Gravity API Web Automation Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"Aa123456!\",\r\n    \"UserName\": \"automation@rhino.api\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\"\r\n  },\r\n  \"DriverParams\": \"{\\r\\n  \\\"driver\\\": \\\"ChromeDriver\\\",\\r\\n  \\\"driverBinaries\\\": \\\"D:\\\\\\\\automation-env\\\\\\\\web-drivers\\\"\\r\\n}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"GoToUrl\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --url --match:gravitymvctestapplication.azurewebsites.net}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseAllChildWindows\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"SendKeys\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//input[@id='SearchString']\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"Carson\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Click\",\r\n      \"Locator\": \"CssSelector\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"#SearchButton\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Wait\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"3000\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//td[@id]\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --count --gt:0}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"RegisterParameter\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"Jhon\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"first_name\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseBrowser\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/debug",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"debug"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Debug - Step #8 - Register Parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ac22a516-54c6-43c9-b094-daac11733d59",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"{{rhino_password}}\",\r\n    \"UserName\": \"{{rhino_user}}\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"{{rhino_images}}\"\r\n  },\r\n  \"DriverParams\": \"{{session_id}}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"RegisterParameter\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"Jhon\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"first_name\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/debug",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"debug"
									]
								}
							},
							"response": [
								{
									"name": "Send Gravity API Web Automation Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"Aa123456!\",\r\n    \"UserName\": \"automation@rhino.api\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\"\r\n  },\r\n  \"DriverParams\": \"{\\r\\n  \\\"driver\\\": \\\"ChromeDriver\\\",\\r\\n  \\\"driverBinaries\\\": \\\"D:\\\\\\\\automation-env\\\\\\\\web-drivers\\\"\\r\\n}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"GoToUrl\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --url --match:gravitymvctestapplication.azurewebsites.net}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseAllChildWindows\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"SendKeys\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//input[@id='SearchString']\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"Carson\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Click\",\r\n      \"Locator\": \"CssSelector\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"#SearchButton\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Wait\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"3000\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//td[@id]\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --count --gt:0}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"RegisterParameter\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"Jhon\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"first_name\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseBrowser\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/debug",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"debug"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Debug - Step #9 - Close Browser",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ecf1e8d6-b467-4dfe-b552-619c82f74598",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"{{rhino_password}}\",\r\n    \"UserName\": \"{{rhino_user}}\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"{{rhino_images}}\"\r\n  },\r\n  \"DriverParams\": \"{{session_id}}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"CloseBrowser\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/api/v3/debug",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v3",
										"debug"
									]
								}
							},
							"response": [
								{
									"name": "Send Gravity API Web Automation Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"DataSource\": null,\r\n  \"Authentication\": {\r\n    \"Password\": \"Aa123456!\",\r\n    \"UserName\": \"automation@rhino.api\"\r\n  },\r\n  \"EngineConfiguration\": {\r\n    \"MaxParallel\": 1,\r\n    \"FailOnException\": false,\r\n    \"OptimalThreshold\": 3.0,\r\n    \"QualityThreshold\": 0.0,\r\n    \"ToleranceThreshold\": 0.0,\r\n    \"Priority\": 0,\r\n    \"Severity\": 0,\r\n    \"ErrorOnExitCode\": 0,\r\n    \"ElementSearchingTimeout\": 15000,\r\n    \"PageLoadTimeout\": 60000,\r\n    \"RetrunExceptions\": true,\r\n    \"ReturnPerformancePoints\": true,\r\n    \"ReturnEnvironment\": true,\r\n    \"TerminateOnAssertFailure\": false\r\n  },\r\n  \"ScreenshotsConfiguration\": {\r\n    \"KeepOriginal\": false,\r\n    \"ReturnScreenshots\": true,\r\n    \"ScreenshotsOut\": \"D:\\\\sites\\\\RhinoOutputs\\\\Images\"\r\n  },\r\n  \"DriverParams\": \"{\\r\\n  \\\"driver\\\": \\\"ChromeDriver\\\",\\r\\n  \\\"driverBinaries\\\": \\\"D:\\\\\\\\automation-env\\\\\\\\web-drivers\\\"\\r\\n}\",\r\n  \"Extractions\": null,\r\n  \"Actions\": [\r\n    {\r\n      \"ActionType\": \"GoToUrl\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"https://gravitymvctestapplication.azurewebsites.net/student\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --url --match:gravitymvctestapplication.azurewebsites.net}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseAllChildWindows\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"SendKeys\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//input[@id='SearchString']\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"Carson\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Click\",\r\n      \"Locator\": \"CssSelector\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"#SearchButton\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Wait\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"3000\"\r\n    },\r\n    {\r\n      \"ActionType\": \"Assert\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"//td[@id]\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"{{$ --count --gt:0}}\"\r\n    },\r\n    {\r\n      \"ActionType\": \"RegisterParameter\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"Jhon\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"first_name\"\r\n    },\r\n    {\r\n      \"ActionType\": \"CloseBrowser\",\r\n      \"Locator\": \"Xpath\",\r\n      \"Reference\": 0,\r\n      \"RepeatReference\": 0,\r\n      \"Actions\": [],\r\n      \"ElementAttributeToActOn\": \"\",\r\n      \"ElementToActOn\": \"\",\r\n      \"RegularExpression\": \".*\",\r\n      \"Argument\": \"\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{endpoint}}/api/v3/debug",
											"host": [
												"{{endpoint}}"
											],
											"path": [
												"api",
												"v3",
												"debug"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "# API - Introduction\r\nUse the following API methods to simulate a debugging process of your automation and gets underline exceptions and extractions.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8e1cf541-b879-4ed8-8b41-a99e16706385",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cecbbbd2-431f-4abf-b3ab-e0294fe43420",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "One Time Cleanup",
			"item": [
				{
					"name": "Delete Test Case Collections",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/api/v3/tests",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v3",
								"tests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Page Model Collections",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "85ec3296-4275-4d5c-99db-721f1bf8d359",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/api/v3/models",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v3",
								"models"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Configurations",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/api/v3/configurations",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v3",
								"configurations"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{rhino_password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{rhino_user}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d3c7d087-f5d4-49b2-a793-2310a45f0565",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "94944dd5-51e1-4174-8f42-08aee683963e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "3fead036-4510-4d6a-b9b4-0229d2b6cc1c",
			"key": "collection_id",
			"value": "e869c1e6-a81d-4d7c-8a6e-8dae7365ec67"
		},
		{
			"id": "bcdfb69d-ad70-40ba-bee1-d086a68c517f",
			"key": "configuration_id",
			"value": "f645c26c-7208-45b9-982c-6de9b4c11991"
		},
		{
			"id": "1827c697-0c2f-4fbd-8019-8b06651c8ebe",
			"key": "endpoint",
			"value": "https://localhost:5001"
		},
		{
			"id": "36f0ca84-e4e0-4038-8431-756041299dbd",
			"key": "rhino_drivers",
			"value": "."
		},
		{
			"id": "6a80f338-448e-4857-90a0-1b863022aeb6",
			"key": "rhino_reports",
			"value": "D:\\\\garbage\\\\RhinoReportPortal\\\\Test Run Reports\\\\rhino"
		},
		{
			"id": "172be483-7b5b-47a0-9b05-ab3e4428f0a4",
			"key": "rhino_reports_connection_string",
			"value": "Server=.\\\\SQLExpress;Database=TestingWarehouse;Trusted_Connection=True;User Id=<db_user>;Password=<db_password>;"
		},
		{
			"id": "6c8ca48f-7009-4fc0-988c-3ad27ba5046a",
			"key": "rhino_user",
			"value": ""
		},
		{
			"id": "3dd5fb87-ac1c-4d0f-8e7a-330b1f362bb9",
			"key": "rhino_password",
			"value": ""
		},
		{
			"id": "f5541d50-d397-4c3b-b854-5b3f3333e636",
			"key": "rhino_images",
			"value": "D:\\\\garbage\\\\imagesOut"
		},
		{
			"id": "3597454c-6d06-42db-b64b-e24a35d537c1",
			"key": "rhino_logs",
			"value": "D:\\\\garbage\\\\RhinoReportPortal\\\\Logs"
		},
		{
			"id": "32016541-1028-4b14-ab7b-e0283f05e297",
			"key": "models_id",
			"value": "b8fd7ead-bc41-423d-bd7b-02b535ec4cc6"
		},
		{
			"id": "61f37aee-e65d-42ce-90f5-1130c260ca40",
			"key": "session_id",
			"value": "73c41a9aa676b8de59f38ff4e127b73b"
		}
	],
	"protocolProfileBehavior": {}
}