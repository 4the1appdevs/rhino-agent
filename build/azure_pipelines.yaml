# https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml

name: Rhino.Agent.$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

trigger:
  branches:
    include:
    - master

pool:
  name: Default

variables:
  group: github.com
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: Restore Dependencies
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'
    vstsFeed: '6ed1caf9-de4f-48e8-8276-201533d86a19'
    verbosityRestore: 'Diagnostic'

- task: DotNetCoreCLI@2
  displayName: Build Projects
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Execute Automation Tests
  inputs:
    command: 'test'
    projects: '**/*[Tt]ests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
    testRunTitle: 'Automation Testing --- $(Build.BuildNumber)'

- task: DotNetCoreCLI@2
  displayName: Publish Files to $(build.artifactstagingdirectory)/$(Build.BuildNumber)
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/$(Build.BuildNumber)'
    modifyOutputPath: false

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact to Container
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: PowerShell@2
  displayName: 'Parse Build Version for GitHub Tag'
  inputs:
    targetType: 'inline'
    script: |
      # setup
      [regex]$pattern = '(\d+.?)+'
      $version        = $pattern.Matches('$(Build.BuildNumber)') | foreach-object {$_.Value}      
      # set value
      Write-Host "##vso[task.setvariable variable=buildVersion]$version"

- task: CmdLine@2
  displayName: 'Remove WiKi Folder'
  inputs:
    script: 'rmdir rhino-agent.wiki /Q /S'
    failOnStderr: true

- task: CmdLine@2
  displayName: 'Clone WiKi'
  inputs:
    script: 'git clone https://$(Rhino.PAT)@github.com/savanna-projects/rhino-agent.wiki.git'
    failOnStderr: true

- task: CmdLine@2
  displayName: 'Navigate into WiKi Folder'
  inputs:
    script: 'CD rhino-agent.wiki'
    failOnStderr: true

- task: PowerShell@2
  displayName: 'Parse & Save WiKi Files'
  inputs:
    targetType: 'inline'
    script: |
      # clean extra documents path
      #
      $home_md = (Get-Content -Path '.\pages\Home.md') -replace '(?<=./)[^\s]*/',''
      #
      # clean .md suffix
      $home_md = (Get-Content -Path '.\pages\Home.md') -replace '.md',''
      #
      # save WiKi Home.md file
      Set-Content -Path '.\pages\Home.md' -Value $home_md

- task: CmdLine@2
  displayName: 'Add WiKi Changes'
  inputs:
    script: 'git add .'
    failOnStderr: true

- task: CmdLine@2
  displayName: 'Commit WiKi Changes'
  inputs:
    script: 'git commit -m "v$(buildVersion) - WiKi Updates"'
    failOnStderr: true

- task: CmdLine@2
  displayName: 'Push WiKi Changes'
  inputs:
    script: 'git push'
    failOnStderr: true